{"version":3,"sources":["webpack:///./src/apps/ANC/Views/Encounters/Obsteric.vue?a098","webpack:///./src/apps/ANC/Services/anc_obsteric_service.ts","webpack:///./src/apps/ANC/Views/Encounters/Obsteric.vue","webpack:///./src/apps/ANC/Views/Encounters/Obsteric.vue?a925","webpack:///./node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","webpack:///./node_modules/@babel/runtime/helpers/esm/slicedToArray.js","webpack:///./src/guidelines/encounter_guidelines.ts","webpack:///./node_modules/cache-loader/dist/cjs.js","webpack:///./src/views/EncounterMixin.vue","webpack:///./node_modules/vue-loader-v16/dist/templateLoader.js","webpack:///./src/components/Forms/HisStandardForm.vue","webpack:///./src/utils/GuidelineEngine.ts"],"names":["render","_ctx","_cache","$props","$setup","$data","$options","_component_his_standard_form","_resolveComponent","_component_ion_page","_openBlock","_createBlock","default","_withCtx","_createVNode","fields","skipSummary","onFinishAction","onFinish","cancelDestinationPath","cancelDestination","_","AncObstericService","patientID","providerID","para","gravida","nextGravida","this","getFirstValueNumber","AppEncounterService","defineComponent","components","IonPage","mixins","EncounterMixinVue","data","service","watch","ready","handler","initData","getFields","immediate","methods","computedData","resolveObs","obs","createEncounter","saveObservationList","nextTask","id","helpText","type","FieldType","TT_NUMBER","defaultValue","beforeNext","v","parseInt","value","alertConfirmation","computedValue","buildValueNumber","validation","validateSeries","Validation","required","rangeOf","condition","f","TT_ANC_PREGNANCY_INPUT_CONFIG","config","hiddenFooterBtns","pregnancyCount","TT_ANC_PREGNANCY_DETAILS_INPUT","abortionCount","known_pregnancies","some","p","isChecked","inArray","i","label","filter","d","other","map","options","knownAbortions","num","push","getNumberOrdinal","field","patient","getBirthdate","split","minY","getDate","maxY","TT_SELECT","buildValueText","mapStrToOptions","buildValueCoded","successfulPregnancyData","rowTitles","onValueUpdate","rowItems","forEach","disabled","TT_TEXT","match","includes","customKeyboard","onUnknownEstimateField","mapOptions","noChars","yesNoOptions","TT_AGE_INPUT","TT_MULTI_SELECT_GRID","hasMissingValues","Boolean","onClick","option","listData","l","visible","__exports__","_iterableToArrayLimit","arr","_i","Symbol","iterator","_s","_e","_arr","_n","_d","call","next","done","length","err","_slicedToArray","arrayWithHoles","iterableToArrayLimit","unsupportedIterableToArray","nonIterableRest","FlowState","dformat","HisDate","toStandardHisDisplayFormat","ENCOUNTER_GUIDELINES","priority","actions","alert","outcomeStartDate","infoActionSheet","name","slot","color","action","GO_TO_PATIENT_DASHBOARD","CHANGE_PATIENT_OUTCOME","CONTINUE","conditions","outcome","startDate","sessionDate","birthDate","CHANGE_SESSION_DATE","selection","providers","encounterName","apiDate","optionsActionSheet","role","modal","flowState","SET_PROVIDER","isBdeMode","isBDE","HisStandardForm","facts","route","params","patient_id","Store","get","then","patientData","setEncounterFacts","checkEncounterGuidelines","deep","computed","patientDashboardUrl","runflowState","state","states","username","provider","find","person_id","$router","EXIT","gotoPatientDashboard","findings","matchToGuidelines","index","finding","status","program","e","console","error","toastDanger","ProgramService","getSessionDate","getCachedApiDate","$route","toString","toUpperCase","sort","a","b","usernameA","usernameB","isEmpty","person","names","latestName","given_name","family_name","toOption","items","path","toYesNoOption","values","yesNoUnknownOptions","tag","Object","reduce","accum","cur","Array","isArray","concat","Promise","all","expression","_resolveDynamicComponent","formType","activeField","onOnFinish","onOnIndex","onIndex","TouchScreenForm","emits","props","Function","String","formData","$emit","isCondition","ignored","undefined","prop","every","sortByRelevance","guidelines","target","targetEvent","matches","guidelineIndex","targetValidations","title","description","text","info"],"mappings":"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","file":"js/chunk-238d182f.35c79cc3.js","sourcesContent":["import { resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_his_standard_form = _resolveComponent(\"his-standard-form\")\n  const _component_ion_page = _resolveComponent(\"ion-page\")\n\n  return (_openBlock(), _createBlock(_component_ion_page, null, {\n    default: _withCtx(() => [\n      _createVNode(_component_his_standard_form, {\n        fields: _ctx.fields,\n        skipSummary: true,\n        onFinishAction: _ctx.onFinish,\n        cancelDestinationPath: _ctx.cancelDestination\n      }, null, 8, [\"fields\", \"onFinishAction\", \"cancelDestinationPath\"])\n    ]),\n    _: 1\n  }))\n}","import { AppEncounterService } from \"@/services/app_encounter_service\";\n\nexport class AncObstericService extends AppEncounterService {\n    para: number;\n    gravida: number;\n    nextGravida: number;\n    constructor(patientID: number, providerID: number) {\n        super(patientID, 82, providerID)\n        this.para = 0\n        this.gravida = 0\n        this.nextGravida = 0\n    }\n\n    async initData() {\n        this.para = (await this.getFirstValueNumber('Parity')) || 0\n        this.gravida = (await this.getFirstValueNumber('Gravida')) || 0\n        this.nextGravida = this.gravida > 0 ? this.gravida + 1 : 0\n    }\n}\n","\nimport EncounterMixinVue from '@/views/EncounterMixin.vue'\nimport { FieldType } from \"@/components/Forms/BaseFormElements\"\nimport { defineComponent } from 'vue'\nimport { AncObstericService } from \"@/apps/ANC/Services/anc_obsteric_service\"\nimport { Field, Option } from '@/components/Forms/FieldInterface'\nimport Validation from \"@/components/Forms/validations/StandardValidations\"\nimport { IonPage } from \"@ionic/vue\"\nimport { ObsValue } from '@/services/observation_service'\nimport { alertConfirmation } from '@/utils/Alerts'\nimport { getNumberOrdinal } from \"@/utils/Strs\"\n\nexport default defineComponent({\n  components: { IonPage },\n  mixins: [EncounterMixinVue],\n  data: () => ({\n    service: {} as any\n  }),\n  watch: {\n    ready: {\n      async handler(ready: boolean) {\n        if (ready) {\n            this.service = new AncObstericService(this.patientID, this.providerID)\n\t\t\tawait this.service.initData()\n            this.fields = this.getFields()\n        } \n      },\n      immediate: true\n    }\n  },\n  methods: {\n    async onFinish(_: any, computedData: any) {\n      const obs = await this.resolveObs(computedData)\n      await this.service.createEncounter()\n      await this.service.saveObservationList(obs as ObsValue[])\n      this.nextTask()\n    },\n    getFields(): Field[] {\n        return [\n            {\n                id: 'gravida',\n                helpText: 'Gravida',\n                type: FieldType.TT_NUMBER,\n\t\t\t\tdefaultValue: () => this.service.nextGravida > 0 ? this.service.nextGravida : null,\n                beforeNext: async (v: Option) => {\n                    if (parseInt(`${v.value}`) > 9) {\n                        if (!(await alertConfirmation(\n\t\t\t\t\t\t\t'The value is greater than maximum 9. Are you sure about this value?'\n\t\t\t\t\t\t\t))) {\n                            return false\n                        }\n                    }\n                    return true\n                },\n                computedValue: (v: Option) => this.service.buildValueNumber('Gravida', v.value),\n                validation: (v: Option) => this.validateSeries([\n                    () => Validation.required(v),\n                    () => Validation.rangeOf(v, this.service.nextGravida || 1, 19)\n                ])\n            },\n            {\n                id: 'para',\n                helpText: 'Para',\n                type: FieldType.TT_NUMBER,\n                condition: (f: any) => f.gravida.value > 1,\n                computedValue: (v: Option) => this.service.buildValueNumber('Parity', v.value), \n                validation: (v: Option, f: any) => this.validateSeries([\n                    () => Validation.required(v),\n                    () => Validation.rangeOf(v, this.service.para, f.gravida.value - 1)\n                ])\n            },\n            {\n                id: 'known_pregnancies',\n                helpText: 'Pregnancies with available information',\n                type: FieldType.TT_ANC_PREGNANCY_INPUT_CONFIG,\n                condition: (f: any) => f.gravida.value > 1 && f.para.value > 0,\n                config: {\n\t\t\t\t\thiddenFooterBtns: ['Clear'],\n\t\t\t\t\tpregnancyCount: (f: any) => f.para.value\n                }\n            },\n            {\n\t\t\t\tid: 'pregnancy_details',\n\t\t\t\thelpText: 'Pregnancy details',\n\t\t\t\ttype: FieldType.TT_ANC_PREGNANCY_DETAILS_INPUT,\n\t\t\t\tcondition: (f: any) => {\n\t\t\t\t\tconst abortionCount = (parseInt(`${f.gravida.value}`) - parseInt(`${f.para.value}`)) - 1\n\t\t\t\t\treturn f.gravida.value > 1 && (abortionCount >= 1 || f.known_pregnancies.some(\n\t\t\t\t\t\t(p: Option) => p.isChecked\n\t\t\t\t\t))\n\t\t\t\t},\n\t\t\t\tvalidation: (v: Option[]) => this.validateSeries([\n\t\t\t\t\t() => Validation.required(v),\n\t\t\t\t\t() => this.inArray(v, (i: Option) => i.label === '_INCOMPLETE_RECORD_ERROR_')\n\t\t\t\t\t\t? ['Pregnancy details incomplete!!']\n\t\t\t\t\t\t: null\n\t\t\t\t]),\n\t\t\t\tconfig: {\n\t\t\t\t\thiddenFooterBtns: ['Clear']\n\t\t\t\t},\n\t\t\t\tcomputedValue: (v: Option[]) => v.filter(d => d?.other?.obs || false).map((d: Option) => d.other.obs),\n\t\t\t\toptions: (f: any) => {\n\t\t\t\t\tconst abortionCount = (parseInt(`${f.gravida.value}`) - parseInt(`${f.para.value}`)) - 1\n\t\t\t\t\tconst knownAbortions: Option[] = []\n\t\t\t\t\tfor(let i=0; i < abortionCount; ++i) {\n\t\t\t\t\t\tconst num = i + 1\n\t\t\t\t\t\tknownAbortions.push({\n\t\t\t\t\t\t\tlabel: `<span style=\"color:red;\">${num}<sup>${getNumberOrdinal(num)}</sup> Abortion</span>`,\n\t\t\t\t\t\t\tvalue: -1,\n\t\t\t\t\t\t\tother: {\n\t\t\t\t\t\t\t\tdata: [\n\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tlabel: 'Year of abortion',\n\t\t\t\t\t\t\t\t\t\t\tvalue: '',\n\t\t\t\t\t\t\t\t\t\t\trequired: true,\n\t\t\t\t\t\t\t\t\t\t\tfield: {\n\t\t\t\t\t\t\t\t\t\t\t\tid: 'year',\n\t\t\t\t\t\t\t\t\t\t\t\thelpText: 'Year of abortion',\n\t\t\t\t\t\t\t\t\t\t\t\ttype: FieldType.TT_NUMBER,\n\t\t\t\t\t\t\t\t\t\t\t\tcomputedValue: (v: Option) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn this.service.buildValueNumber('Year of abortion', v.value)\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\tvalidation: (v: Option) => this.validateSeries([\n\t\t\t\t\t\t\t\t\t\t\t\t\t() => Validation.required(v),\n\t\t\t\t\t\t\t\t\t\t\t\t\t() => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst [minY] = this.patient.getBirthdate().split('-')\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst [maxY] = this.service.getDate().split('-')\n\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn Validation.rangeOf(v, minY, maxY)\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t])\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tlabel: 'Place of abortion',\n\t\t\t\t\t\t\t\t\t\t\tvalue: '',\n\t\t\t\t\t\t\t\t\t\t\trequired: true,\n\t\t\t\t\t\t\t\t\t\t\tfield: {\n\t\t\t\t\t\t\t\t\t\t\t\tid: 'place_of_abortion',\n\t\t\t\t\t\t\t\t\t\t\t\thelpText: 'Place of abortion',\n\t\t\t\t\t\t\t\t\t\t\t\ttype: FieldType.TT_SELECT,\n\t\t\t\t\t\t\t\t\t\t\t\tcomputedValue: (v: Option) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t// concept taken as is from old anc system\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn this.service.buildValueText('Place of birth', v.value)\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\tvalidation: (v: Option) => this.validateSeries([\n\t\t\t\t\t\t\t\t\t\t\t\t\t() => Validation.required(v)\n\t\t\t\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t\t\t\t\toptions: () => {\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn this.mapStrToOptions([\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"Health facility\", \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"In transit\", \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"TBA\", \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"Home\", \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"Other\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t])\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tlabel: 'Type of abortion',\n\t\t\t\t\t\t\t\t\t\t\tvalue: '',\n\t\t\t\t\t\t\t\t\t\t\trequired: true,\n\t\t\t\t\t\t\t\t\t\t\tfield: {\n\t\t\t\t\t\t\t\t\t\t\t\tid: 'type_of_abortion',\n\t\t\t\t\t\t\t\t\t\t\t\thelpText: 'Type of abortion',\n\t\t\t\t\t\t\t\t\t\t\t\ttype: FieldType.TT_SELECT,\n\t\t\t\t\t\t\t\t\t\t\t\tcomputedValue: (v: Option) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn this.service.buildValueCoded('Type of Abortion', v.value)\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\tvalidation: (v: Option) => this.validateSeries([\n\t\t\t\t\t\t\t\t\t\t\t\t\t() => Validation.required(v)\n\t\t\t\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t\t\t\t\toptions: () => {\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn this.mapStrToOptions([\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"Complete abortion\", \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"Incomplete abortion\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t])\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tlabel: 'Procedure done',\n\t\t\t\t\t\t\t\t\t\t\tvalue: '',\n\t\t\t\t\t\t\t\t\t\t\trequired: true,\n\t\t\t\t\t\t\t\t\t\t\tfield: {\n\t\t\t\t\t\t\t\t\t\t\t\tid: 'procedure_done',\n\t\t\t\t\t\t\t\t\t\t\t\thelpText: 'Procedure done',\n\t\t\t\t\t\t\t\t\t\t\t\ttype: FieldType.TT_SELECT,\n\t\t\t\t\t\t\t\t\t\t\t\tvalidation: (v: Option) => this.validateSeries([\n\t\t\t\t\t\t\t\t\t\t\t\t\t() => Validation.required(v)\n\t\t\t\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t\t\t\t\tcomputedValue: (v: Option) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn this.service.buildValueText('Procedure done', v.value)\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\toptions: () => {\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn this.mapStrToOptions([\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"Manual Vacuum Aspiration (MVA)\", \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"Evacuation\", \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"None\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t])\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tlabel: 'Gestation (weeks)',\n\t\t\t\t\t\t\t\t\t\t\tvalue: '',\n\t\t\t\t\t\t\t\t\t\t\trequired: true,\n\t\t\t\t\t\t\t\t\t\t\tfield: {\n\t\t\t\t\t\t\t\t\t\t\t\tid: 'gestation_weeks',\n\t\t\t\t\t\t\t\t\t\t\t\thelpText: 'Gestation (weeks)',\n\t\t\t\t\t\t\t\t\t\t\t\ttype: FieldType.TT_NUMBER,\n\t\t\t\t\t\t\t\t\t\t\t\tcomputedValue: (v: Option) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn this.service.buildValueNumber('Gestation', v.value)\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\tvalidation: (v: Option) => this.validateSeries([\n\t\t\t\t\t\t\t\t\t\t\t\t\t() => Validation.required(v),\n\t\t\t\t\t\t\t\t\t\t\t\t\t() => Validation.rangeOf(v, 0, 28)\n\t\t\t\t\t\t\t\t\t\t\t\t])\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t\tconst successfulPregnancyData = (f.known_pregnancies || []).filter((p: Option) => p.isChecked).map((p: Option) => {\n\t\t\t\t\t\tconst data: any = []\n\t\t\t\t\t\tconst rowTitles = []\n\t\t\t\t\t\tfor(let i=0; i < p.value; ++i) {\n\t\t\t\t\t\t\trowTitles.push(`${i+1}<sup>${getNumberOrdinal(i+1)}</sup> born in ${p.label} pregnancy`)\n\t\t\t\t\t\t\tdata.push([\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tlabel: 'Year of birth',\n\t\t\t\t\t\t\t\t\tvalue: '',\n\t\t\t\t\t\t\t\t\trequired: true,\n\t\t\t\t\t\t\t\t\tfield: {\n\t\t\t\t\t\t\t\t\t\tid: 'year',\n\t\t\t\t\t\t\t\t\t\thelpText: 'Year of birth',\n\t\t\t\t\t\t\t\t\t\ttype: FieldType.TT_NUMBER,\n\t\t\t\t\t\t\t\t\t\tcomputedValue: (v: Option) => {\n\t\t\t\t\t\t\t\t\t\t\treturn this.service.buildValueNumber('Year of Birth', v.value)\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\tvalidation: (v: Option) => this.validateSeries([\n\t\t\t\t\t\t\t\t\t\t\t() => Validation.required(v),\n\t\t\t\t\t\t\t\t\t\t\t() => {\n\t\t\t\t\t\t\t\t\t\t\t\tconst [minY] = this.patient.getBirthdate().split('-')\n\t\t\t\t\t\t\t\t\t\t\t\tconst [maxY] = this.service.getDate().split('-')\n\t\t\t\t\t\t\t\t\t\t\t\treturn Validation.rangeOf(v, minY, maxY) \n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t])\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tlabel: 'Place of birth',\n\t\t\t\t\t\t\t\t\tvalue: '',\n\t\t\t\t\t\t\t\t\trequired: true,\n\t\t\t\t\t\t\t\t\tfield: {\n\t\t\t\t\t\t\t\t\t\tid: 'place_of_birth',\n\t\t\t\t\t\t\t\t\t\thelpText: 'Place of birth',\n\t\t\t\t\t\t\t\t\t\ttype: FieldType.TT_SELECT,\n\t\t\t\t\t\t\t\t\t\tcomputedValue: (v: Option) => {\n\t\t\t\t\t\t\t\t\t\t\treturn this.service.buildValueText('Place of birth', v.value)\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\tvalidation: (v: Option) => Validation.required(v), \n\t\t\t\t\t\t\t\t\t\toptions: () => {\n\t\t\t\t\t\t\t\t\t\t\treturn this.mapStrToOptions([\n\t\t\t\t\t\t\t\t\t\t\t\t\"Health facility\", \n\t\t\t\t\t\t\t\t\t\t\t\t\"In transit\", \n\t\t\t\t\t\t\t\t\t\t\t\t\"TBA\", \n\t\t\t\t\t\t\t\t\t\t\t\t\"Home\"\n\t\t\t\t\t\t\t\t\t\t\t])\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tlabel: 'Gestation (weeks)',\n\t\t\t\t\t\t\t\t\tvalue: '',\n\t\t\t\t\t\t\t\t\trequired: true,\n\t\t\t\t\t\t\t\t\tfield: {\n\t\t\t\t\t\t\t\t\t\tid: 'gestation_weeks',\n\t\t\t\t\t\t\t\t\t\thelpText: 'Gestation (weeks)',\n\t\t\t\t\t\t\t\t\t\ttype: FieldType.TT_NUMBER,\n\t\t\t\t\t\t\t\t\t\tcomputedValue: (v: Option) => {\n\t\t\t\t\t\t\t\t\t\t\treturn this.service.buildValueNumber('Gestation', v.value)\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\tvalidation: (v: Option) => this.validateSeries([\n\t\t\t\t\t\t\t\t\t\t\t() => Validation.required(v),\n\t\t\t\t\t\t\t\t\t\t\t() => Validation.rangeOf(v, 24, 42)\n\t\t\t\t\t\t\t\t\t\t])\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tlabel: 'Method of delivery',\n\t\t\t\t\t\t\t\t\tvalue: '',\n\t\t\t\t\t\t\t\t\trequired: true,\n\t\t\t\t\t\t\t\t\tfield: {\n\t\t\t\t\t\t\t\t\t\tid: 'method_of_delivery',\n\t\t\t\t\t\t\t\t\t\thelpText: 'Method of delivery',\n\t\t\t\t\t\t\t\t\t\ttype: FieldType.TT_SELECT,\n\t\t\t\t\t\t\t\t\t\tcomputedValue: (v: Option) => {\n\t\t\t\t\t\t\t\t\t\t\treturn this.service.buildValueText('Method of delivery', v.value)\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\tvalidation: (v: Option) => Validation.required(v),\n\t\t\t\t\t\t\t\t\t\toptions: () => {\n\t\t\t\t\t\t\t\t\t\t\treturn this.mapStrToOptions([\n\t\t\t\t\t\t\t\t\t\t\t\t\"Spontaneous Vertex\", \n\t\t\t\t\t\t\t\t\t\t\t\t\"Caesarean Section\", \n\t\t\t\t\t\t\t\t\t\t\t\t\"Vacuum extraction delivery\", \n\t\t\t\t\t\t\t\t\t\t\t\t\"Breech\", \n\t\t\t\t\t\t\t\t\t\t\t\t\"Forceps\", \n\t\t\t\t\t\t\t\t\t\t\t\t\"Others\"\n\t\t\t\t\t\t\t\t\t\t\t])\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tlabel: 'Condition at birth',\n\t\t\t\t\t\t\t\t\tvalue: '',\n\t\t\t\t\t\t\t\t\trequired: true,\n\t\t\t\t\t\t\t\t\tfield: {\n\t\t\t\t\t\t\t\t\t\tid: 'condition_at_birth',\n\t\t\t\t\t\t\t\t\t\thelpText: 'Condition at birth',\n\t\t\t\t\t\t\t\t\t\ttype: FieldType.TT_SELECT,\n\t\t\t\t\t\t\t\t\t\tcomputedValue: (v: Option) => {\n\t\t\t\t\t\t\t\t\t\t\treturn this.service.buildValueText('Condition at Birth', v.value)\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\tonValueUpdate: (v: Option, rowItems: any) => {\n\t\t\t\t\t\t\t\t\t\t\trowItems.forEach((i: any) => {\n\t\t\t\t\t\t\t\t\t\t\t\tif (i.label === 'Alive now') {\n\t\t\t\t\t\t\t\t\t\t\t\t\ti.required = v.value === 'Alive'\n\t\t\t\t\t\t\t\t\t\t\t\t\ti.disabled = v.value != 'Alive'\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\tvalidation: (v: Option) => Validation.required(v),\n\t\t\t\t\t\t\t\t\t\toptions: () => {\n\t\t\t\t\t\t\t\t\t\t\treturn this.mapStrToOptions([\n\t\t\t\t\t\t\t\t\t\t\t\t\"Alive\", \n\t\t\t\t\t\t\t\t\t\t\t\t\"Macerated Still Birth (MSB)\", \n\t\t\t\t\t\t\t\t\t\t\t\t\"Fresh Still Birth (FSB)\"\n\t\t\t\t\t\t\t\t\t\t\t])\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tlabel: 'Birth weight',\n\t\t\t\t\t\t\t\t\tvalue: '',\n\t\t\t\t\t\t\t\t\trequired: true,\n\t\t\t\t\t\t\t\t\tfield: {\n\t\t\t\t\t\t\t\t\t\tid: 'birth_weight',\n\t\t\t\t\t\t\t\t\t\thelpText: 'Birth weight',\n\t\t\t\t\t\t\t\t\t\ttype: FieldType.TT_TEXT,\n\t\t\t\t\t\t\t\t\t\tcomputedValue: (v: Option) => {\n\t\t\t\t\t\t\t\t\t\t\treturn this.service.buildValueText('Birth weight', v.value)\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\tvalidation: (v: Option) => this.validateSeries([\n\t\t\t\t\t\t\t\t\t\t\t() => Validation.required(v),\n\t\t\t\t\t\t\t\t\t\t\t() => {\n\t\t\t\t\t\t\t\t\t\t\t\tif (v.value != 'Unknown' && !(`${v.value}`.match(/^\\d{1,3}\\.\\d{1,5}$/))) {\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn [`Invalid weight ${v.value}. Don't forget decimal point`]\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\treturn null\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t() => !['N/A', 'Unknown'].includes(`${v.value}`) \n\t\t\t\t\t\t\t\t\t\t\t\t? Validation.rangeOf(v, 1, 5) \n\t\t\t\t\t\t\t\t\t\t\t\t: null,\n\t\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t\t\tconfig: {\n\t\t\t\t\t\t\t\t\t\t\tcustomKeyboard: [\n\t\t\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t\t\t['1', '2', '3'],\n\t\t\t\t\t\t\t\t\t\t\t\t\t['4', '5', '6'],\n\t\t\t\t\t\t\t\t\t\t\t\t\t['7', '8', '9'],\n\t\t\t\t\t\t\t\t\t\t\t\t\t['', '0', '.']\n\t\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t\t\t['Unknown', 'Delete']\n\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\tonUnknownEstimateField: () => { \n\t\t\t\t\t\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t\t\t\t\t\tid: 'birth_weight_estimate',\n\t\t\t\t\t\t\t\t\t\t\t\t\thelpText: 'Birth weight estimate',\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype: FieldType.TT_SELECT,\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalidation: (v: Option) => Validation.required(v),\n\t\t\t\t\t\t\t\t\t\t\t\t\toptions: () => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn this.mapOptions([\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'Normal',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'Big baby',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'Small baby'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t])\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\tnoChars: false\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tlabel: 'Alive now',\n\t\t\t\t\t\t\t\t\tvalue: '',\n\t\t\t\t\t\t\t\t\tdisabled: true,\n\t\t\t\t\t\t\t\t\trequired: false,\n\t\t\t\t\t\t\t\t\tfield: {\n\t\t\t\t\t\t\t\t\t\tid: 'alive_now',\n\t\t\t\t\t\t\t\t\t\thelpText: 'Alive now',\n\t\t\t\t\t\t\t\t\t\ttype: FieldType.TT_SELECT,\n\t\t\t\t\t\t\t\t\t\tcomputedValue: (v: Option) => {\n\t\t\t\t\t\t\t\t\t\t\treturn this.service.buildValueCoded('Alive', v.value)\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\tonValueUpdate: (v: Option, rowItems: any) => {\n\t\t\t\t\t\t\t\t\t\t\trowItems.forEach((i: any) => {\n\t\t\t\t\t\t\t\t\t\t\t\tif (i.label === 'Age at death') {\n\t\t\t\t\t\t\t\t\t\t\t\t\ti.required = v.value === 'No'\n\t\t\t\t\t\t\t\t\t\t\t\t\ti.disabled = v.value === 'Yes'\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\tvalidation: (v: Option) => this.validateSeries([\n\t\t\t\t\t\t\t\t\t\t\t() => Validation.required(v)\n\t\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t\t\toptions: () => {\n\t\t\t\t\t\t\t\t\t\t\treturn this.yesNoOptions()\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tlabel: 'Age at death',\n\t\t\t\t\t\t\t\t\tvalue: '',\n\t\t\t\t\t\t\t\t\tdisabled: true,\n\t\t\t\t\t\t\t\t\trequired: false,\n\t\t\t\t\t\t\t\t\tfield: {\n\t\t\t\t\t\t\t\t\t\tid: 'age_at_death',\n\t\t\t\t\t\t\t\t\t\thelpText: 'Age at death',\n\t\t\t\t\t\t\t\t\t\ttype: FieldType.TT_AGE_INPUT,\n\t\t\t\t\t\t\t\t\t\tcomputedValue: (v: Option) => {\n\t\t\t\t\t\t\t\t\t\t\treturn this.service.buildValueText('Age at Death', v.value)\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\tvalidation: (v: Option) => this.validateSeries([\n\t\t\t\t\t\t\t\t\t\t\t() => Validation.required(v)\n\t\t\t\t\t\t\t\t\t\t])\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t])\n\t\t\t\t\t\t}\n\t\t\t\t\t\tp.label = `${p.label} delivery`\n\t\t\t\t\t\tp.other = { data, rowTitles }\n\t\t\t\t\t\treturn p\n\t\t\t\t\t})\n\t\t\t\t\treturn [...successfulPregnancyData, ...knownAbortions] as Option[]\n\t\t\t\t}\n            },\n\t\t\t{\n\t\t\t\tid: 'previous_complications',\n\t\t\t\thelpText: 'Previous complications',\n\t\t\t\ttype: FieldType.TT_MULTI_SELECT_GRID,\n\t\t\t\tcondition: (f: any) => f.gravida.value > 1,\n\t\t\t\tvalidation: (v: Option[]) => this.validateSeries([\n\t\t\t\t\t() => Validation.required(v),\n\t\t\t\t\t() => {\n\t\t\t\t\t\tconst hasMissingValues = v.map(v => v.value==='').some(Boolean)\n\t\t\t\t\t\treturn hasMissingValues \n\t\t\t\t\t\t\t? ['Please complete Complication selection!!'] \n\t\t\t\t\t\t\t: null\n\t\t\t\t\t}\n\t\t\t\t]),\n\t\t\t\tcomputedValue: (v: Option[]) => {\n\t\t\t\t\treturn v.filter(d => d.value != '')\n\t\t\t\t\t\t.map(d => this.service.buildValueCoded(d.label, d.value))\n\t\t\t\t},\n\t\t\t\tconfig: {\n\t\t\t\t\thiddenFooterBtns: ['Clear']\n\t\t\t\t},\n\t\t\t\toptions: () => {\n\t\t\t\t\treturn [\n\t\t\t\t\t\t{ \n\t\t\t\t\t\t\tlabel: 'Episiotomy', \n\t\t\t\t\t\t\tvalue: '',\n\t\t\t\t\t\t\tother: {\n\t\t\t\t\t\t\t\toptions: this.yesNoOptions()\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{ \n\t\t\t\t\t\t\tlabel: 'Hemorrhage', \n\t\t\t\t\t\t\tvalue: '',\n\t\t\t\t\t\t\tother: {\n\t\t\t\t\t\t\t\toptions: this.mapStrToOptions([\n\t\t\t\t\t\t\t\t\t'No',\n\t\t\t\t\t\t\t\t\t'APH',\n\t\t\t\t\t\t\t\t\t'PPH'\n\t\t\t\t\t\t\t\t])\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{ \n\t\t\t\t\t\t\tlabel: 'Pre-eclampsia', \n\t\t\t\t\t\t\tvalue: '',\n\t\t\t\t\t\t\tother: {\n\t\t\t\t\t\t\t\tonClick: (option: Option, listData: Option[]) => {\n\t\t\t\t\t\t\t\t\tlistData.forEach(l => {\n\t\t\t\t\t\t\t\t\t\tif (l.label === 'Eclampsia') {\n\t\t\t\t\t\t\t\t\t\t\tl.other.visible = option.value === 'Yes'\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\toptions: this.yesNoOptions()\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlabel: 'Eclampsia',\n\t\t\t\t\t\t\tvalue: '',\n\t\t\t\t\t\t\tother: {\n\t\t\t\t\t\t\t\tvisible: false,\n\t\t\t\t\t\t\t\toptions: this.yesNoOptions()\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t}\n        ]\n    }\n  }\n})\n","import { render } from \"./Obsteric.vue?vue&type=template&id=20b9633a&ts=true\"\nimport script from \"./Obsteric.vue?vue&type=script&lang=ts\"\nexport * from \"./Obsteric.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/andrew-dev/Projects/HIS-Core/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","export default function _iterableToArrayLimit(arr, i) {\n  var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n\n  if (_i == null) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n\n  var _s, _e;\n\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","import { infoActionSheet, optionsActionSheet } from \"@/utils/ActionSheets\";\nimport { GuideLineInterface } from \"@/utils/GuidelineEngine\";\nimport HisDate from '@/utils/Date'\n\nexport enum FlowState {\n    SET_PROVIDER = 'SET_PROVIDER',\n    CHANGE_SESSION_DATE = 'change_session_date',\n    GO_TO_PATIENT_DASHBOARD = 'go_to_patient_dashboard',\n    CHANGE_PATIENT_OUTCOME = 'change_outcome',\n    CONTINUE = 'continue',\n    EXIT = 'exit'\n}\nconst dformat = (d: string) => HisDate.toStandardHisDisplayFormat(d)\n\nexport const ENCOUNTER_GUIDELINES: Record<string, GuideLineInterface> = {\n    \"Warn if attempting to create new encounters for a deceased patient\": {\n        priority: 1,\n        actions: {\n            alert: async ({ outcomeStartDate }: any) => {\n                const action = await infoActionSheet(\n                    'Data Integrity Issue Found',\n                    `Patient died on ${dformat(outcomeStartDate)}`,\n                    'Proceeding with this outcome might affect accuracy of some reports',\n                    [\n                        { name: 'Cancel', slot: 'end', color: 'primary'},\n                        { name: 'Change outcome', slot: 'end', color: 'primary'},\n                        { name: 'Continue Anyway', slot: 'end', color: 'danger'}\n                    ]\n                )\n                return action === 'Cancel'\n                    ? FlowState.GO_TO_PATIENT_DASHBOARD\n                    : action === 'Change outcome'\n                    ? FlowState.CHANGE_PATIENT_OUTCOME\n                    : FlowState.CONTINUE\n            }\n        },\n        conditions: {\n            outcome(outcome: string) {\n                return outcome === 'Patient died'\n            },\n            outcomeStartDate(startDate: string, { sessionDate }: any) {\n                return sessionDate >= startDate\n            }\n        }\n    },\n    \"A patient's date of birth must not be less than Session Date\": {\n        priority: 2,\n        actions: {\n            alert: async ({ birthDate, sessionDate}: any) => {\n                const action = await infoActionSheet(\n                    'Data integrity issue found', '',\n                    `Session date ${dformat(sessionDate)} is less than birth date of ${dformat(birthDate)}`,\n                    [\n                        { name: 'Cancel', slot: 'end', color: 'danger'},\n                        { name: 'Change session date', slot: 'end', color: 'success'}\n                    ]\n                )\n                return action === 'Change session date'\n                    ? FlowState.CHANGE_SESSION_DATE\n                    : FlowState.GO_TO_PATIENT_DASHBOARD\n            }\n        },\n        conditions: {\n            birthDate(birthDate: string, { sessionDate }: any) {\n                return sessionDate < birthDate\n            }\n        }\n    },\n    \"Select Encounter provider when in back data entry\": {\n        priority: 3,\n        actions: {\n            selection: async ({ providers, encounterName, sessionDate, apiDate }: any) => {\n                const modal = await optionsActionSheet(\n                    `Please select a provider for ${encounterName}`,\n                    `BDE: ${dformat(sessionDate)} | Current: ${dformat(apiDate)}`,\n                    providers,\n                    [\n                        { name: 'Cancel', color: 'danger', slot: 'start', role: 'default'},\n                        { name: 'Confirm', slot: 'end', role: 'action' }\n                    ]\n                )\n                return modal.action === 'Cancel' \n                    ? { value: -1, flowState: FlowState.GO_TO_PATIENT_DASHBOARD }\n                    : { value: modal.selection, flowState: FlowState.SET_PROVIDER }\n            }\n        },\n        conditions: {\n            isBdeMode(isBDE: boolean) {\n                return isBDE\n            }\n        }\n    }\n}","\nimport TouchScreenForm from \"@/components/Forms/TouchScreenForm.vue\";\nimport { defineComponent, PropType } from \"vue\";\nimport { Field } from \"./FieldInterface\";\n\nexport default defineComponent({\n    name: \"HisStandardForm\",\n    components: { TouchScreenForm },\n    emits: [\n        'onFinish',\n        'onIndex'\n    ],\n    data: () => ({\n        formType: 'touch-screen-form' as string\n    }),\n    props: {\n        onFinishAction: {\n            type: Function\n        },\n        skipSummary: {\n            type: Boolean,\n            default: false\n        },\n        activeField: {\n            type: String\n        },\n        fields: {\n            type: Object as PropType<Field[]>,\n            required: true\n        },\n        cancelDestinationPath: {\n            type: String,\n            required: false,\n        }\n    },\n    methods: {\n        onFinish(formData: any, computedData: any) {\n            this.$emit('onFinish', formData, computedData)\n        },\n        onIndex(i: number) {\n            this.$emit('onIndex', i)\n        }\n    }\n})\n","import script from \"./EncounterMixin.vue?vue&type=script&lang=ts\"\nexport * from \"./EncounterMixin.vue?vue&type=script&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { resolveDynamicComponent as _resolveDynamicComponent, openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return (_openBlock(), _createBlock(_resolveDynamicComponent(_ctx.formType), {\n    fields: _ctx.fields,\n    skipSummary: _ctx.skipSummary,\n    activeField: _ctx.activeField,\n    cancelDestinationPath: _ctx.cancelDestinationPath,\n    onOnFinish: _ctx.onFinish,\n    onFinish: _ctx.onFinishAction,\n    onOnIndex: _ctx.onIndex\n  }, null, 8, [\"fields\", \"skipSummary\", \"activeField\", \"cancelDestinationPath\", \"onOnFinish\", \"onFinish\", \"onOnIndex\"]))\n}","import { render } from \"./HisStandardForm.vue?vue&type=template&id=6daa0375&ts=true\"\nimport script from \"./HisStandardForm.vue?vue&type=script&lang=ts\"\nexport * from \"./HisStandardForm.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/andrew-dev/Projects/HIS-Core/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","/**\n * Compares patient facts against a predefined guideline Object.\n*/\nexport interface DescriptionInterface {\n    color?: 'primary' | 'secondary' | 'danger' | 'warning';\n    info: Function;\n    text?: string;\n    show: 'onChecked' | 'always';\n}\n\nexport interface GuideLineInterface {\n    title?: string;\n    concept?: string;\n    priority: number;\n    conditions: Record<string, Function>;\n    actions?: Record<string, any>; //TODO: should <key, Function>\n    data?: Record<string, any>;\n    description?: DescriptionInterface;\n    target?: string;\n    targetEvent?: string;\n}\n\n/**\n * Match the facts with guidelines\n * @param facts \n * @param conditions \n * @returns \n */\nfunction isCondition(facts: Record<string, any>, conditions: Record<string, Function>): boolean {\n    const state = [] \n    const ignored = [-1, '', null, undefined]\n\n    for(const prop in conditions) {\n        if (!(prop in facts)) \n            continue\n        \n        const value = facts[prop]\n        if (ignored.includes(value)) {\n            state.push(false)\n            continue\n        }\n\n        state.push(conditions[prop](value, facts))\n    }\n    return state.every(Boolean)\n}\n\n/**\n * Sort guidelines in the order of importance/relevance\n * @param findings \n * @returns \n */\nfunction sortByRelevance(findings: Array<GuideLineInterface>) {\n    return findings.sort((a, b) => a.priority < b.priority ? -1 : 1)\n}\n\n/**\n * Check the guideline for matching facts and return matching object \n * @param facts: key value pair for used for searching in guidelines\n * @param guidelines: A dictionary containing fixed rules/validations that conforms to GuideLineInterface\n * @param target: Used for matching a target defined in a guidlines before executing conditions\n * @param targetEvent: used for matching a target event in a guideline before executing conditions\n * @returns\n */\nexport function matchToGuidelines(\n    facts: Record<string, any>, \n    guidelines: Record<string, GuideLineInterface>,\n    target='', \n    targetEvent=''): Array<GuideLineInterface> {\n\n    const matches = []\n    for(const guidelineIndex in guidelines) {\n        const data: GuideLineInterface = guidelines[guidelineIndex]\n \n        const targetValidations = [\n            (data.target && target && data.target != target),\n            (data.targetEvent && targetEvent \n                && data.targetEvent != targetEvent)\n        ]\n\n        if (targetValidations.some(Boolean)) {\n            continue\n        }\n\n        if (isCondition(facts, data.conditions)) {\n            data.title = guidelineIndex\n            if (data.description) {\n                data.description.text = data.description.info(facts)\n            }\n            matches.push(data)\n        }\n    }\n    return sortByRelevance(matches)\n}\n"],"sourceRoot":""}