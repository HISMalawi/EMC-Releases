{"version":3,"sources":["webpack:///./src/apps/Registration/views/encounters/Services.vue?c750","webpack:///./src/apps/Registration/services/patient_services_service.ts","webpack:///./src/apps/Registration/views/encounters/Services.vue","webpack:///./src/apps/Registration/views/encounters/Services.vue?3247","webpack:///./src/guidelines/encounter_guidelines.ts","webpack:///./node_modules/cache-loader/dist/cjs.js","webpack:///./src/views/EncounterMixin.vue","webpack:///./node_modules/vue-loader-v16/dist/templateLoader.js","webpack:///./src/components/Forms/HisStandardForm.vue","webpack:///./src/utils/GuidelineEngine.ts"],"names":["render","_ctx","_cache","$props","$setup","$data","$options","_component_his_standard_form","_resolveComponent","_openBlock","_createBlock","cancelDestinationPath","cancelDestination","fields","onFinishAction","onSubmit","PatientServicesService","patientID","providerID","AppEncounterService","defineComponent","components","HisStandardForm","mixins","EncounterMixinVue","data","patientServicesService","watch","ready","handler","isReady","patient","getID","getFields","immediate","deep","methods","formData","computedData","createEncounter","encounter","toastWarning","resolveObs","registrationData","saveObservationList","registrationObs","nextTask","id","helpText","type","FieldType","TT_SELECT","validation","value","Validation","required","computedValue","v","obs","buildValueText","options","mapOptions","__exports__","FlowState","dformat","d","HisDate","toStandardHisDisplayFormat","ENCOUNTER_GUIDELINES","priority","actions","alert","outcomeStartDate","infoActionSheet","name","slot","color","action","GO_TO_PATIENT_DASHBOARD","CHANGE_PATIENT_OUTCOME","CONTINUE","conditions","outcome","startDate","sessionDate","birthDate","CHANGE_SESSION_DATE","selection","providers","encounterName","apiDate","optionsActionSheet","role","modal","flowState","SET_PROVIDER","isBdeMode","isBDE","facts","route","params","patient_id","parseInt","Store","get","then","patientData","setEncounterFacts","checkEncounterGuidelines","computed","patientDashboardUrl","runflowState","state","states","username","split","provider","find","person_id","$router","push","EXIT","gotoPatientDashboard","findings","matchToGuidelines","index","finding","status","program","e","console","error","toastDanger","ProgramService","getSessionDate","getCachedApiDate","getBirthdate","$route","toString","toUpperCase","sort","a","b","usernameA","usernameB","map","p","isEmpty","person","names","latestName","given_name","family_name","toOption","label","other","mapStrToOptions","items","i","path","yesNoOptions","toYesNoOption","values","option","yesNoUnknownOptions","tag","Object","filter","reduce","accum","cur","Array","isArray","concat","Promise","all","inArray","arr","expression","length","validateSeries","condition","_resolveDynamicComponent","formType","skipSummary","activeField","onOnFinish","onFinish","onOnIndex","onIndex","TouchScreenForm","emits","props","Function","Boolean","default","String","this","$emit","isCondition","ignored","undefined","prop","includes","every","sortByRelevance","guidelines","target","targetEvent","matches","guidelineIndex","targetValidations","some","title","description","text","info"],"mappings":"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","file":"js/chunk-614857ee.8d2318f8.js","sourcesContent":["import { resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_his_standard_form = _resolveComponent(\"his-standard-form\")\n\n  return (_openBlock(), _createBlock(_component_his_standard_form, {\n    cancelDestinationPath: _ctx.cancelDestination,\n    fields: _ctx.fields,\n    onFinishAction: _ctx.onSubmit\n  }, null, 8, [\"cancelDestinationPath\", \"fields\", \"onFinishAction\"]))\n}","import { AppEncounterService } from \"@/services/app_encounter_service\"\n\nexport class PatientServicesService extends AppEncounterService {\n    constructor(patientID: number, providerID: number) {\n        super(patientID, 5, providerID) \n    }\n}","\nimport { defineComponent} from 'vue'\nimport HisStandardForm from \"@/components/Forms/TouchScreenForm.vue\";\nimport EncounterMixinVue from '@/views/EncounterMixin.vue';\nimport { PatientServicesService } from '@/apps/Registration/services/patient_services_service'; \nimport Validation from '@/components/Forms/validations/StandardValidations';\nimport { Field, Option } from '@/components/Forms/FieldInterface';\nimport { FieldType } from '@/components/Forms/BaseFormElements';\nimport { getFacilities } from '@/utils/HisFormHelpers/LocationFieldOptions';\nimport { toastWarning } from '@/utils/Alerts';\nimport { Patientservice } from '@/services/patient_service';\nimport { MALAWI_NATIONAL_ID_TYPE } from '@/constants';\n\nexport default defineComponent({\n    components: { HisStandardForm },\n    mixins: [EncounterMixinVue],\n    data: () => ({\n        patientServicesService: {} as any\n    }),\n    watch: {\n        ready: {\n            async handler(isReady: boolean) {\n                if(isReady){\n                    this.patientServicesService = new PatientServicesService(this.patient.getID(), this.providerID)\n                    this.fields = this.getFields()\n                }\n            },\n            immediate: true,\n            deep: true\n        }\n    },\n    methods: {\n        async onSubmit(formData: any, computedData: any){\n            const encounter = await this.patientServicesService.createEncounter()\n            if (!encounter) return toastWarning('Unable to create registration encounter')\n            \n            const registrationData = await this.resolveObs({...computedData})\n            const registrationObs = await this.patientServicesService.saveObservationList(registrationData)\n            if (!registrationObs) return toastWarning('Unable to save observations')\n\n            this.nextTask()        \n        },\n        \n        getFields(): Array<Field>{\n            return [\n                {\n                    id: 'referral',\n                    helpText: 'Select service',\n                    type: FieldType.TT_SELECT,\n                    validation: (value: any) => Validation.required(value),\n                    computedValue: (v: Option) => ({ obs: this.patientServicesService.buildValueText('Services ordered', v.value)}),\n                    options: ()=> this.mapOptions(['Casualty', 'Dental', 'Eye', 'Family Planing', 'Medical', 'OB/Gyn', 'Orthopedics',\n                        'Pediatrics', 'Skin', 'STI Clinic', 'Surgical', 'Other'\n                    ]) \n                }\n            ]\n        }\n    }\n})\n","import { render } from \"./Services.vue?vue&type=template&id=7eb187be&ts=true\"\nimport script from \"./Services.vue?vue&type=script&lang=ts\"\nexport * from \"./Services.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/andrew-dev/Projects/HIS-Core/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { infoActionSheet, optionsActionSheet } from \"@/utils/ActionSheets\";\nimport { GuideLineInterface } from \"@/utils/GuidelineEngine\";\nimport HisDate from '@/utils/Date'\n\nexport enum FlowState {\n    SET_PROVIDER = 'SET_PROVIDER',\n    CHANGE_SESSION_DATE = 'change_session_date',\n    GO_TO_PATIENT_DASHBOARD = 'go_to_patient_dashboard',\n    CHANGE_PATIENT_OUTCOME = 'change_outcome',\n    CONTINUE = 'continue',\n    EXIT = 'exit'\n}\nconst dformat = (d: string) => HisDate.toStandardHisDisplayFormat(d)\n\nexport const ENCOUNTER_GUIDELINES: Record<string, GuideLineInterface> = {\n    \"Warn if attempting to create new encounters for a deceased patient\": {\n        priority: 1,\n        actions: {\n            alert: async ({ outcomeStartDate }: any) => {\n                const action = await infoActionSheet(\n                    'Data Integrity Issue Found',\n                    `Patient died on ${dformat(outcomeStartDate)}`,\n                    'Proceeding with this outcome might affect accuracy of some reports',\n                    [\n                        { name: 'Cancel', slot: 'end', color: 'primary'},\n                        { name: 'Change outcome', slot: 'end', color: 'primary'},\n                        { name: 'Continue Anyway', slot: 'end', color: 'danger'}\n                    ]\n                )\n                return action === 'Cancel'\n                    ? FlowState.GO_TO_PATIENT_DASHBOARD\n                    : action === 'Change outcome'\n                    ? FlowState.CHANGE_PATIENT_OUTCOME\n                    : FlowState.CONTINUE\n            }\n        },\n        conditions: {\n            outcome(outcome: string) {\n                return outcome === 'Patient died'\n            },\n            outcomeStartDate(startDate: string, { sessionDate }: any) {\n                return sessionDate >= startDate\n            }\n        }\n    },\n    \"A patient's date of birth must not be less than Session Date\": {\n        priority: 2,\n        actions: {\n            alert: async ({ birthDate, sessionDate}: any) => {\n                const action = await infoActionSheet(\n                    'Data integrity issue found', '',\n                    `Session date ${dformat(sessionDate)} is less than birth date of ${dformat(birthDate)}`,\n                    [\n                        { name: 'Cancel', slot: 'end', color: 'danger'},\n                        { name: 'Change session date', slot: 'end', color: 'success'}\n                    ]\n                )\n                return action === 'Change session date'\n                    ? FlowState.CHANGE_SESSION_DATE\n                    : FlowState.GO_TO_PATIENT_DASHBOARD\n            }\n        },\n        conditions: {\n            birthDate(birthDate: string, { sessionDate }: any) {\n                return sessionDate < birthDate\n            }\n        }\n    },\n    \"Select Encounter provider when in back data entry\": {\n        priority: 3,\n        actions: {\n            selection: async ({ providers, encounterName, sessionDate, apiDate }: any) => {\n                const modal = await optionsActionSheet(\n                    `Please select a provider for ${encounterName}`,\n                    `BDE: ${dformat(sessionDate)} | Current: ${dformat(apiDate)}`,\n                    providers,\n                    [\n                        { name: 'Cancel', color: 'danger', slot: 'start', role: 'default'},\n                        { name: 'Confirm', slot: 'end', role: 'action' }\n                    ]\n                )\n                return modal.action === 'Cancel' \n                    ? { value: -1, flowState: FlowState.GO_TO_PATIENT_DASHBOARD }\n                    : { value: modal.selection, flowState: FlowState.SET_PROVIDER }\n            }\n        },\n        conditions: {\n            isBdeMode(isBDE: boolean) {\n                return isBDE\n            }\n        }\n    }\n}","\nimport TouchScreenForm from \"@/components/Forms/TouchScreenForm.vue\";\nimport { defineComponent, PropType } from \"vue\";\nimport { Field } from \"./FieldInterface\";\n\nexport default defineComponent({\n    name: \"HisStandardForm\",\n    components: { TouchScreenForm },\n    emits: [\n        'onFinish',\n        'onIndex'\n    ],\n    data: () => ({\n        formType: 'touch-screen-form' as string\n    }),\n    props: {\n        onFinishAction: {\n            type: Function\n        },\n        skipSummary: {\n            type: Boolean,\n            default: false\n        },\n        activeField: {\n            type: String\n        },\n        fields: {\n            type: Object as PropType<Field[]>,\n            required: true\n        },\n        cancelDestinationPath: {\n            type: String,\n            required: false,\n        }\n    },\n    methods: {\n        onFinish(formData: any, computedData: any) {\n            this.$emit('onFinish', formData, computedData)\n        },\n        onIndex(i: number) {\n            this.$emit('onIndex', i)\n        }\n    }\n})\n","import script from \"./EncounterMixin.vue?vue&type=script&lang=ts\"\nexport * from \"./EncounterMixin.vue?vue&type=script&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { resolveDynamicComponent as _resolveDynamicComponent, openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return (_openBlock(), _createBlock(_resolveDynamicComponent(_ctx.formType), {\n    fields: _ctx.fields,\n    skipSummary: _ctx.skipSummary,\n    activeField: _ctx.activeField,\n    cancelDestinationPath: _ctx.cancelDestinationPath,\n    onOnFinish: _ctx.onFinish,\n    onFinish: _ctx.onFinishAction,\n    onOnIndex: _ctx.onIndex\n  }, null, 8, [\"fields\", \"skipSummary\", \"activeField\", \"cancelDestinationPath\", \"onOnFinish\", \"onFinish\", \"onOnIndex\"]))\n}","import { render } from \"./HisStandardForm.vue?vue&type=template&id=6daa0375&ts=true\"\nimport script from \"./HisStandardForm.vue?vue&type=script&lang=ts\"\nexport * from \"./HisStandardForm.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/andrew-dev/Projects/HIS-Core/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","/**\n * Compares patient facts against a predefined guideline Object.\n*/\nexport interface DescriptionInterface {\n    color?: 'primary' | 'secondary' | 'danger' | 'warning';\n    info: Function;\n    text?: string;\n    show: 'onChecked' | 'always';\n}\n\nexport interface GuideLineInterface {\n    title?: string;\n    concept?: string;\n    priority: number;\n    conditions: Record<string, Function>;\n    actions?: Record<string, any>; //TODO: should <key, Function>\n    data?: Record<string, any>;\n    description?: DescriptionInterface;\n    target?: string;\n    targetEvent?: string;\n}\n\n/**\n * Match the facts with guidelines\n * @param facts \n * @param conditions \n * @returns \n */\nfunction isCondition(facts: Record<string, any>, conditions: Record<string, Function>): boolean {\n    const state = [] \n    const ignored = [-1, '', null, undefined]\n\n    for(const prop in conditions) {\n        if (!(prop in facts)) \n            continue\n        \n        const value = facts[prop]\n        if (ignored.includes(value)) {\n            state.push(false)\n            continue\n        }\n\n        state.push(conditions[prop](value, facts))\n    }\n    return state.every(Boolean)\n}\n\n/**\n * Sort guidelines in the order of importance/relevance\n * @param findings \n * @returns \n */\nfunction sortByRelevance(findings: Array<GuideLineInterface>) {\n    return findings.sort((a, b) => a.priority < b.priority ? -1 : 1)\n}\n\n/**\n * Check the guideline for matching facts and return matching object \n * @param facts: key value pair for used for searching in guidelines\n * @param guidelines: A dictionary containing fixed rules/validations that conforms to GuideLineInterface\n * @param target: Used for matching a target defined in a guidlines before executing conditions\n * @param targetEvent: used for matching a target event in a guideline before executing conditions\n * @returns\n */\nexport function matchToGuidelines(\n    facts: Record<string, any>, \n    guidelines: Record<string, GuideLineInterface>,\n    target='', \n    targetEvent=''): Array<GuideLineInterface> {\n\n    const matches = []\n    for(const guidelineIndex in guidelines) {\n        const data: GuideLineInterface = guidelines[guidelineIndex]\n \n        const targetValidations = [\n            (data.target && target && data.target != target),\n            (data.targetEvent && targetEvent \n                && data.targetEvent != targetEvent)\n        ]\n\n        if (targetValidations.some(Boolean)) {\n            continue\n        }\n\n        if (isCondition(facts, data.conditions)) {\n            data.title = guidelineIndex\n            if (data.description) {\n                data.description.text = data.description.info(facts)\n            }\n            matches.push(data)\n        }\n    }\n    return sortByRelevance(matches)\n}\n"],"sourceRoot":""}