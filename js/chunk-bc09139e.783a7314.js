(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-bc09139e"],{"5f2c":function(t,e,n){"use strict";n.d(e,"a",(function(){return c}));var a=n("cc6f"),r=n("71c3"),i=(n("13d5"),n("1c74"));class s extends i["e"]{constructor(){super()}static async fetchAvailableDrugStock(t){const e=await this.getJson("pharmacy/items",{drug_id:t});if(e&&e.length>0)return e.reduce((t,e)=>t+e.current_quantity,0)}}var o=n("d1ca");const u={11:[30],21:[25],22:[60],24:[30,60,90,100],30:[90],39:[60],73:[120],74:[60],76:[1e3],297:[30,60,90],576:[30,60,90],613:[60],731:[60],732:[60],733:[60],734:[30],735:[30],736:[60],738:[60],931:[30,60,90],932:[30],954:[60],963:[30,60,90],968:[60],969:[30],971:[30,60,90],976:[60],977:[30],982:[30],983:[30,90],1039:[30,60,90],1043:[60],1044:[30],1056:[24],1216:[3,6,12]};class c extends a["a"]{constructor(t,e){super(t,54,e),this.drugHistory=[],this.currentDrugOrder=[],this.useDrugManagement=!1}setIsDrugManagementEnabled(t){this.useDrugManagement=t}async loadDrugManagementEnabled(){this.useDrugManagement=await o["b"].drugManagementEnabled()}getDrugHistory(){return this.drugHistory}getCurrentOrder(){return this.currentDrugOrder}buildDispensations(t,e,n){const a=[];for(let r=0;r<n;r++)a.push({drug_order_id:t,date:this.date,quantity:e/n});return a}saveDispensations(t){return a["a"].postJson("/dispensations",{dispensations:t,program_id:a["a"].getProgramID()})}async voidOrder(t){return a["a"].void("/dispensations/"+t,{})}async loadDrugHistory(){try{const t=await r["a"].getDrugOrderHistory(this.patientID);t&&(this.drugHistory=t)}catch(t){console.warn(t)}}async loadCurrentDrugOrder(){const t=await r["a"].getDrugOrders(this.patientID);if(t){if(this.useDrugManagement){const e=t.map(async t=>(t["available_stock"]=await s.fetchAvailableDrugStock(t.drug.drug_id),t));return void(this.currentDrugOrder=await Promise.all(e))}this.currentDrugOrder=t}}getDrugPackSizes(t){return t in u?u[t]:[30,60,90]}calcCompletePack(t,e){const n=t.barcodes.sort((t,e)=>t.tabs-e.tabs);if(0==n.length||0==e)return e;for(const r in n){const{tabs:t}=n[r];if(parseInt(t)>=e)return t}const a=parseInt(n[n.length-1].tabs);return a}}},"71c3":function(t,e,n){"use strict";n.d(e,"a",(function(){return c}));var a=n("5530"),r=n("d4ec"),i=n("bee2"),s=n("262e"),o=n("2caf"),u=(n("d81d"),n("99af"),n("1c74")),c=function(t){Object(s["a"])(n,t);var e=Object(o["a"])(n);function n(){return Object(r["a"])(this,n),e.call(this)}return Object(i["a"])(n,null,[{key:"create",value:function(t){return this.postJson("drug_orders",t)}},{key:"updateDispensationOrders",value:function(t){var e=this;return this.postJson("dispensations",{program_id:this.getProgramID(),dispensations:t.map((function(t){return{date:e.getSessionDate(),drug_order_id:t["order_id"],quantity:t["quantity"]}}))})}},{key:"getDrugOrderHistory",value:function(t){return this.getJson("drug_orders",{patient_id:t})}},{key:"getDrugOrders",value:function(t){return this.getJson("drug_orders",{patient_id:t,date:this.getSessionDate(),program_id:this.getProgramID()})}},{key:"getAllDrugOrders",value:function(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1e3;return this.getJson("drug_orders",{patient_id:t,program_id:u["e"].getProgramID(),page_size:e})}},{key:"getLastDrugsReceived",value:function(t){return this.getJson("patients/".concat(t,"/last_drugs_received"),{date:this.getSessionDate(),program_id:this.getProgramID()})}},{key:"getDrugDosages",value:function(t,e){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:this.getSessionDate(),a={drug_id:e,date:n};return this.getJson("programs/".concat(this.getProgramID(),"/patients/").concat(t,"/drug_doses"),a)}},{key:"getOrderByPatient",value:function(t,e){return this.getJson("/drug_orders",Object(a["a"])({patient_id:t,program_id:this.getProgramID()},e))}}]),n}(u["e"])},7365:function(t,e,n){"use strict";n("13d5");var a,r=n("7a23"),i=n("ad60"),s=n("2ef0"),o=n("0fa1"),u=n("1da1"),c=(n("99af"),n("96cf"),n("7f35")),d=n("9283");(function(t){t["SET_PROVIDER"]="SET_PROVIDER",t["CHANGE_SESSION_DATE"]="change_session_date",t["GO_TO_PATIENT_DASHBOARD"]="go_to_patient_dashboard",t["CHANGE_PATIENT_OUTCOME"]="change_outcome",t["CONTINUE"]="continue",t["EXIT"]="exit"})(a||(a={}));var l=function(t){return d["b"].toStandardHisDisplayFormat(t)},p={"Warn if attempting to create new encounters for a deceased patient":{priority:1,actions:{alert:function(){var t=Object(u["a"])(regeneratorRuntime.mark((function t(e){var n,r;return regeneratorRuntime.wrap((function(t){while(1)switch(t.prev=t.next){case 0:return n=e.outcomeStartDate,t.next=3,Object(c["a"])("Data Integrity Issue Found","Patient died on ".concat(l(n)),"Proceeding with this outcome might affect accuracy of some reports",[{name:"Cancel",slot:"end",color:"primary"},{name:"Change outcome",slot:"end",color:"primary"},{name:"Continue Anyway",slot:"end",color:"danger"}]);case 3:return r=t.sent,t.abrupt("return","Cancel"===r?a.GO_TO_PATIENT_DASHBOARD:"Change outcome"===r?a.CHANGE_PATIENT_OUTCOME:a.CONTINUE);case 5:case"end":return t.stop()}}),t)})));function e(e){return t.apply(this,arguments)}return e}()},conditions:{outcome:function(t){return"Patient died"===t},outcomeStartDate:function(t,e){var n=e.sessionDate;return n>=t}}},"A patient's date of birth must not be less than Session Date":{priority:2,actions:{alert:function(){var t=Object(u["a"])(regeneratorRuntime.mark((function t(e){var n,r,i;return regeneratorRuntime.wrap((function(t){while(1)switch(t.prev=t.next){case 0:return n=e.birthDate,r=e.sessionDate,t.next=3,Object(c["a"])("Data integrity issue found","","Session date ".concat(l(r)," is less than birth date of ").concat(l(n)),[{name:"Cancel",slot:"end",color:"danger"},{name:"Change session date",slot:"end",color:"success"}]);case 3:return i=t.sent,t.abrupt("return","Change session date"===i?a.CHANGE_SESSION_DATE:a.GO_TO_PATIENT_DASHBOARD);case 5:case"end":return t.stop()}}),t)})));function e(e){return t.apply(this,arguments)}return e}()},conditions:{birthDate:function(t,e){var n=e.sessionDate;return n<t}}},"Select Encounter provider when in back data entry":{priority:3,actions:{selection:function(){var t=Object(u["a"])(regeneratorRuntime.mark((function t(e){var n,r,i,s,o;return regeneratorRuntime.wrap((function(t){while(1)switch(t.prev=t.next){case 0:return n=e.providers,r=e.encounterName,i=e.sessionDate,s=e.apiDate,t.next=3,Object(c["c"])("Please select a provider for ".concat(r),"BDE: ".concat(l(i)," | Current: ").concat(l(s)),n,[{name:"Cancel",color:"danger",slot:"start",role:"default"},{name:"Confirm",slot:"end",role:"action"}]);case 3:return o=t.sent,t.abrupt("return","Cancel"===o.action?{value:-1,flowState:a.GO_TO_PATIENT_DASHBOARD}:{value:o.selection,flowState:a.SET_PROVIDER});case 5:case"end":return t.stop()}}),t)})));function e(e){return t.apply(this,arguments)}return e}()},conditions:{isBdeMode:function(t){return t}}}},h=n("c21d"),g=n("7920"),m=n("b5e4"),D=n("8e8b"),f=Object(r["defineComponent"])({components:{HisStandardForm:g["a"]},data:()=>({patient:{},fields:[],patientID:"",providerID:-1,providers:[],facts:{sessionDate:"",apiDate:"",encounterName:"N/A",providers:[],isBdeMode:!1,birthDate:"",outcome:"",outcomeStartDate:""},ready:!1}),watch:{$route:{handler(t){t.params.patient_id&&this.patientID!=t.params.patient_id&&(this.patientID=parseInt(t.params.patient_id),D["a"].get("ACTIVE_PATIENT",{patientID:this.patientID}).then(t=>{this.patient=t,this.setEncounterFacts().then(()=>{this.checkEncounterGuidelines().then(()=>{this.ready=!0})})}))},immediate:!0,deep:!0}},computed:{cancelDestination(){return this.patientDashboardUrl()}},methods:{runflowState(t,e=null){const n={};if(n[a.SET_PROVIDER]=t=>{const[e]=t.split(" "),n=Object(s["find"])(this.providers,{username:e});return n&&(this.providerID=n.person_id),a.CONTINUE},n[a.CHANGE_SESSION_DATE]=()=>(this.$router.push("/session/date?patient_dashboard_redirection_id="+this.patientID),a.EXIT),n[a.CHANGE_PATIENT_OUTCOME]=()=>(this.$router.push("/patient/programs/"+this.patientID),a.EXIT),n[a.GO_TO_PATIENT_DASHBOARD]=()=>(this.gotoPatientDashboard(),a.EXIT),t in n)return n[t](e)},async checkEncounterGuidelines(){const t=Object(h["a"])(this.facts,p);for(const s in t){var e,n;const o=t[s];if(null!==o&&void 0!==o&&null!==(e=o.actions)&&void 0!==e&&e.alert){var r;const t=this.runflowState(await(null===o||void 0===o||null===(r=o.actions)||void 0===r?void 0:r.alert(this.facts)));if(t===a.EXIT)return}if(null!==o&&void 0!==o&&null!==(n=o.actions)&&void 0!==n&&n.selection){var i;const t=await(null===o||void 0===o||null===(i=o.actions)||void 0===i?void 0:i.selection(this.facts));this.runflowState(t.flowState,t.value)}}},async setEncounterFacts(){try{const t=await D["a"].get("PATIENT_PROGRAM",{patientID:this.patientID});this.facts.outcome=t.outcome,this.facts.outcomeStartDate=t.startDate}catch(t){console.error(t),Object(m["c"])(""+t)}this.facts.sessionDate=i["a"].getSessionDate(),this.facts.apiDate=i["a"].getCachedApiDate(),this.facts.isBdeMode=i["a"].isBDE(),this.facts.birthDate=this.patient.getBirthdate(),this.facts.encounterName=this.$route.name?this.$route.name.toString().toUpperCase():"N/A",i["a"].isBDE()&&(this.providers=await D["a"].get("PROVIDERS"),this.facts.providers=this.providers.sort((t,e)=>{const n=t.username.toUpperCase(),a=e.username.toUpperCase();return n<a?-1:n>a?1:0}).map(t=>{var e;let n=""+t.username;if(!Object(s["isEmpty"])(null===t||void 0===t||null===(e=t.person)||void 0===e?void 0:e.names)){var a;const[e]=(null===(a=t.person)||void 0===a?void 0:a.names)||[];n+=` (${e.given_name} ${e.family_name})`}return n}))},toOption(t,e={}){return{label:t,value:t,other:e}},mapStrToOptions(t){return t.map(t=>({label:t,value:t}))},patientDashboardUrl(){return"/patient/dashboard/"+this.patientID},gotoPatientDashboard(){return this.$router.push({path:this.patientDashboardUrl()})},nextTask(){return Object(o["b"])(this.patientID,this.$router)},yesNoOptions(){return[{label:"Yes",value:"Yes"},{label:"No",value:"No"}]},toYesNoOption(t,e={}){return{label:t,value:"",other:{...e,values:this.yesNoOptions()}}},mapOptions(t){return t.map(t=>({label:t,value:t}))},yesNoUnknownOptions(){return[{label:"Yes",value:"Yes"},{label:"No",value:"No"},{label:"Unknown",value:"Unknown"}]},resolveObs(t,e=""){const n=Object.values(t).filter(t=>t&&(t.tag===e||""===e)).reduce((t,e)=>{const n=e.obs?e.obs:e;return Array.isArray(n)?t=t.concat(n):"function"===typeof n?t.push(n()):t.push(n),t},[]);return Promise.all(n)},inArray(t,e){try{return t.filter(t=>e(t)).length>0}catch(n){return!1}},validateSeries(t){try{for(const e in t){const n=t[e]();if(n)return n}}catch(e){return[e]}}}});const v=f;e["a"]=v},7920:function(t,e,n){"use strict";var a=n("7a23");function r(t,e,n,r,i,s){return Object(a["openBlock"])(),Object(a["createBlock"])(Object(a["resolveDynamicComponent"])(t.formType),{fields:t.fields,skipSummary:t.skipSummary,activeField:t.activeField,cancelDestinationPath:t.cancelDestinationPath,onOnFinish:t.onFinish,onFinish:t.onFinishAction,onOnIndex:t.onIndex},null,8,["fields","skipSummary","activeField","cancelDestinationPath","onOnFinish","onFinish","onOnIndex"])}var i=n("9441"),s=Object(a["defineComponent"])({name:"HisStandardForm",components:{TouchScreenForm:i["a"]},emits:["onFinish","onIndex"],data:()=>({formType:"touch-screen-form"}),props:{onFinishAction:{type:Function},skipSummary:{type:Boolean,default:!1},activeField:{type:String},fields:{type:Object,required:!0},cancelDestinationPath:{type:String,required:!1}},methods:{onFinish(t,e){this.$emit("onFinish",t,e)},onIndex(t){this.$emit("onIndex",t)}}}),o=n("6b0d"),u=n.n(o);const c=u()(s,[["render",r]]);e["a"]=c},"9e6a":function(t,e,n){"use strict";n.r(e);var a=n("7a23");function r(t,e,n,r,i,s){const o=Object(a["resolveComponent"])("his-standard-form");return Object(a["openBlock"])(),Object(a["createBlock"])(o,{fields:t.fields,skipSummary:!0,cancelDestinationPath:t.cancelDestination},null,8,["fields","cancelDestinationPath"])}var i=n("d95e"),s=n("b5e4"),o=n("5f2c"),u=n("2ef0"),c=n("7365"),d=n("9283"),l=n("8e8b"),p=Object(a["defineComponent"])({mixins:[c["a"]],data:()=>({dispensation:{}}),watch:{ready:{handler(t){t&&(this.dispensation=new o["a"](this.patientID,this.providerID),this.fields=this.getFields())},immediate:!0}},methods:{saveDispensations(t){return this.dispensation.saveDispensations(this.buildDispensations(t))},buildDispensations(t){var e;if(!Object(u["isEmpty"])(null===(e=t.other)||void 0===e?void 0:e.dispenses)){let e=[];return t.other.dispenses.forEach(([n,a])=>{e=[...e,...this.dispensation.buildDispensations(t.other.order_id,n,a)]}),e}return this.dispensation.buildDispensations(t.other.order_id,parseInt(t.value.toString()),1)},async buildMedicationHistory(){return await this.dispensation.loadDrugHistory(),this.dispensation.getDrugHistory().sort((t,e)=>{const n=new Date(t.order.start_date),a=new Date(e.order.start_date);return a-n}).map(t=>({medication:t.drug.name,date:d["b"].toStandardHisDisplayFormat(t.order.start_date),amount:t.quantity}))},buildOrderOptions(){return this.dispensation.getCurrentOrder().map(t=>({label:t.drug.name,value:t.quantity||0,other:{order:t,drug_id:t.drug.drug_id,order_id:t.order.order_id,available_stock:t.available_stock||"-",amount_needed:this.calculateCompletePack(t),pack_sizes:this.getPackSizesRows(t.drug.drug_id,t.available_stock||0)}}))},getPackSizesRows(t,e){const n=this.dispensation.getDrugPackSizes(t);return n.map(t=>{const n=e>0?Math.floor(e/t):"-";return[t,n,0,0]})},calculateCompletePack(t){const e=parseFloat(t.amount_needed)-(t.quantity||0);return e<=0?0:this.dispensation.calcCompletePack(t,e)},isDoneDispensing(t){return t.map(t=>0!=t.value).every(Boolean)},async isValidDispensation(t){let e=!0;const n=parseInt(t.value.toString()),a=t.other["amount_needed"],r=n/a*100;return r>110&&(e=await Object(s["a"])("Are you sure you want to dispense over 110% of the prescribed pill count?")),r<100&&(e=await Object(s["a"])("Are you sure you want to dispense less than 100% of the prescribe amount?")),e},getFields(){return[{id:"dispenses",helpText:"Dispensation",type:i["b"].TT_DISPENSATION_INPUT,init:async()=>(this.dispensation.setIsDrugManagementEnabled(await l["a"].get("IS_ART_DRUG_MANAGEMENT_ENABLED")),await this.dispensation.loadCurrentDrugOrder(),!0),onValueUpdate:async(t,e)=>-1!=t.value&&this.isDoneDispensing(e)?this.$router.push({name:"appointment"}):(t.other["amount_needed"]=t.other["amount_needed"]-(parseInt(t.value.toString())||0),t.other["amount_needed"]<0&&(t.other["amount_needed"]=0),await this.dispensation.loadCurrentDrugOrder(),this.buildOrderOptions()),onValue:async(t,e)=>{if(-1===t.value){const e=await this.dispensation.voidOrder(t.other.order_id);return!e}if(!e){const e=await this.isValidDispensation(t);if(!e)return!1}const n=await this.saveDispensations(t);return!!n||(Object(s["e"])("Unable to save dispensation"),!1)},config:{isDrugManagementEnabled:()=>this.dispensation.useDrugManagement,medicationHistory:()=>this.buildMedicationHistory(),toolbarInfo:[{label:"Name",value:this.patient.getFullName()},{label:"Gender",value:this.patient.getGender()},{label:"Date Of Birth",value:d["b"].toStandardHisDisplayFormat(this.patient.getBirthdate())}],hiddenFooterBtns:["Clear","Finish"]},options:()=>this.buildOrderOptions()}]}}}),h=n("6b0d"),g=n.n(h);const m=g()(p,[["render",r]]);e["default"]=m},c21d:function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));n("caad"),n("d3b7"),n("4e82"),n("a4d30"),n("e01a");function a(t,e){var n=[],a=[-1,"",null,void 0];for(var r in e)if(r in t){var i=t[r];a.includes(i)?n.push(!1):n.push(e[r](i,t))}return n.every(Boolean)}function r(t){return t.sort((function(t,e){return t.priority<e.priority?-1:1}))}function i(t,e){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"",i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"",s=[];for(var o in e){var u=e[o],c=[u.target&&n&&u.target!=n,u.targetEvent&&i&&u.targetEvent!=i];c.some(Boolean)||a(t,u.conditions)&&(u.title=o,u.description&&(u.description.text=u.description.info(t)),s.push(u))}return r(s)}}}]);
//# sourceMappingURL=chunk-bc09139e.783a7314.js.map