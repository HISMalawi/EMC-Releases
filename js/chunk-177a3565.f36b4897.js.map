{"version":3,"sources":["webpack:///./src/components/Keyboard/KbLayouts.ts","webpack:///./node_modules/eslint-loader/index.js","webpack:///./src/components/Keyboard/HisKbConfigurations.ts","webpack:///./src/guidelines/encounter_guidelines.ts","webpack:///./node_modules/cache-loader/dist/cjs.js","webpack:///./src/views/EncounterMixin.vue","webpack:///./node_modules/vue-loader-v16/dist/templateLoader.js","webpack:///./src/components/Forms/HisStandardForm.vue","webpack:///./src/utils/GuidelineEngine.ts","webpack:///./src/apps/ART/views/encounters/hypertension_diagnosis.vue?8c6d","webpack:///./src/apps/ART/views/encounters/hypertension_diagnosis.vue","webpack:///./src/apps/ART/views/encounters/hypertension_diagnosis.vue?10bd"],"names":["DEFAULT_KEYPAD","VITALS_KEYPAD","DRUG_DISPENSER_KEYPAD","CD4_COUNT_PAD_LO","SYMBOLS","NUMBER_PAD_LO","MONTHLY_DAYS_LO","ALPHABETICAL_LO","QWERTY_LO","CHARACTERS_AND_NUMBERS_LO","NOTE_PAD_KEYBOARD","LOGIN_KEYBOARD","ConsultationService","AppEncounterService","constructor","patientID","providerID","getFamilyPlanningMethods","getJson","obs","ObservationService","getFirstObs","value_text","match","obsInValidPeriod","getDrugSideEffects","getProgramID","date","getClient","getFirstValueCoded","req","id","isEmpty","lastScreened","duration","dayjs","diff","secondCheck","getFirstValueText","isTL","value_coded","tlObs","fpObs","drugs","uniqueDrugs","forEach","drug","drug_inventory_id","familyPlanningMethods","label","values","familyPlanningLogic","selected","map","data","value","isChecked","disabled","SYMBOLS_CONFIG","NUMBERS_ONLY","NUMBERS_WITH_UNKNOWN","NUMBERS_WITH_ESTIMATE","NUMBERS_WITHOUT_NA_UNKNOWN","NUMBERS","MONTHLY_DAYS","A_TO_Z","QWERTY","KEY_BTN_NAV","btn","keyboard","FlowState","dformat","d","HisDate","toStandardHisDisplayFormat","ENCOUNTER_GUIDELINES","priority","actions","alert","outcomeStartDate","infoActionSheet","name","slot","color","action","GO_TO_PATIENT_DASHBOARD","CHANGE_PATIENT_OUTCOME","CONTINUE","conditions","outcome","startDate","sessionDate","birthDate","CHANGE_SESSION_DATE","selection","providers","encounterName","apiDate","optionsActionSheet","role","modal","flowState","SET_PROVIDER","isBdeMode","isBDE","defineComponent","components","HisStandardForm","patient","fields","facts","ready","watch","handler","route","params","patient_id","parseInt","Store","get","then","patientData","setEncounterFacts","checkEncounterGuidelines","immediate","deep","computed","cancelDestination","patientDashboardUrl","methods","runflowState","state","states","username","split","provider","find","person_id","$router","push","EXIT","gotoPatientDashboard","findings","matchToGuidelines","index","finding","status","program","e","console","error","toastDanger","ProgramService","getSessionDate","getCachedApiDate","getBirthdate","$route","toString","toUpperCase","sort","a","b","usernameA","usernameB","p","person","names","latestName","given_name","family_name","toOption","other","mapStrToOptions","items","i","path","nextTask","yesNoOptions","toYesNoOption","mapOptions","options","option","yesNoUnknownOptions","resolveObs","tag","Object","filter","reduce","accum","cur","Array","isArray","concat","Promise","all","inArray","arr","expression","length","validateSeries","condition","__exports__","render","_ctx","_cache","$props","$setup","$data","$options","_openBlock","_createBlock","_resolveDynamicComponent","formType","skipSummary","activeField","cancelDestinationPath","onOnFinish","onFinish","onFinishAction","onOnIndex","onIndex","TouchScreenForm","emits","props","type","Function","Boolean","default","String","required","formData","computedData","this","$emit","EstimationFieldType","getYearField","showUnknown","primaryFunctions","helpText","appearInSummary","FieldType","TT_TEXT","config","customKeyboard","getMonthField","TT_SELECT","MonthOptions","getDayField","TT_MONTHLY_DAYS","getMonthDurationEstimateField","getAgeEstimateField","TT_NUMBER","keypad","appendLeadingZero","s","async","getDefaultDate","form","field","datePart","defaultValue","year","month","day","validateMinMax","minDate","min","Date","maxDate","max","generateDateFields","refDate","fullDate","yearValue","monthValue","dayValue","dateIsEstimated","yearID","monthID","dayID","ageEstimateID","durationEstimateID","estimation","allowUnknown","ageEstimate","durationEstimate","estimateMonthOrDay","allowUnknownMonthDay","datePartCondition","f","includes","buildHelpTextDate","part","parts","partValues","dpart","wl","undefined","join","init","updateHelpTextOnValue","proxyID","unload","v","validation","c","StandardValidations","isNaN","minYear","getYear","summaryMapValue","summaryLabel","_","ref","computedValue","val","computeValue","beforeNext","keyboardActions","valueEstimateCondition","estimateType","estimationFieldType","every","ageEstimateRegex","Service","subtract","AGE_ESTIMATE_FIELD","format","STANDARD_DATE_FORMAT","MONTH_ESTIMATE_FIELD","isCondition","ignored","prop","sortByRelevance","guidelines","target","targetEvent","matches","guidelineIndex","targetValidations","some","title","description","text","info","_component_his_standard_form","_resolveComponent","mixins","EncounterMixinVue","consultation","getFields","createEncounter","saveObservationList","back","Validation","buildValueCoded","has_hypertension","buildValueDate"],"mappings":"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","file":"js/chunk-177a3565.f36b4897.js","sourcesContent":["export const DEFAULT_KEYPAD = [\n    ['1', '2', '3'],\n    ['4', '5', '6'],\n    ['7', '8', '9'],\n    ['.', '0', 'Del'],\n    ['',  'Done', '']\n]\nexport const VITALS_KEYPAD = [\n    ['1', '2', '3'],\n    ['4', '5', '6'],\n    ['7', '8', '9'],\n    ['.', '0', 'Del'],\n    ['Clear',  '%', '/']\n]\nexport const DRUG_DISPENSER_KEYPAD = [\n    ['1', '2', '3'],\n    ['4', '5', '6'],\n    ['7', '8', '9'],\n    ['Del.', '0', 'Clear'],\n    // ['Reset',  'Close', 'Dispense']\n]\nexport const CD4_COUNT_PAD_LO = [\n    ['1', '2', '3', '<'],\n    ['4', '5', '6', '>'],\n    ['7', '8', '9', '='],\n    ['',  '0', '']\n]\n\nexport const SYMBOLS = [\n    ['1', '2', '3', '+', '-', '/', '*'],\n    ['4', '5', '6', '%', '=', '<', '>', 'Qwerty'],\n    ['7', '8', '9', '.', ','],\n    ['',  '0', '']\n]\n\nexport const NUMBER_PAD_LO = [\n    ['1', '2', '3'],\n    ['4', '5', '6'],\n    ['7', '8', '9'],\n    ['',  '0', '']\n]\n\nexport const MONTHLY_DAYS_LO = [\n    ['1', '2', '3', '4', '5', '6', '7'],\n    ['8', '9', '10', '11', '12', '13', '14'],\n    ['15', '16', '17', '18', '19', '20', '21'],\n    ['22', '23', '24', '25', '26', '27', '28'],\n    ['29', '30', '31']\n]\n\nexport const ALPHABETICAL_LO = [\n    ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', '.'],\n    ['i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q'],\n    ['r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z']\n]\n\nexport const QWERTY_LO = [\n    ['q', 'w', 'e', 'r', 't', 'y', 'u', 'i', 'o', 'p'],\n    ['a', 's', 'd', 'f', 'g', 'h', 'j', 'k', 'l', \"'\"],\n    ['z', 'x', 'c', 'v', 'b', 'n', 'm',',', '.', 'A-Z']\n]\n\nexport const CHARACTERS_AND_NUMBERS_LO = [\n    ['1', '2', '3', '4', '5', '6', '7', '8', '9', '0'],\n    ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', '-', '.'],\n    ['i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q'],\n    ['r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z']\n]\nexport const NOTE_PAD_KEYBOARD = [\n    ['1', '2', '3', '4', '5', '6', '7', '8', '9', '0', 'Del'],\n    [\"q\", \"w\", \"e\", \"r\", \"t\", \"y\", \"u\", \"i\", \"o\", \"p\", 'Clear'],\n    [\"a\", \"s\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \".\", \"Caps\"],\n    [\"z\", \"x\", \"c\", \"v\", \"b\", \"n\", \"m\", \"<\", \">\", \"/\", \"Enter\"], \n]\n\nexport const LOGIN_KEYBOARD =  [\n    [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"0\"],\n    [\"q\", \"w\", \"e\", \"r\", \"t\", \"y\", \"u\", \"i\", \"o\", \"p\"],\n    [\"a\", \"s\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"Del.\"],\n    [\"z\", \"x\", \"c\", \"v\", \"b\", \"n\", \"m\", \"Caps\", \"Login\"],\n];\n","import { FieldType } from \"@/components/Forms/BaseFormElements\"\nimport MonthOptions from \"@/utils/HisFormHelpers/MonthOptions\"\nimport { Field, Option } from \"@/components/Forms/FieldInterface\"\nimport HisDate, { STANDARD_DATE_FORMAT } from \"@/utils/Date\"\nimport StandardValidations from \"@/components/Forms/validations/StandardValidations\"\nimport { NUMBER_PAD_LO } from \"@/components/Keyboard/KbLayouts\"\nimport { NUMBERS_WITHOUT_NA_UNKNOWN } from '../../components/Keyboard/HisKbConfigurations';\nimport dayjs from \"dayjs\"\nimport { Service } from \"@/services/service\"\n\nexport enum EstimationFieldType {\n    AGE_ESTIMATE_FIELD = \"age-estimate-field\",\n    MONTH_ESTIMATE_FIELD = \"month-period-estimate-field\"\n}\n\nexport interface EstimationInterface {\n    estimationFieldType?: EstimationFieldType;\n    allowUnknown: boolean; \n    allowUnknownMonthDay?: boolean;\n}\n\nexport interface DateFieldInterface {\n    id: string;\n    helpText: string;\n    init?: (f: any, c: any) => boolean | Promise<boolean>;\n    summaryLabel?: string;\n    condition?: Function;\n    required?: boolean;\n    defaultValue?: Function;\n    beforeNext?: Function;\n    minDate?(formData: any, computeForm: any): string;\n    maxDate?(formData: any, computeForm: any): string | null;\n    unload?(data: any, state: string, formData: any,  computeForm: any): void; \n    computeValue: Function;\n    appearInSummary?: Function;\n    estimation: EstimationInterface;\n    config?: any;\n}\n\nexport function getYearField(id: string, name: string, showUnknown=true): Field {\n    const primaryFunctions = []\n    if (showUnknown) primaryFunctions.push('UNKNOWN')\n    return {\n        id,\n        helpText: `${name} Year`,\n        appearInSummary: () => false,\n        type: FieldType.TT_TEXT,\n        config: {\n            customKeyboard: [\n                NUMBER_PAD_LO,\n                [\n                    primaryFunctions,\n                    ['DELETE']\n                ]\n            ]\n        }\n    }\n}\n\nexport function getMonthField(id: string, name: string): Field {\n    return {\n        id,\n        helpText: `${name} Month`,\n        appearInSummary: () => false,\n        type: FieldType.TT_SELECT,\n        options: () => MonthOptions\n    }\n}\n\nexport function getDayField(id: string, name: string): Field {\n    return {\n        id,\n        helpText: `${name} Day`,\n        type: FieldType.TT_MONTHLY_DAYS,\n        appearInSummary: () => false\n    }\n}\n\nexport function getMonthDurationEstimateField(id: string, name: string): Field {\n    return {\n        id,\n        helpText: `${name} Estimated period`,\n        type: FieldType.TT_SELECT,\n        appearInSummary: () => false,\n        options: () => ([\n            { label: '6 months ago', value: 180 },\n            { label: '12 months ago', value: 365 },\n            { label: '18 months ago', value: 540 },\n            { label: '24 months ago', value: 730 },\n            { label: 'Over 2 years ago', value: 730 }\n        ])\n    }\n}\n\nexport function getAgeEstimateField(id: string, name: string): Field {\n    return {\n        id,\n        helpText: `${name} Age Estimate`,\n        type: FieldType.TT_NUMBER,\n        appearInSummary: () => false,\n        config: {\n            keypad: NUMBERS_WITHOUT_NA_UNKNOWN\n        }\n    }\n}\n\nfunction appendLeadingZero(s: string) {\n    return parseInt(s) < 10 ? `0${s}` : s\n}\n\nasync function getDefaultDate(form: any, field: DateFieldInterface, datePart: 'Year' | 'Month' | 'Day') {\n    if (field.defaultValue) {\n        const date = await field.defaultValue(form)\n        if (date) {\n            const [year, month, day] = date.split('-')\n            switch(datePart) {\n                case 'Year':\n                    return year || ''\n                case 'Month':\n                    return parseInt(month) || ''\n                case 'Day':\n                    return parseInt(day) || ''    \n            }\n        }\n    }\n    return ''\n}\n\nfunction d(date: string) {\n    return HisDate.toStandardHisDisplayFormat(date)\n}\n\nfunction validateMinMax(date: string, field: DateFieldInterface, form: any, computed: any) {\n    if (field.minDate) {\n        const min = field.minDate(form, computed)\n        if (new Date(date) < new Date(min)) {\n            return [`${d(date)} is less than minimum date of ${d(min)}`]\n        }\n    }\n    if (field.maxDate) {\n        const max = field.maxDate(form, computed)\n        if (max && new Date(date) > new Date(max)) {\n            return [`${d(date)} is greater than max date of  ${d(max)}`]\n        }\n    }\n}\n/**\n * This Jungle of code generates Fields of Year, Month and Day.\n * \n * if you're brave please refactor this. Just dont break anything Ok!\n * @param field \n * @param refDate \n * @returns \n */\nexport function generateDateFields(field: DateFieldInterface, refDate=''): Array<Field> {\n    let fullDate = ''\n    let yearValue = ''\n    let monthValue = ''\n    let dayValue = ''\n    let dateIsEstimated = false\n\n    const yearID = `year_${field.id}`\n    const monthID = `month_${field.id}`\n    const dayID = `day_${field.id}`\n    const ageEstimateID = `age_estimate_${field.id}`\n    const durationEstimateID = `duration_estimate_${field.id}`\n\n    const year = getYearField(yearID, field.helpText, field.estimation.allowUnknown)\n    const month = getMonthField(monthID, field.helpText)\n    const day = getDayField(dayID, field.helpText)\n\n    const ageEstimate = getAgeEstimateField(ageEstimateID, field.helpText)\n    const durationEstimate = getMonthDurationEstimateField(durationEstimateID, field.helpText)\n\n    const estimateMonthOrDay = typeof field.estimation.allowUnknownMonthDay === 'boolean'\n        && field.estimation.allowUnknownMonthDay\n\n    const datePartCondition = (f: any) => {\n        if (f[yearID] && f[yearID].value) {\n            if (['Unknown'].includes(f[yearID].value)) {\n                return false\n            }\n        }\n        return field.condition ? field.condition(f) : true\n    }\n    /**\n     * Generates fulldate based on current date part, it's value and previously recorded date parts.\n     * @param value\n     * @param part\n     * @returns\n     */\n    const buildHelpTextDate = (value: any, part: 'month' | 'year' | 'day') => {\n        const parts = [\n            { type: 'year', value: yearValue, default: 'YYYY' },\n            { type: 'month', value: monthValue, default: 'MM' },\n            { type: 'day', value: dayValue, default: 'DD' },\n        ]\n        return parts.reduce((partValues: any, dpart: any) => {\n            const wl = [null, undefined, 'Unknown', '']\n            if (part === dpart.type) {\n                if (wl.includes(value)) {\n                    partValues.push(dpart.default)\n                } else {\n                    partValues.push(value)\n                }\n            } else {\n                if (wl.includes(dpart.value)) {\n                    partValues.push(dpart.default)\n                } else {\n                    partValues.push(dpart.value)\n                }\n            }\n            return partValues\n        }, []).join('-')\n    }\n\n    if (typeof field.init === 'function') year.init = field.init\n    \n    // YEAR CONFIG\n    year.updateHelpTextOnValue = (data: any) => `${year.helpText} (${buildHelpTextDate(data?.label, 'year')})`\n\n    year.proxyID = field.id\n\n    year.unload = (v: Option) => yearValue = v.value.toString()\n \n    year.config = { ...year.config, ...field.config }\n\n    year.defaultValue = (f: any) => getDefaultDate(f, field, 'Year')\n\n    year.condition = (f: any) => field.condition \n        ? field.condition(f) \n        : true\n\n    year.validation = (v: Option, f: any, c: any) => {\n        if (field.required && StandardValidations.required(v)) {\n            return ['Year cannot be empty']\n        }\n        const year = v ? v.value : ''\n        if (!field.estimation.allowUnknown \n            && year.toString().match(/unknown/i)) {\n            return ['Value unknown is not permitted']\n        }\n    \n        if (year && !['Unknown'].includes(year as string)\n            && isNaN(year as number)\n            || year < 1900) {\n            return ['Invalid Year']\n        }\n\n        if (year && typeof field.minDate === 'function') {\n            const minYear = HisDate.getYear(field.minDate(f, c)) \n            if (parseInt(year as any) < minYear) {\n                return [`Year of ${year} is less than Minimum year of ${minYear}`]\n            }\n        }\n\n        if (year && typeof field.maxDate === 'function') {\n            const max = field.maxDate(f, c)\n            if (max && year > HisDate.getYear(max)) {\n                return [`Year of ${year} exceeds Maximum year of ${HisDate.getYear(max)}`]\n            }\n        }\n\n        return null\n    }\n    /**\n     * Year Proxy field will be our reference point of \n     * how data should appear on the summary\n     * @returns \n     */\n    year.summaryMapValue = () => ({\n        label: field.summaryLabel || field.helpText, \n        value: fullDate ? d(fullDate) : 'Unknown'\n    })\n\n    // To avoid the year from appearing on the summary, \n    // match the ref against the proxyID itself\n    year.appearInSummary = (_: any, ref: string) => ref === field.id\n\n    /**\n     * This helps to keep computeValue of the dateProxy up-to-date when year changes\n     * @param val \n     * @returns \n     */\n    year.computedValue = (val: Option) => {\n        if (fullDate) {\n            const [_, month, day] = fullDate.split('-')\n            fullDate = `${val.value}-${month}-${day}`\n            return field.computeValue(fullDate, false)\n        }\n        if (val && val.value === 'Unknown') {\n            fullDate = ''\n            return field.computeValue('Unknown', false)\n        }\n    }\n\n    // MONTH CONFIG\n    month.updateHelpTextOnValue = (data: any) => `${month.helpText} (${buildHelpTextDate(data?.label, 'month')})`\n\n    month.proxyID = field.id\n\n    month.unload = (v: Option) => monthValue = appendLeadingZero(v.value.toString())\n\n    month.condition = (f: any) =>  datePartCondition(f)\n\n    month.validation = (v: Option) => StandardValidations.required(v)\n\n    month.defaultValue = (f: any) => getDefaultDate(f, field, 'Month')\n\n    // Add Unknown value to trigger default estimated Month\n    if (estimateMonthOrDay) {\n        month.options = () => [...MonthOptions, { label: 'Unknown', value: 'Unknown'}]\n    }\n\n    /**\n     *\n     * This helps to keep compute value up to date when month changes\n     * @param val\n     * @returns\n     */\n    month.computedValue = (val: Option, f: any) => {\n        // Estimate Month and Day when Month Value is Unknown\n        if (`${val.value}`.match(/unknown/i)) {\n            fullDate = `${f[yearID].value}-07-15`\n            return field.computeValue(fullDate, true)\n        }\n        // Default date behaviour\n        if (fullDate) {\n            const [year, _, day] = fullDate.split('-')\n            const month = appendLeadingZero(`${val.value}`)\n            fullDate = `${year}-${month}-${day}`\n            return field.computeValue(fullDate, false)\n        }\n    }\n    // DAY CONFIG\n    day.proxyID = field.id\n\n    day.updateHelpTextOnValue = (data: any) => `${day.helpText} (${buildHelpTextDate(data?.label, 'day')})`\n\n    day.condition = (f: any) => !`${f[monthID].value}`.match(/unknown/i) && datePartCondition(f) \n\n    day.validation =  (v: Option, f: any, c: any) => {\n        if (StandardValidations.required(v)) {\n            return ['Day is required for date']\n        }\n        dateIsEstimated = `${v.value}`.match(/unknown/i) ? true : false\n        // Use 15 as default value if day is estimated\n        dayValue = dateIsEstimated ? '15' :  appendLeadingZero(`${v.value}`)\n        fullDate = `${yearValue}-${monthValue}-${dayValue}`\n        return validateMinMax(fullDate, field, f, c)\n    }\n\n    day.defaultValue = (f: any) => getDefaultDate(f, field, 'Day')\n\n    day.computedValue = () => {\n        return field.computeValue(fullDate, dateIsEstimated)\n    }\n\n    day.unload = (d: any, s: any, f: any, c: any) => {\n        if (field.unload) field.unload(d, s, f, c)\n    }\n\n    day.beforeNext = (v: any, f: any) => {\n        return !field.beforeNext \n            ? true \n            : field.beforeNext(fullDate, f)\n    }\n\n    day.config = { \n        // Monthly days shown on the Day component depends on this configuration\n        // to show approprite days based on specific year and month calendar\n        year: (f: any) => f[yearID].value,\n        month: (f: any) => f[monthID].value\n    }\n    // If not configured to do estimates, dont show Unknown Button which appears by default\n    // on MonthlyDay component.\n    if (!estimateMonthOrDay) day.config.keyboardActions = []\n\n    const valueEstimateCondition = (f: any, estimateType: EstimationFieldType) => {\n        const conditions = [\n            f[yearID].value === 'Unknown',\n            field.condition ? field.condition(f) : true,\n            field.estimation.estimationFieldType === estimateType\n        ]\n        return conditions.every(Boolean)\n    }\n\n    // AGE ESTIMATE CONFIG\n    ageEstimate.proxyID = field.id\n\n    ageEstimate.validation = (v: Option, f: any, c: any) => {\n        if (v && v.value > 300) {\n            return ['Age estimate is too high and exceeding hard limit of 300']\n        }\n        if (isNaN(parseInt(v.value.toString()))) {\n            return ['Please enter a valid number']\n        }\n        const ageEstimateRegex = /^(12[0-7]|1[01][0-9]|[1-9]?[0-9])$/\n        if(!v.value.toString().match(ageEstimateRegex) ){\n            return ['Not a valid age estimate'] \n        }\n        const year = dayjs(Service.getSessionDate())\n            .subtract(v.value as number, 'years')\n            .year()\n        fullDate = `${year}-07-15`\n        return validateMinMax(fullDate, field, f, c)\n    }\n\n    ageEstimate.condition = (form: any) => valueEstimateCondition(\n        form, EstimationFieldType.AGE_ESTIMATE_FIELD\n    ) \n\n    ageEstimate.computedValue = () => field.computeValue(fullDate, true)\n\n    ageEstimate.beforeNext = (v: any, f: any) => {\n        return !field.beforeNext \n            ? true \n            : field.beforeNext(fullDate, f)\n    }\n\n    // DURATION ESTIMATE\n    durationEstimate.proxyID = field.id\n\n    durationEstimate.validation = (v: Option, f: any, c: any) => {\n        if (StandardValidations.required(v)) {\n            return ['Please select an estimate']\n        }\n        fullDate = dayjs(Service.getSessionDate())\n            .subtract(v.value as number, 'day')\n            .format(STANDARD_DATE_FORMAT)\n        return validateMinMax(fullDate, field, f, c)\n    }\n\n    durationEstimate.condition = (form: any) => valueEstimateCondition(\n        form, EstimationFieldType.MONTH_ESTIMATE_FIELD\n    )\n\n    durationEstimate.computedValue = () => field.computeValue(fullDate, true)\n\n    durationEstimate.beforeNext = (_: any, f: any) => {\n        return !field.beforeNext \n            ? true \n            : field.beforeNext(fullDate, f)\n    }\n\n    return [\n        year,\n        month,\n        day,\n        ageEstimate,\n        durationEstimate\n    ]\n}\n","/**\n * Default keyboard configurations.\n * \n * Configuration consists of one or two keyboard layouts\n * to be displayed at once.\n */\n\nimport {\n    NUMBER_PAD_LO,\n    MONTHLY_DAYS_LO,\n    ALPHABETICAL_LO,\n    QWERTY_LO,\n    SYMBOLS,\n} from \"@/components/Keyboard/KbLayouts\";\n\nexport const SYMBOLS_CONFIG = [\n    SYMBOLS,\n    [\n        ['', 'Delete']\n    ]\n]\n\nexport const NUMBERS_ONLY = [\n    NUMBER_PAD_LO,\n    [\n        ['Delete']\n    ]\n]\n\nexport const NUMBERS_WITH_UNKNOWN = [\n    NUMBER_PAD_LO,\n    [\n        ['Delete', 'Unknown']\n    ]\n]\n\nexport const NUMBERS_WITH_ESTIMATE = [\n    NUMBER_PAD_LO,\n    [\n        ['N/A'],\n        ['Delete', 'Unknown']\n    ]\n]\n\nexport const NUMBERS_WITHOUT_NA_UNKNOWN = [\n    NUMBER_PAD_LO,\n    [\n        ['Delete']\n    ]\n]\n\nexport const NUMBERS = [\n    NUMBER_PAD_LO,\n    [\n        ['Unknown', 'Delete'],\n        ['Qwerty', 'A-Z'],\n    ]\n]\n\nexport const MONTHLY_DAYS = [\n    MONTHLY_DAYS_LO,\n    [\n        ['Unknown']\n    ]\n]\n\nexport const A_TO_Z = [\n    ALPHABETICAL_LO,\n    [\n        ['0-9', 'Delete'],\n        ['Qwerty', 'Unknown'],\n        ['', 'Space']\n    ]\n]\n\nexport const QWERTY = [\n    QWERTY_LO,\n    [\n        ['', 'Delete'],\n        ['?123', '0-9'],\n        ['Space', 'Unknown']\n    ]\n]\n\n/**\n * Navigation map for switching between different keyboard layouts\n */\nexport const KEY_BTN_NAV = [\n    {\n        btn: '0-9',\n        keyboard: NUMBERS\n    },\n    {\n        btn: '?123',\n        keyboard: SYMBOLS_CONFIG\n    },\n    {   \n        btn: 'A-Z',\n        keyboard: A_TO_Z \n    },\n    {\n        btn: 'Qwerty',\n        keyboard: QWERTY\n    }\n]\n","import { infoActionSheet, optionsActionSheet } from \"@/utils/ActionSheets\";\nimport { GuideLineInterface } from \"@/utils/GuidelineEngine\";\nimport HisDate from '@/utils/Date'\n\nexport enum FlowState {\n    SET_PROVIDER = 'SET_PROVIDER',\n    CHANGE_SESSION_DATE = 'change_session_date',\n    GO_TO_PATIENT_DASHBOARD = 'go_to_patient_dashboard',\n    CHANGE_PATIENT_OUTCOME = 'change_outcome',\n    CONTINUE = 'continue',\n    EXIT = 'exit'\n}\nconst dformat = (d: string) => HisDate.toStandardHisDisplayFormat(d)\n\nexport const ENCOUNTER_GUIDELINES: Record<string, GuideLineInterface> = {\n    \"Warn if attempting to create new encounters for a deceased patient\": {\n        priority: 1,\n        actions: {\n            alert: async ({ outcomeStartDate }: any) => {\n                const action = await infoActionSheet(\n                    'Data Integrity Issue Found',\n                    `Patient died on ${dformat(outcomeStartDate)}`,\n                    'Proceeding with this outcome might affect accuracy of some reports',\n                    [\n                        { name: 'Cancel', slot: 'end', color: 'primary'},\n                        { name: 'Change outcome', slot: 'end', color: 'primary'},\n                        { name: 'Continue Anyway', slot: 'end', color: 'danger'}\n                    ]\n                )\n                return action === 'Cancel'\n                    ? FlowState.GO_TO_PATIENT_DASHBOARD\n                    : action === 'Change outcome'\n                    ? FlowState.CHANGE_PATIENT_OUTCOME\n                    : FlowState.CONTINUE\n            }\n        },\n        conditions: {\n            outcome(outcome: string) {\n                return outcome === 'Patient died'\n            },\n            outcomeStartDate(startDate: string, { sessionDate }: any) {\n                return sessionDate >= startDate\n            }\n        }\n    },\n    \"A patient's date of birth must not be less than Session Date\": {\n        priority: 2,\n        actions: {\n            alert: async ({ birthDate, sessionDate}: any) => {\n                const action = await infoActionSheet(\n                    'Data integrity issue found', '',\n                    `Session date ${dformat(sessionDate)} is less than birth date of ${dformat(birthDate)}`,\n                    [\n                        { name: 'Cancel', slot: 'end', color: 'danger'},\n                        { name: 'Change session date', slot: 'end', color: 'success'}\n                    ]\n                )\n                return action === 'Change session date'\n                    ? FlowState.CHANGE_SESSION_DATE\n                    : FlowState.GO_TO_PATIENT_DASHBOARD\n            }\n        },\n        conditions: {\n            birthDate(birthDate: string, { sessionDate }: any) {\n                return sessionDate < birthDate\n            }\n        }\n    },\n    \"Select Encounter provider when in back data entry\": {\n        priority: 3,\n        actions: {\n            selection: async ({ providers, encounterName, sessionDate, apiDate }: any) => {\n                const modal = await optionsActionSheet(\n                    `Please select a provider for ${encounterName}`,\n                    `BDE: ${dformat(sessionDate)} | Current: ${dformat(apiDate)}`,\n                    providers,\n                    [\n                        { name: 'Cancel', color: 'danger', slot: 'start', role: 'default'},\n                        { name: 'Confirm', slot: 'end', role: 'action' }\n                    ]\n                )\n                return modal.action === 'Cancel' \n                    ? { value: -1, flowState: FlowState.GO_TO_PATIENT_DASHBOARD }\n                    : { value: modal.selection, flowState: FlowState.SET_PROVIDER }\n            }\n        },\n        conditions: {\n            isBdeMode(isBDE: boolean) {\n                return isBDE\n            }\n        }\n    }\n}","\nimport TouchScreenForm from \"@/components/Forms/TouchScreenForm.vue\";\nimport { defineComponent, PropType } from \"vue\";\nimport { Field } from \"./FieldInterface\";\n\nexport default defineComponent({\n    name: \"HisStandardForm\",\n    components: { TouchScreenForm },\n    emits: [\n        'onFinish',\n        'onIndex'\n    ],\n    data: () => ({\n        formType: 'touch-screen-form' as string\n    }),\n    props: {\n        onFinishAction: {\n            type: Function\n        },\n        skipSummary: {\n            type: Boolean,\n            default: false\n        },\n        activeField: {\n            type: String\n        },\n        fields: {\n            type: Object as PropType<Field[]>,\n            required: true\n        },\n        cancelDestinationPath: {\n            type: String,\n            required: false,\n        }\n    },\n    methods: {\n        onFinish(formData: any, computedData: any) {\n            this.$emit('onFinish', formData, computedData)\n        },\n        onIndex(i: number) {\n            this.$emit('onIndex', i)\n        }\n    }\n})\n","import script from \"./EncounterMixin.vue?vue&type=script&lang=ts\"\nexport * from \"./EncounterMixin.vue?vue&type=script&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { resolveDynamicComponent as _resolveDynamicComponent, openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return (_openBlock(), _createBlock(_resolveDynamicComponent(_ctx.formType), {\n    fields: _ctx.fields,\n    skipSummary: _ctx.skipSummary,\n    activeField: _ctx.activeField,\n    cancelDestinationPath: _ctx.cancelDestinationPath,\n    onOnFinish: _ctx.onFinish,\n    onFinish: _ctx.onFinishAction,\n    onOnIndex: _ctx.onIndex\n  }, null, 8, [\"fields\", \"skipSummary\", \"activeField\", \"cancelDestinationPath\", \"onOnFinish\", \"onFinish\", \"onOnIndex\"]))\n}","import { render } from \"./HisStandardForm.vue?vue&type=template&id=6daa0375&ts=true\"\nimport script from \"./HisStandardForm.vue?vue&type=script&lang=ts\"\nexport * from \"./HisStandardForm.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/andrew-dev/Projects/HIS-Core/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","/**\n * Compares patient facts against a predefined guideline Object.\n*/\nexport interface DescriptionInterface {\n    color?: 'primary' | 'secondary' | 'danger' | 'warning';\n    info: Function;\n    text?: string;\n    show: 'onChecked' | 'always';\n}\n\nexport interface GuideLineInterface {\n    title?: string;\n    concept?: string;\n    priority: number;\n    conditions: Record<string, Function>;\n    actions?: Record<string, any>; //TODO: should <key, Function>\n    data?: Record<string, any>;\n    description?: DescriptionInterface;\n    target?: string;\n    targetEvent?: string;\n}\n\n/**\n * Match the facts with guidelines\n * @param facts \n * @param conditions \n * @returns \n */\nfunction isCondition(facts: Record<string, any>, conditions: Record<string, Function>): boolean {\n    const state = [] \n    const ignored = [-1, '', null, undefined]\n\n    for(const prop in conditions) {\n        if (!(prop in facts)) \n            continue\n        \n        const value = facts[prop]\n        if (ignored.includes(value)) {\n            state.push(false)\n            continue\n        }\n\n        state.push(conditions[prop](value, facts))\n    }\n    return state.every(Boolean)\n}\n\n/**\n * Sort guidelines in the order of importance/relevance\n * @param findings \n * @returns \n */\nfunction sortByRelevance(findings: Array<GuideLineInterface>) {\n    return findings.sort((a, b) => a.priority < b.priority ? -1 : 1)\n}\n\n/**\n * Check the guideline for matching facts and return matching object \n * @param facts: key value pair for used for searching in guidelines\n * @param guidelines: A dictionary containing fixed rules/validations that conforms to GuideLineInterface\n * @param target: Used for matching a target defined in a guidlines before executing conditions\n * @param targetEvent: used for matching a target event in a guideline before executing conditions\n * @returns\n */\nexport function matchToGuidelines(\n    facts: Record<string, any>, \n    guidelines: Record<string, GuideLineInterface>,\n    target='', \n    targetEvent=''): Array<GuideLineInterface> {\n\n    const matches = []\n    for(const guidelineIndex in guidelines) {\n        const data: GuideLineInterface = guidelines[guidelineIndex]\n \n        const targetValidations = [\n            (data.target && target && data.target != target),\n            (data.targetEvent && targetEvent \n                && data.targetEvent != targetEvent)\n        ]\n\n        if (targetValidations.some(Boolean)) {\n            continue\n        }\n\n        if (isCondition(facts, data.conditions)) {\n            data.title = guidelineIndex\n            if (data.description) {\n                data.description.text = data.description.info(facts)\n            }\n            matches.push(data)\n        }\n    }\n    return sortByRelevance(matches)\n}\n","import { resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_his_standard_form = _resolveComponent(\"his-standard-form\")\n\n  return (_openBlock(), _createBlock(_component_his_standard_form, {\n    fields: _ctx.fields,\n    skipSummary: true,\n    onFinishAction: _ctx.onFinish\n  }, null, 8, [\"fields\", \"onFinishAction\"]))\n}","\nimport { defineComponent } from \"vue\";\nimport { Field, Option } from \"@/components/Forms/FieldInterface\"\nimport { FieldType } from \"@/components/Forms/BaseFormElements\";\nimport HisStandardForm from \"@/components/Forms/HisStandardForm.vue\";\nimport Validation from \"@/components/Forms/validations/StandardValidations\";\nimport EncounterMixinVue from \"../../../../views/EncounterMixin.vue\";\nimport { ConsultationService } from \"@/apps/ART/services/consultation_service\";\nimport { generateDateFields } from \"@/utils/HisFormHelpers/MultiFieldDateHelper\";\nimport { ObservationService } from \"@/services/observation_service\";\n\nexport default defineComponent({\n  mixins: [EncounterMixinVue],\n  components: { HisStandardForm },\n  data: () => ({\n    consultation: {} as any\n  }),\n  watch: {\n    ready: {\n      handler(ready: boolean) {\n        if (ready)  {\n          this.consultation = new ConsultationService(this.patientID, this.providerID)\n          this.fields = this.getFields()\n        }\n      },\n      immediate: true\n    }\n  },\n  methods: {\n    async onFinish(_: any, computedData: any) {\n      await this.consultation.createEncounter();\n      const obs = await this.resolveObs(computedData)\n      await this.consultation.saveObservationList(obs)\n      this.$router.back()\n    },\n    getFields(): Field[] {\n      return [\n        {\n          id: \"has_hypertension\",\n          helpText: \"Does the patient have hypertension\",\n          type: FieldType.TT_SELECT,\n          options: () => this.yesNoOptions(),\n          validation: (val: any) => Validation.required(val),\n          computedValue: (v: Option) => ObservationService.buildValueCoded(\"Patient has hypertension\", `${v.value}`),\n        },\n        ...generateDateFields(\n          {\n            condition: (f: any) => f.has_hypertension.value === 'Yes',\n            id: \"hypertension_diagnosis\",\n            helpText: \"Date the patient was diagnosed with hypertension\",\n            required: true,\n            estimation: {\n              allowUnknown: false\n            },\n            computeValue: (date: string) =>  ObservationService.buildValueDate(\"Hypertension diagnosis date\", date)\n          },\n          ConsultationService.getSessionDate()\n        )\n      ]\n    }\n  }\n})\n","import { render } from \"./hypertension_diagnosis.vue?vue&type=template&id=2396c654&ts=true\"\nimport script from \"./hypertension_diagnosis.vue?vue&type=script&lang=ts\"\nexport * from \"./hypertension_diagnosis.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/andrew-dev/Projects/HIS-Core/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"sourceRoot":""}