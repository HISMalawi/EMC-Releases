{"version":3,"sources":["webpack:///./src/apps/OPD/views/encounters/Dispensing.vue?1e6c","webpack:///./src/apps/OPD/services/dispensation_service.ts","webpack:///./src/apps/OPD/views/encounters/Dispensing.vue","webpack:///./src/apps/OPD/views/encounters/Dispensing.vue?2950","webpack:///./src/services/drug_order_service.ts","webpack:///./src/guidelines/encounter_guidelines.ts","webpack:///./node_modules/cache-loader/dist/cjs.js","webpack:///./src/views/EncounterMixin.vue","webpack:///./node_modules/vue-loader-v16/dist/templateLoader.js","webpack:///./src/components/Forms/HisStandardForm.vue","webpack:///./src/utils/GuidelineEngine.ts"],"names":["render","_ctx","_cache","$props","$setup","$data","$options","_component_his_standard_form","_resolveComponent","_openBlock","_createBlock","skipSummary","cancelDestinationPath","cancelDestination","fields","DispensationService","patientID","providerID","drugHistory","currentDrugOrder","this","orderId","quantity","date","dispensations","AppEncounterService","postJson","getProgramID","void","DrugOrderService","getDrugOrderHistory","res","getDrugOrders","Promise","all","drug","units","drugOrderBarcodes","barcodes","sort","a","b","tabs","length","i","parseInt","smallestAvailableTab","completePack","defineComponent","mixins","EncounterMixinVue","data","dispensation","watch","patient","handler","getID","loadCurrentDrugOrder","loadDrugHistory","getFields","deep","methods","saveDispensations","item","buildDispensations","other","order_id","value","buildMedicationHistory","getDrugHistory","dateA","Date","order","start_date","dateB","map","d","medication","name","HisDate","toStandardHisDisplayFormat","amount","buildOrderOptions","getCurrentOrder","label","drug_id","calculateCompletePack","getPackSizesRows","drugId","availableStock","packs","getDrugPackSizes","packSize","parseFloat","amount_needed","calcCompletePack","isDoneDispensing","orders","o","every","Boolean","isValidDispensation","option","isOk","totalTabs","toString","amountNeeded","percentageGiven","alertConfirmation","id","helpText","type","FieldType","TT_DRUG_DISPENSER","onValueUpdate","l","gotoPatientDashboard","onValue","isBarcodeScanned","voidOrder","voided","dispensed","toastWarning","config","medicationHistory","toolbarInfo","getFullName","getGender","getBirthdate","hiddenFooterBtns","options","__exports__","getSessionDate","getJson","pageSize","Service","drugID","params","patientId","FlowState","dformat","ENCOUNTER_GUIDELINES","priority","actions","alert","outcomeStartDate","infoActionSheet","slot","color","action","GO_TO_PATIENT_DASHBOARD","CHANGE_PATIENT_OUTCOME","CONTINUE","conditions","outcome","startDate","sessionDate","birthDate","CHANGE_SESSION_DATE","selection","providers","encounterName","apiDate","optionsActionSheet","role","modal","flowState","SET_PROVIDER","isBdeMode","isBDE","components","HisStandardForm","facts","ready","route","patient_id","Store","get","then","patientData","setEncounterFacts","checkEncounterGuidelines","immediate","computed","patientDashboardUrl","runflowState","state","states","username","split","provider","find","person_id","$router","push","EXIT","findings","matchToGuidelines","index","finding","status","program","e","console","error","toastDanger","ProgramService","getCachedApiDate","$route","toUpperCase","usernameA","usernameB","p","isEmpty","person","names","latestName","given_name","family_name","toOption","mapStrToOptions","items","path","nextTask","yesNoOptions","toYesNoOption","values","mapOptions","yesNoUnknownOptions","resolveObs","obs","tag","Object","filter","reduce","accum","cur","Array","isArray","concat","inArray","arr","expression","validateSeries","condition","_resolveDynamicComponent","formType","activeField","onOnFinish","onFinish","onFinishAction","onOnIndex","onIndex","TouchScreenForm","emits","props","Function","default","String","required","formData","computedData","$emit","isCondition","ignored","undefined","prop","includes","sortByRelevance","guidelines","target","targetEvent","matches","guidelineIndex","targetValidations","some","title","description","text","info"],"mappings":"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","file":"js/chunk-0d8a9648.825c59e1.js","sourcesContent":["import { resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_his_standard_form = _resolveComponent(\"his-standard-form\")\n\n  return (_openBlock(), _createBlock(_component_his_standard_form, {\n    skipSummary: true,\n    cancelDestinationPath: _ctx.cancelDestination,\n    fields: _ctx.fields\n  }, null, 8, [\"cancelDestinationPath\", \"fields\"]))\n}","import { AppEncounterService } from \"@/services/app_encounter_service\";\nimport { DrugOrderService } from \"@/services/drug_order_service\";\n\nexport class DispensationService extends AppEncounterService {\n  drugHistory: Array<any>;\n  currentDrugOrder: Array<any>;\n\n  constructor(patientID: number, providerID: number) {\n    super(patientID, 54, providerID)\n    this.drugHistory = []\n    this.currentDrugOrder = []\n  }\n\n  getDrugHistory() {\n    return this.drugHistory\n  }\n\n  getCurrentOrder() {\n    return this.currentDrugOrder\n  }\n\n  buildDispensations(orderId: number, quantity: number) {\n    return [{\n      'drug_order_id': orderId,\n      date: this.date,\n      quantity: quantity\n    }]\n  }\n\n  saveDispensations(dispensations: Array<any>) {\n    return AppEncounterService.postJson('/dispensations', { \n      dispensations, \n      'program_id': AppEncounterService.getProgramID()\n    })\n  }\n\n  async voidOrder(orderId: number) {\n    return AppEncounterService.void(`/dispensations/${orderId}`, {})\n  }\n\n  async loadDrugHistory() {\n    const res = await DrugOrderService.getDrugOrderHistory(this.patientID)\n    if (res) {\n      this.drugHistory = res\n    }\n  }\n\n  async loadCurrentDrugOrder() {\n    const res = await DrugOrderService.getDrugOrders(this.patientID)\n    if (res) {\n      this.currentDrugOrder = await Promise.all(res)        \n    }\n  }\n\n  calcCompletePack(drug: any, units: number) {\n     //sorting in an ascending order by tabs\n    const drugOrderBarcodes = drug.barcodes.sort(function (a: any, b: any) {\n      return a.tabs - b.tabs;\n    });\n    if (drugOrderBarcodes.length == 0 || units == 0.0) {\n      return units;\n    }\n    for (let i = 0; i <= drugOrderBarcodes.length - 1; i++) {\n      if (parseInt(drugOrderBarcodes[i].tabs) >= units) {\n        return drugOrderBarcodes[i].tabs;\n      }\n    }\n    const smallestAvailableTab = parseInt(drugOrderBarcodes[0].tabs)\n    let completePack = parseInt(drugOrderBarcodes[drugOrderBarcodes.length - 1].tabs)\n    while (completePack < units) {\n      completePack += smallestAvailableTab\n    }\n    return completePack\n  }\n}\n","\nimport { defineComponent } from 'vue'\nimport { FieldType } from \"@/components/Forms/BaseFormElements\"\nimport { Field, Option } from \"@/components/Forms/FieldInterface\"\nimport { toastWarning, alertConfirmation } from \"@/utils/Alerts\"\nimport { DispensationService } from \"@/apps/OPD/services/dispensation_service\"\nimport EncounterMixinVue from '@/views/EncounterMixin.vue'\nimport HisDate from \"@/utils/Date\"\n\nexport default defineComponent({\n  mixins: [EncounterMixinVue],\n  data: () => ({\n    dispensation: {} as any\n  }),\n  watch: {\n    patient: {\n      async handler(patient: any){\n        this.dispensation = new DispensationService(patient.getID(), this.providerID)\n        await this.dispensation.loadCurrentDrugOrder()\n        await this.dispensation.loadDrugHistory()\n        this.fields = this.getFields()\n      },\n      deep: true\n    }\n  },\n  methods: {\n    saveDispensations(item: Option) {\n      const dispensations = this.buildDispensations(item)\n      return this.dispensation.saveDispensations(dispensations)    \n    },\n    buildDispensations(item: Option) {\n      return this.dispensation.buildDispensations(\n        item.other.order_id, item.value\n      )\n    },\n    buildMedicationHistory() {\n      return this.dispensation.getDrugHistory()\n      .sort((a: any, b: any) => {\n        const dateA: any = new Date(a.order.start_date)\n        const dateB: any = new Date(b.order.start_date)\n        return dateB - dateA\n      })\n      .map((d: any) => ({\n        medication: d.drug.name,\n        date: HisDate.toStandardHisDisplayFormat(d.order.start_date),\n        amount: d.quantity\n      }))\n    },\n    buildOrderOptions() {\n      return this.dispensation.getCurrentOrder().map((d: any) => ({\n        label: d.drug.name,\n        value: d.quantity || 0,\n        other: {\n          'drug_id': d.drug.drug_id,\n          'order_id': d.order.order_id,\n          'amount_needed': this.calculateCompletePack(d),\n        }\n      }))\n    },\n    getPackSizesRows(drugId: number, availableStock: number) {\n      const packs = this.dispensation.getDrugPackSizes(drugId)\n      return packs.map((packSize: number) => {\n        const packs = availableStock > 0 ? (availableStock / packSize) : '-'\n        return [packSize, packs, 0, 0]\n      })\n    },\n    calculateCompletePack(order: any) {\n      const units = parseFloat(order.amount_needed) - (order.quantity || 0)\n      const completePack = this.dispensation.calcCompletePack(order, units)\n      return completePack < 0 ? 0 : completePack\n    },\n    isDoneDispensing(orders: Array<Option>) {\n      return orders.map(o => o.value != 0).every(Boolean)\n    },\n    async isValidDispensation(option: Option) {\n      let isOk = true\n      const totalTabs = parseInt(option.value.toString())\n      const amountNeeded = option.other['amount_needed']\n      const percentageGiven = (totalTabs / amountNeeded) * 100\n      if (percentageGiven > 110) {\n        isOk = await alertConfirmation('Are you sure you want to dispense over 110% of the prescribed pill count?')\n      }\n      if (percentageGiven < 100) {\n        isOk = await alertConfirmation('Are you sure you want to dispense less than 100% of the prescribe amount?')\n      }\n      return isOk\n    },\n    getFields(): Array<Field> {\n      return [\n        {\n          id: 'dispenses',\n          helpText: 'Dispensation',\n          type: FieldType.TT_DRUG_DISPENSER,\n          onValueUpdate: async(i: Option, l: Option[]) => {\n            if(i.value != -1 && this.isDoneDispensing(l)) {\n              return this.gotoPatientDashboard()\n            }\n            i.other['amount_needed'] = 0\n            await this.dispensation.loadCurrentDrugOrder()\n            return this.buildOrderOptions()\n          },\n          onValue: async (i: Option, isBarcodeScanned: boolean) => {\n            if (i.value  === -1) {\n              const voided = await this.dispensation.voidOrder(i.other.order_id)\n              return voided? true : false\n            }\n            if (!isBarcodeScanned) {\n              const isValidDispensation = await this.isValidDispensation(i)\n              if (!isValidDispensation) return false\n            }\n            const dispensed = await this.saveDispensations(i)\n            if (dispensed) return true\n            toastWarning('Unable to save dispensation')\n            return false\n          },\n          config: {\n            medicationHistory: this.buildMedicationHistory(),\n            toolbarInfo: [\n              { label: 'Name', value: this.patient.getFullName() },\n              { label: 'Gender', value: this.patient.getGender() },\n              { label: 'Date Of Birth', value: HisDate.toStandardHisDisplayFormat(\n                this.patient.getBirthdate()\n              )}\n            ],\n            hiddenFooterBtns: [ \n              'Clear',\n              'Finish'\n            ]\n          },\n          options: () => this.buildOrderOptions()\n        }\n      ]\n    }\n  }\n})\n","import { render } from \"./Dispensing.vue?vue&type=template&id=1e367495&ts=true\"\nimport script from \"./Dispensing.vue?vue&type=script&lang=ts\"\nexport * from \"./Dispensing.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/andrew-dev/Projects/HIS-Core/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { DrugOrderInterface } from \"@/interfaces/DrugOrder\";\nimport { Service } from \"./service\";\n\nexport class DrugOrderService extends Service {\n    constructor() {\n        super()\n    }\n\n    static create(orders: DrugOrderInterface) {\n        return this.postJson('drug_orders', orders)\n    }\n\n    static updateDispensationOrders(orders: any) {\n        return this.postJson('dispensations', {\n            'program_id': this.getProgramID(),\n            dispensations: orders.map((order: any) => ({\n                'date': this.getSessionDate(),\n                'drug_order_id': order['order_id'],\n                'quantity': order['quantity']\n            }))\n        })\n    }\n\n    static getDrugOrderHistory(patientID: number) {\n        return this.getJson('drug_orders', { 'patient_id': patientID })\n    }\n\n    static getDrugOrders(patientID: number) {\n        return this.getJson('drug_orders', {\n            'patient_id': patientID,\n            'date': this.getSessionDate(),\n            'program_id': this.getProgramID()\n        })\n    }\n\n    static getAllDrugOrders(patientID: number, pageSize=1000) {\n        return this.getJson('drug_orders', {\n            'patient_id': patientID,\n            'program_id': Service.getProgramID(),\n            'page_size': pageSize\n        })\n    }\n\n    static getLastDrugsReceived(patientID: number) {\n        return this.getJson(`patients/${patientID}/last_drugs_received`, {\n            'date': this.getSessionDate(),\n            'program_id': this.getProgramID()\n        })\n    }\n\n    static getDrugDosages(patientID: number, drugID: number, date=this.getSessionDate()) {\n        const params = { 'drug_id': drugID, 'date': date }\n        return this.getJson(`programs/${this.getProgramID()}/patients/${patientID}/drug_doses`, params)\n    }\n\n    static getOrderByPatient(patientId: number, params: any) {\n        return this.getJson('/drug_orders', {\n            'patient_id': patientId,\n            'program_id': this.getProgramID(),\n            ...params\n        })\n    }\n\n}","import { infoActionSheet, optionsActionSheet } from \"@/utils/ActionSheets\";\nimport { GuideLineInterface } from \"@/utils/GuidelineEngine\";\nimport HisDate from '@/utils/Date'\n\nexport enum FlowState {\n    SET_PROVIDER = 'SET_PROVIDER',\n    CHANGE_SESSION_DATE = 'change_session_date',\n    GO_TO_PATIENT_DASHBOARD = 'go_to_patient_dashboard',\n    CHANGE_PATIENT_OUTCOME = 'change_outcome',\n    CONTINUE = 'continue',\n    EXIT = 'exit'\n}\nconst dformat = (d: string) => HisDate.toStandardHisDisplayFormat(d)\n\nexport const ENCOUNTER_GUIDELINES: Record<string, GuideLineInterface> = {\n    \"Warn if attempting to create new encounters for a deceased patient\": {\n        priority: 1,\n        actions: {\n            alert: async ({ outcomeStartDate }: any) => {\n                const action = await infoActionSheet(\n                    'Data Integrity Issue Found',\n                    `Patient died on ${dformat(outcomeStartDate)}`,\n                    'Proceeding with this outcome might affect accuracy of some reports',\n                    [\n                        { name: 'Cancel', slot: 'end', color: 'primary'},\n                        { name: 'Change outcome', slot: 'end', color: 'primary'},\n                        { name: 'Continue Anyway', slot: 'end', color: 'danger'}\n                    ]\n                )\n                return action === 'Cancel'\n                    ? FlowState.GO_TO_PATIENT_DASHBOARD\n                    : action === 'Change outcome'\n                    ? FlowState.CHANGE_PATIENT_OUTCOME\n                    : FlowState.CONTINUE\n            }\n        },\n        conditions: {\n            outcome(outcome: string) {\n                return outcome === 'Patient died'\n            },\n            outcomeStartDate(startDate: string, { sessionDate }: any) {\n                return sessionDate >= startDate\n            }\n        }\n    },\n    \"A patient's date of birth must not be less than Session Date\": {\n        priority: 2,\n        actions: {\n            alert: async ({ birthDate, sessionDate}: any) => {\n                const action = await infoActionSheet(\n                    'Data integrity issue found', '',\n                    `Session date ${dformat(sessionDate)} is less than birth date of ${dformat(birthDate)}`,\n                    [\n                        { name: 'Cancel', slot: 'end', color: 'danger'},\n                        { name: 'Change session date', slot: 'end', color: 'success'}\n                    ]\n                )\n                return action === 'Change session date'\n                    ? FlowState.CHANGE_SESSION_DATE\n                    : FlowState.GO_TO_PATIENT_DASHBOARD\n            }\n        },\n        conditions: {\n            birthDate(birthDate: string, { sessionDate }: any) {\n                return sessionDate < birthDate\n            }\n        }\n    },\n    \"Select Encounter provider when in back data entry\": {\n        priority: 3,\n        actions: {\n            selection: async ({ providers, encounterName, sessionDate, apiDate }: any) => {\n                const modal = await optionsActionSheet(\n                    `Please select a provider for ${encounterName}`,\n                    `BDE: ${dformat(sessionDate)} | Current: ${dformat(apiDate)}`,\n                    providers,\n                    [\n                        { name: 'Cancel', color: 'danger', slot: 'start', role: 'default'},\n                        { name: 'Confirm', slot: 'end', role: 'action' }\n                    ]\n                )\n                return modal.action === 'Cancel' \n                    ? { value: -1, flowState: FlowState.GO_TO_PATIENT_DASHBOARD }\n                    : { value: modal.selection, flowState: FlowState.SET_PROVIDER }\n            }\n        },\n        conditions: {\n            isBdeMode(isBDE: boolean) {\n                return isBDE\n            }\n        }\n    }\n}","\nimport TouchScreenForm from \"@/components/Forms/TouchScreenForm.vue\";\nimport { defineComponent, PropType } from \"vue\";\nimport { Field } from \"./FieldInterface\";\n\nexport default defineComponent({\n    name: \"HisStandardForm\",\n    components: { TouchScreenForm },\n    emits: [\n        'onFinish',\n        'onIndex'\n    ],\n    data: () => ({\n        formType: 'touch-screen-form' as string\n    }),\n    props: {\n        onFinishAction: {\n            type: Function\n        },\n        skipSummary: {\n            type: Boolean,\n            default: false\n        },\n        activeField: {\n            type: String\n        },\n        fields: {\n            type: Object as PropType<Field[]>,\n            required: true\n        },\n        cancelDestinationPath: {\n            type: String,\n            required: false,\n        }\n    },\n    methods: {\n        onFinish(formData: any, computedData: any) {\n            this.$emit('onFinish', formData, computedData)\n        },\n        onIndex(i: number) {\n            this.$emit('onIndex', i)\n        }\n    }\n})\n","import script from \"./EncounterMixin.vue?vue&type=script&lang=ts\"\nexport * from \"./EncounterMixin.vue?vue&type=script&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { resolveDynamicComponent as _resolveDynamicComponent, openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return (_openBlock(), _createBlock(_resolveDynamicComponent(_ctx.formType), {\n    fields: _ctx.fields,\n    skipSummary: _ctx.skipSummary,\n    activeField: _ctx.activeField,\n    cancelDestinationPath: _ctx.cancelDestinationPath,\n    onOnFinish: _ctx.onFinish,\n    onFinish: _ctx.onFinishAction,\n    onOnIndex: _ctx.onIndex\n  }, null, 8, [\"fields\", \"skipSummary\", \"activeField\", \"cancelDestinationPath\", \"onOnFinish\", \"onFinish\", \"onOnIndex\"]))\n}","import { render } from \"./HisStandardForm.vue?vue&type=template&id=6daa0375&ts=true\"\nimport script from \"./HisStandardForm.vue?vue&type=script&lang=ts\"\nexport * from \"./HisStandardForm.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/andrew-dev/Projects/HIS-Core/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","/**\n * Compares patient facts against a predefined guideline Object.\n*/\nexport interface DescriptionInterface {\n    color?: 'primary' | 'secondary' | 'danger' | 'warning';\n    info: Function;\n    text?: string;\n    show: 'onChecked' | 'always';\n}\n\nexport interface GuideLineInterface {\n    title?: string;\n    concept?: string;\n    priority: number;\n    conditions: Record<string, Function>;\n    actions?: Record<string, any>; //TODO: should <key, Function>\n    data?: Record<string, any>;\n    description?: DescriptionInterface;\n    target?: string;\n    targetEvent?: string;\n}\n\n/**\n * Match the facts with guidelines\n * @param facts \n * @param conditions \n * @returns \n */\nfunction isCondition(facts: Record<string, any>, conditions: Record<string, Function>): boolean {\n    const state = [] \n    const ignored = [-1, '', null, undefined]\n\n    for(const prop in conditions) {\n        if (!(prop in facts)) \n            continue\n        \n        const value = facts[prop]\n        if (ignored.includes(value)) {\n            state.push(false)\n            continue\n        }\n\n        state.push(conditions[prop](value, facts))\n    }\n    return state.every(Boolean)\n}\n\n/**\n * Sort guidelines in the order of importance/relevance\n * @param findings \n * @returns \n */\nfunction sortByRelevance(findings: Array<GuideLineInterface>) {\n    return findings.sort((a, b) => a.priority < b.priority ? -1 : 1)\n}\n\n/**\n * Check the guideline for matching facts and return matching object \n * @param facts: key value pair for used for searching in guidelines\n * @param guidelines: A dictionary containing fixed rules/validations that conforms to GuideLineInterface\n * @param target: Used for matching a target defined in a guidlines before executing conditions\n * @param targetEvent: used for matching a target event in a guideline before executing conditions\n * @returns\n */\nexport function matchToGuidelines(\n    facts: Record<string, any>, \n    guidelines: Record<string, GuideLineInterface>,\n    target='', \n    targetEvent=''): Array<GuideLineInterface> {\n\n    const matches = []\n    for(const guidelineIndex in guidelines) {\n        const data: GuideLineInterface = guidelines[guidelineIndex]\n \n        const targetValidations = [\n            (data.target && target && data.target != target),\n            (data.targetEvent && targetEvent \n                && data.targetEvent != targetEvent)\n        ]\n\n        if (targetValidations.some(Boolean)) {\n            continue\n        }\n\n        if (isCondition(facts, data.conditions)) {\n            data.title = guidelineIndex\n            if (data.description) {\n                data.description.text = data.description.info(facts)\n            }\n            matches.push(data)\n        }\n    }\n    return sortByRelevance(matches)\n}\n"],"sourceRoot":""}