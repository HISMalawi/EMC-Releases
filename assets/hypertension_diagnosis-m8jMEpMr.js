import{F as n}from"./dynamic-import-helper-9HnG3Mif.js";import{H as a}from"./HisStandardForm-tiWNF5wA.js";import{d as r,cq as p,V as d,aS as o,_ as h,r as l,o as m,c}from"./index-iM2cGz0p.js";import{_ as u}from"./EncounterMixin.vue_vue_type_script_lang-rY_xqw9L.js";import{g as f}from"./MultiFieldDateHelper-BIZNjBD7.js";import"./TouchScreenForm-hvB0I83y.js";import"./ToolbarMediumCard-ny9gUih7.js";import"./Transformers-XlEF3tgP.js";import"./ViewPort-4mhPlN2U.js";import"./encounter_guidelines-zqd44jxT.js";import"./GuidelineEngine-syyQoOzo.js";import"./KbLayouts-9dqmDWmG.js";import"./HisKbConfigurations-a7K7dizM.js";const _=r({mixins:[u],components:{HisStandardForm:a},data:()=>({consultation:{}}),watch:{ready:{handler(e){e&&(this.consultation=new p(this.patientID,this.providerID),this.fields=this.getFields())},immediate:!0}},methods:{async onFinish(e,t){await this.consultation.createEncounter();const i=await this.resolveObs(t);await this.consultation.saveObservationList(i),this.$router.back()},getFields(){return[{id:"has_hypertension",helpText:"Does the patient have hypertension",type:n.TT_SELECT,options:()=>this.yesNoOptions(),validation:e=>d.required(e),computedValue:e=>o.buildValueCoded("Patient has hypertension","".concat(e.value))},...f({condition:e=>e.has_hypertension.value==="Yes",id:"hypertension_diagnosis",helpText:"Date the patient was diagnosed with hypertension",required:!0,estimation:{allowUnknown:!1},computeValue:e=>o.buildValueDate("Hypertension diagnosis date",e)})]}}});function y(e,t,i,v,F,w){const s=l("his-standard-form");return m(),c(s,{fields:e.fields,skipSummary:!0,onFinishAction:e.onFinish},null,8,["fields","onFinishAction"])}const H=h(_,[["render",y]]);export{H as default};
