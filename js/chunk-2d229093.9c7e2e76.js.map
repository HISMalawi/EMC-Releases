{"version":3,"sources":["webpack:///./src/apps/ANC/Views/Encounters/VisitType.vue?fbcb","webpack:///./src/apps/ANC/Services/anc_visit_type_service.ts","webpack:///./src/apps/ANC/Views/Encounters/VisitType.vue","webpack:///./src/apps/ANC/Views/Encounters/VisitType.vue?adb1"],"names":["render","_ctx","_cache","$props","$setup","$data","$options","_component_his_standard_form","_resolveComponent","_component_ion_page","_openBlock","_createBlock","default","_withCtx","_createVNode","fields","skipSummary","onFinishAction","onFinish","cancelDestinationPath","cancelDestination","_","AncVisitTypeService","patientID","providerID","visitNumber","this","saveValueNumericObs","AppEncounterService","defineComponent","components","IonPage","mixins","EncounterMixinVue","data","service","watch","ready","handler","getFields","immediate","methods","f","c","visit","createEncounter","saveVisitNumber","nextTask","id","helpText","type","FieldType","TT_NUMBER","computedValue","v","value","validation","validateSeries","Validation","required","__exports__"],"mappings":"uIAEM,SAAUA,EAAOC,EAAMC,EAAQC,EAAQC,EAAQC,EAAOC,GAC1D,IAAMC,EAA+BC,8BAAkB,qBACjDC,EAAsBD,8BAAkB,YAE9C,OAAQE,yBAAcC,yBAAaF,EAAqB,KAAM,CAC5DG,QAASC,sBAAS,iBAAM,CACtBC,yBAAaP,EAA8B,CACzCQ,OAAQd,EAAKc,OACbC,aAAa,EACbC,eAAgBhB,EAAKiB,SACrBC,sBAAuBlB,EAAKmB,mBAC3B,KAAM,EAAG,CAAC,SAAU,iBAAkB,8BAE3CC,EAAG,I,wICbMC,EAAb,wDACI,WAAYC,EAAmBC,GAAkB,0CACvCD,EAAW,IAAKC,GAF9B,sDAKI,SAAgBC,GACZ,OAAOC,KAAKC,oBAAoB,gBAAiBF,OANzD,GAAyCG,QCO1BC,+BAAgB,CAC7BC,WAAY,CAAEC,gBACdC,OAAQ,CAACC,QACTC,KAAM,iBAAO,CACXC,QAAS,KAEXC,MAAO,CACLC,MAAO,CACLC,QADK,SACGD,GACFA,IACFX,KAAKX,OAASW,KAAKa,cAGvBC,WAAW,IAGfC,QAAS,CACDvB,SADC,SACQwB,EAAQC,GAAM,qKACrBC,EAAQ,IAAItB,EAAoB,EAAKC,UAAW,EAAKC,YADhC,SAErBoB,EAAMC,kBAFe,uBAGrBD,EAAME,gBAAgBH,EAAE,iBAHH,OAI3B,EAAKI,WAJsB,8CAM7BR,UAPO,WAOE,WACP,MAAO,CACL,CACES,GAAI,eACJC,SAAU,mBACVC,KAAMC,OAAUC,UAChBC,cAAe,SAACC,GAAD,OAAeA,EAAEC,OAChCC,WAAY,SAACF,GAAD,OAAe,EAAKG,eAAe,CAC7C,kBAAMC,OAAWC,SAASL,IAC1B,kBAAQA,EAAEC,MAAQ,GAAKD,EAAEC,OAAS,IAAiD,KAA1C,CAAC,iD,qBCpCtD,MAAMK,EAA2B,IAAgB,EAAQ,CAAC,CAAC,SAAS5D,KAErD","file":"js/chunk-2d229093.9c7e2e76.js","sourcesContent":["import { resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_his_standard_form = _resolveComponent(\"his-standard-form\")\n  const _component_ion_page = _resolveComponent(\"ion-page\")\n\n  return (_openBlock(), _createBlock(_component_ion_page, null, {\n    default: _withCtx(() => [\n      _createVNode(_component_his_standard_form, {\n        fields: _ctx.fields,\n        skipSummary: true,\n        onFinishAction: _ctx.onFinish,\n        cancelDestinationPath: _ctx.cancelDestination\n      }, null, 8, [\"fields\", \"onFinishAction\", \"cancelDestinationPath\"])\n    ]),\n    _: 1\n  }))\n}","import { AppEncounterService } from \"@/services/app_encounter_service\";\n\nexport class AncVisitTypeService extends AppEncounterService {\n    constructor(patientID: number, providerID: number) {\n        super(patientID, 107, providerID)\n    }\n\n    saveVisitNumber(visitNumber: number) {\n        return this.saveValueNumericObs('Type of visit', visitNumber)\n    }\n}\n","\nimport EncounterMixinVue from '@/views/EncounterMixin.vue'\nimport { FieldType } from \"@/components/Forms/BaseFormElements\"\nimport { defineComponent } from 'vue'\nimport { Option } from '@/components/Forms/FieldInterface'\nimport Validation from \"@/components/Forms/validations/StandardValidations\"\nimport { IonPage } from \"@ionic/vue\"\nimport { AncVisitTypeService } from \"@/apps/ANC/Services/anc_visit_type_service\"\n\nexport default defineComponent({\n  components: { IonPage },\n  mixins: [EncounterMixinVue],\n  data: () => ({\n    service: {} as any\n  }),\n  watch: {\n    ready: {\n      handler(ready: boolean) {\n        if (ready) {\n          this.fields = this.getFields()\n        }\n      },\n      immediate: true\n    }\n  },\n  methods: {\n    async onFinish(f: any, c: any) {\n      const visit = new AncVisitTypeService(this.patientID, this.providerID)\n      await visit.createEncounter()\n      await visit.saveVisitNumber(c['visit_number'])\n      this.nextTask()\n    },\n    getFields() {\n      return [\n        {\n          id: 'visit_number',\n          helpText: 'ANC Visit Number',\n          type: FieldType.TT_NUMBER,\n          computedValue: (v: Option) => v.value,\n          validation: (v: Option) => this.validateSeries([\n            () => Validation.required(v),\n            () => !(v.value > 0 && v.value <= 500) ? ['Value not within range of 1 and 500'] : null\n          ])\n        }\n      ]\n    }\n  }\n})\n","import { render } from \"./VisitType.vue?vue&type=template&id=caaa9e6e&ts=true\"\nimport script from \"./VisitType.vue?vue&type=script&lang=ts\"\nexport * from \"./VisitType.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/andrew-dev/Projects/HIS-Core/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"sourceRoot":""}