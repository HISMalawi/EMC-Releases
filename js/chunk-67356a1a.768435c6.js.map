{"version":3,"sources":["webpack:///./src/apps/OPD/views/reports/clinic/DrugsGivenWithPrescription.vue?96cc","webpack:///./src/apps/OPD/views/reports/clinic/DrugsGivenWithPrescription.vue","webpack:///./src/apps/OPD/views/reports/clinic/DrugsGivenWithPrescription.vue?dc48","webpack:///./src/apps/OPD/services/opd_report_service.ts"],"names":["render","_ctx","_cache","$props","$setup","$data","$options","_component_report_template","_resolveComponent","_component_ion_page","_openBlock","_createBlock","default","_withCtx","_createVNode","title","rows","fields","columns","period","onReportConfiguration","init","customBtns","_","defineComponent","components","ReportTemplate","IonPage","mixins","ReportMixin","data","reportData","highLevelStats","table","thTxt","created","this","getDateDurationFields","push","name","size","slot","color","visible","onClick","showModal","methods","config","reportService","OpdReportService","setStartDate","start_date","setEndDate","end_date","getDateIntervalPeriod","getDrugsGivenWithPrescription","buildRows","length","map","record","td","given_name","family_name","gender","HisDate","toStandardHisDisplayFormat","birthdate","drug_name","quantity","date","buildHighlevelView","counter","asyncRows","drug","label","value","drilldownData","reduce","r","e","result","Object","keys","d","__exports__","LA_TYPES","one","two","three","four","NCD_TYPES","MENTAL_HEALTH_DIAGNOSIS","endDate","startDate","epiweek","Service","getSessionDate","programID","getProgramID","getReport","url","getJson","printService","PrintoutService","params","forEach","v","i","printLbl","Url","parameterizeObjToString","buildRequest","payload","minDuration","quarters","year","getCurrentYear","start","end"],"mappings":"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","file":"js/chunk-67356a1a.768435c6.js","sourcesContent":["import { resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_report_template = _resolveComponent(\"report-template\")\n  const _component_ion_page = _resolveComponent(\"ion-page\")\n\n  return (_openBlock(), _createBlock(_component_ion_page, null, {\n    default: _withCtx(() => [\n      _createVNode(_component_report_template, {\n        title: _ctx.title,\n        rows: _ctx.rows,\n        fields: _ctx.fields,\n        columns: _ctx.columns,\n        period: _ctx.period,\n        onReportConfiguration: _ctx.init,\n        customBtns: _ctx.customBtns\n      }, null, 8, [\"title\", \"rows\", \"fields\", \"columns\", \"period\", \"onReportConfiguration\", \"customBtns\"])\n    ]),\n    _: 1\n  }))\n}","\nimport { defineComponent } from 'vue'\nimport { OpdReportService } from \"@/apps/OPD/services/opd_report_service\"\nimport ReportTemplate from \"@/views/reports/BaseTableReport.vue\"\nimport table, { ColumnInterface, RowInterface } from \"@/components/DataViews/tables/ReportDataTable\"\nimport HisDate from '@/utils/Date'\nimport ReportMixin from '@/apps/ART/views/reports/ReportMixin.vue'\nimport { IonPage } from \"@ionic/vue\";\n\nexport default defineComponent({\n  components: { ReportTemplate, IonPage },\n  mixins: [ReportMixin],\n  data: () => ({\n    title: 'OPD medication given (with prescription)',\n    rows: [] as RowInterface[][], \n    reportData: [] as any,\n    highLevelStats: [] as any,\n    columns: [[\n      table.thTxt('First Name'),\n      table.thTxt('Last Name'),\n      table.thTxt('Gender'),\n      table.thTxt('DOB'),\n      table.thTxt('Drug'),\n      table.thTxt('Quantity'),\n      table.thTxt('Date'),\n    ]] as ColumnInterface[][],\n    customBtns: [] as any\n  }),\n  created(){\n    this.fields = this.getDateDurationFields()\n    this.customBtns.push({\n      name: \"High level view\",\n      size: \"large\",\n      slot: \"start\",\n      color: \"primary\",\n      visible: true,\n      onClick: async () => await this.showModal()\n    })\n  },\n  methods: {\n    async init(_: any, config: any){\n      const reportService = new OpdReportService()\n      reportService.setStartDate(config.start_date)\n      reportService.setEndDate(config.end_date)\n      this.period = reportService.getDateIntervalPeriod()\n      this.reportData = await reportService.getDrugsGivenWithPrescription();\n      this.rows = this.buildRows(this.reportData)\n    },\n    buildRows(data: any[]): RowInterface[][] {\n      if(!data.length) return []\n      return data.map((record: any) => [\n        table.td(record.given_name),\n        table.td(record.family_name),\n        table.td(record.gender),\n        table.td(HisDate.toStandardHisDisplayFormat(record.birthdate)),\n        table.td(record.drug_name),\n        table.td(record.quantity),\n        table.td(HisDate.toStandardHisDisplayFormat(record.date)),\n      ])\n    },\n    async showModal() {\n      await this.buildHighlevelView();\n      const columns = [\n        [\n          table.thTxt('Number'),\n          table.thTxt('Drug Name'),\n          table.thTxt('Quantity')\n        ]\n      ]\n      let counter = 1;\n      const asyncRows = this.highLevelStats.map((drug: any) => ([\n                          table.td(counter++),\n                          table.td(drug.label),\n                          table.td(drug.value)\n                        ]))\n\n      await this.drilldownData(\"Durgs Given with prescription Report Summary\", columns, asyncRows, false)\n    },\n    async buildHighlevelView(){\n      const result = await this.reportData.reduce(function(r: any, e: any) {\n        if(!r[e.drug_name]) {\n          r[e.drug_name] = {label:e.drug_name,value:0}\n        }\n        r[e.drug_name].value += e.quantity\n        return r\n      }, {})\n      this.highLevelStats = Object.keys(result).map((d) => {return result[d]})\n    }\n  },\n})\n","import { render } from \"./DrugsGivenWithPrescription.vue?vue&type=template&id=325c741b&ts=true\"\nimport script from \"./DrugsGivenWithPrescription.vue?vue&type=script&lang=ts\"\nexport * from \"./DrugsGivenWithPrescription.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/andrew-dev/Projects/HIS-Core/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { Service } from \"@/services/service\";\nimport HisDate from \"@/utils/Date\"\nimport { PrintoutService } from '@/services/printout_service';\nimport Url from \"@/utils/Url\";\n\nexport interface QuarterInterface {\n    name: string;\n    start: string;\n    end: string;\n}\n\nexport const AGE_GROUPS = [\n    '0-5 months', '6-11 months',\n    '12-23 months', '2-4 years', \n    '5-9 years', '10-14 years', \n    '15-17 years', '18-19 years', \n    '20-24 years', '25-29 years', \n    '30-34 years', '35-39 years', \n    '40-44 years', '45-49 years', \n    '50 plus years'\n]\n\nexport const OTHER_AGE_GROUPS = [\n    '<1 year', '1-4 years',\n    '5-9 years', '10-14 years',\n    '15-19 years', '20-24 years',\n    '25-29 years', '30-34 years',\n    '35-39 years', '40-44 years',\n    '45-49 years', '50 plus years'\n]\n\nexport const LA_TYPES: Record<string, string> = {\n    one: 'AL 1', \n    two: 'AL 2', \n    three: 'AL 3', \n    four: 'LA 4'\n}\n\nexport const NCD_TYPES = [\n    'Diabetes',\n    'Hypertension',\n    'Stroke',\n    'Suspected cancer',\n    'Confirmed cancer',\n    'Palliative cancer',\n    'Asthma',\n    'Depression',\n    'Acute psychosis',\n    'Chronic psychosis',\n    'Epilepsy'\n]\n\nexport const MENTAL_HEALTH_DIAGNOSIS = [\n    'Organic mental disorder (Chronic)',\n    'Organic mental disorder (acute)',\n    'Alcohol use mental disorder',\n    'Drug use mental disorder',\n    'Schizophrenia',\n    'Acute and transient psychotic disorder',\n    'Schizo-affective disorder',\n    'Mood-affective disorder (MANIC)',\n    'Mood-affective disorder (BIPOLAR)',\n    'Mood-affective disorder (DEPRESSION)',\n    'Anxiety disorder',\n    'Stress reaction adjustment disorder',\n    'Dissociative conversion disorder',\n    'Somatoform disorder',\n    'Puerperal mental disorder',\n    'Personality/Behaviour disorder',\n    'Mental retardation',\n    'Psychological mental disorder',\n    'Hyperkinetic conduct disorder',\n    'Epilepsy'\n]\n\nexport class OpdReportService extends Service {\n    programID: number;\n    startDate: string;\n    endDate: string;\n    date: string;\n    epiweek: string;\n    constructor() {\n        super()\n        this.endDate = ''\n        this.startDate = ''\n        this.epiweek = ''\n        this.date = Service.getSessionDate()\n        this.programID = Service.getProgramID()\n    }\n\n    getPatientsWithNIDs() {\n        return this.getReport('with_nids')\n    }\n\n    getClinicRegistrations(){\n        return this.getReport('registration');\n    }\n\n    getDrugsGivenWithoutPrescription() {\n        return this.getReport('drugs_given_without_prescription')\n    }\n\n    getDrugsGivenWithPrescription() {\n        return this.getReport('drugs_given_with_prescription')\n    }\n\n    getDiagnosis(){\n        const url = `programs/${this.programID}/reports/diagnosis`\n        return Service.getJson(url, {\n            'start_date': this.startDate,\n            'end_date': this.endDate,\n            'date': this.date\n        })\n    }\n\n    getDiagnosisByAddress(){\n        return this.getReport('diagnosis_by_address')\n    }\n\n    getLaPrescriptions(){\n        const url = `programs/${this.programID}/reports/la_prescriptions`\n        return Service.getJson(url, {\n            'start_date': this.startDate,\n            'end_date': this.endDate,\n            \n        })\n    }\n\n    printLaReport(data: Record<string, any>){\n        const printService = new PrintoutService()\n        const url = `programs/${this.programID}/barcodes/la_report`\n        const params: Record<string, any> = {\n            \"date[start]\": this.startDate,\n            \"date[end]\": this.endDate\n        }\n        Object.keys(LA_TYPES).forEach((v, i) => {\n            i++\n            params[`${i}[prescription]`] = data[`total_la_${v}_prescribed_drugs`]\n            params[`${i}[dispensed]`] = data[`total_la_${v}_dispensed_drugs`]\n        })\n        return printService.printLbl(`${url}?${Url.parameterizeObjToString(params)}`)\n    }\n\n    getDateIntervalPeriod() {\n        return `${HisDate.toStandardHisDisplayFormat(this.startDate)} - ${HisDate.toStandardHisDisplayFormat(this.endDate)}`\n    }\n\n    setStartDate(startDate: string) {\n        this.startDate = startDate\n    }  \n\n    setEndDate(endDate: string) {\n        this.endDate = endDate\n    }\n\n    setEpiWeek(epiweek: string) {\n        this.epiweek = epiweek\n    }\n\n    getReportPeriod() {\n        return this.startDate && this.endDate\n         ? `${HisDate.toStandardHisDisplayFormat(this.startDate)} - ${HisDate.toStandardHisDisplayFormat(this.endDate)}`\n         : '-'\n    }\n\n    getReport(url: string, params={}) {\n        return Service.getJson(url, this.buildRequest(params))\n    }\n\n    buildRequest(config: Record<string, any> = {}) {\n        const payload: any = {'date': this.date, 'program_id': this.programID}\n        if (this.startDate && this.endDate) {\n            payload['start_date'] = this.startDate\n            payload['end_date'] = this.endDate\n        }\n        if (this.epiweek) {\n            payload['epiweek'] = this.epiweek\n        }\n        return { ...payload, ...config }\n    }\n\n    static getReportQuarters(minDuration= 4) {\n        const quarters: Array<QuarterInterface> = []\n        let year = HisDate.getCurrentYear()\n        for(let i=0; i < minDuration; ++i) {\n            quarters.push({ name: `Q4 ${year}`, start: `${year}-10-01`, end: `${year}-12-31` })\n            quarters.push({ name: `Q3 ${year}`, start: `${year}-07-01`, end: `${year}-09-30` })\n            quarters.push({ name: `Q2 ${year}`, start: `${year}-04-01`, end: `${year}-06-30` })\n            quarters.push({ name: `Q1 ${year}`, start: `${year}-01-01`, end: `${year}-03-31` })\n            --year\n        }\n        return quarters\n    }\n\n}"],"sourceRoot":""}