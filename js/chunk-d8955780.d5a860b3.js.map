{"version":3,"sources":["webpack:///./src/views/EncounterMixin.vue","webpack:///./src/views/EncounterMixin.vue?fc39","webpack:///./src/components/Forms/HisStandardForm.vue?8e31","webpack:///./src/components/Forms/HisStandardForm.vue","webpack:///./src/components/Forms/HisStandardForm.vue?5176","webpack:///./src/apps/ANC/Views/Encounters/CurrentPregnancy.vue?5693","webpack:///./src/apps/ANC/Views/Encounters/CurrentPregnancy.vue","webpack:///./src/apps/ANC/Views/Encounters/CurrentPregnancy.vue?9e49","webpack:///./src/guidelines/encounter_guidelines.ts","webpack:///./src/utils/GuidelineEngine.ts","webpack:///./src/components/Forms/BaseFormElements.ts","webpack:///./src/utils/HisFormHelpers/LocationFieldOptions.ts","webpack:///./src/components/FormElements lazy ^\\.\\/.*\\.vue$ namespace object","webpack:///./src/apps/ANC/Services/anc_current_pregnancy.ts"],"names":["defineComponent","components","HisStandardForm","data","patient","fields","patientID","providerID","providers","facts","sessionDate","apiDate","encounterName","isBdeMode","birthDate","outcome","outcomeStartDate","ready","watch","handler","route","params","patient_id","this","parseInt","Store","get","then","patientData","setEncounterFacts","checkEncounterGuidelines","immediate","deep","computed","cancelDestination","patientDashboardUrl","methods","runflowState","state","states","FlowState","SET_PROVIDER","selection","username","split","provider","find","person_id","CONTINUE","CHANGE_SESSION_DATE","$router","push","EXIT","CHANGE_PATIENT_OUTCOME","GO_TO_PATIENT_DASHBOARD","gotoPatientDashboard","findings","matchToGuidelines","ENCOUNTER_GUIDELINES","index","_finding$actions","_finding$actions3","finding","actions","alert","_finding$actions2","status","_finding$actions4","flowState","value","program","startDate","e","console","error","toastDanger","ProgramService","getSessionDate","getCachedApiDate","isBDE","getBirthdate","$route","name","toString","toUpperCase","sort","a","b","usernameA","usernameB","map","p","_p$person","isEmpty","person","names","_p$person2","latestName","given_name","family_name","toOption","label","other","mapStrToOptions","items","i","path","nextTask","yesNoOptions","toYesNoOption","values","mapOptions","options","option","yesNoUnknownOptions","resolveObs","obs","tag","Object","filter","d","reduce","accum","cur","Array","isArray","concat","Promise","all","inArray","arr","expression","length","validateSeries","conditions","condition","__exports__","render","_ctx","_cache","$props","$setup","$data","$options","_openBlock","_createBlock","_resolveDynamicComponent","formType","skipSummary","activeField","cancelDestinationPath","onOnFinish","onFinish","onFinishAction","onOnIndex","onIndex","TouchScreenForm","emits","props","type","Function","Boolean","default","String","required","formData","computedData","$emit","_component_his_standard_form","_resolveComponent","_component_ion_page","_withCtx","_createVNode","_","IonPage","mixins","EncounterMixinVue","service","gestationWeeks","delieveryDate","AncCurrentPregnancyService","getFields","enrollPatient","RecordConflictError","warn","createEncounter","saveObservationList","buildLnmpObs","v","lnmp","buildValueDate","buildValueNumber","calculateWeekOfFirstVisit","id","proxyID","helpText","FieldType","TT_FULL_DATE","config","allowUnknown","computedValue","beforeNext","async","alertConfirmation","validation","Validation","lmpDate","Date","today","TT_NUMBER","f","rangeOf","dynamicHelpText","defaultValue","test","calculateGestationDateFromPeriod","estimate_lmp","estimateDelieveryDate","TT_SELECT","buildValueText","getFacilities","footerBtns","slot","onClickComponentEvents","setValue","btnEvent","btnOutput","onClick","getLocationName","showKeyboard","isFilterDataViaApi","buildValueCoded","dformat","HisDate","toStandardHisDisplayFormat","priority","action","infoActionSheet","color","modal","optionsActionSheet","role","isCondition","ignored","undefined","prop","includes","every","sortByPriority","sortByWeight","weight","guidelines","target","targetEvent","sortBy","matches","guidelineIndex","targetValidations","some","title","description","text","info","COMPONENT_REFS","TT_ASYNC_MULTI_SELECT","TT_LINKAGE_CODE","TT_MULTI_SELECT_GRID","TT_AGE_INPUT","TT_BARCODE","TT_NOTE","TT_CARD_SELECTOR","TT_MULTIPLE_SELECT","TT_TEXT","TT_MONTHLY_DAYS","TT_ART_REGIMEN_SELECTION","TT_NEXT_VISIT_INTERVAL_SELECTION","TT_TABLE_VIEWER","TT_DOSAGE_INPUT","TT_YES_NO","TT_MULTIPLE_YES_NO","TT_WEIGHT_CHART","TT_VITALS_ENTRY","TT_APPOINTMENTS_ENTRY","TT_COMPLAINTS_PICKER","TT_CLINIC_HOLIDAY_PICKER","TT_SUMMARY","TT_ART_STAGING_SUMMARY","TT_ADHERENCE_INPUT","TT_LAB_ORDERS","TT_PERSON_RESULT_VIEW","TT_PROGRAM_SELECTION","TT_DATE_PICKER","TT_RELATION_SELECTION","TT_FILING_NUMBER_VIEW","TT_PERSON_MATCH_VIEW","TT_BATCH_ENTRY","TT_BATCH_VERIFICATION","TT_BATCH_MOVEMENT","TT_IP_ADDRESS","TT_TEXT_BANNER","TT_DISPENSATION_INPUT","TT_DATA_TABLE","TT_GROUP_SELECTOR","TT_ANC_PREGNANCY_INPUT_CONFIG","TT_ANC_PREGNANCY_DETAILS_INPUT","TT_DRUG_TRANSFER_IN","TT_GRID_SELECTOR","TT_ANC_DRUGSET_INPUT","TT_RADIOLOGY_PICKER","TT_PRESCRIPTION_INPUT","TT_INFINITE_SCROLL_MULTIPLE_SELECT","TT_DRUG_DISPENSER","facilities","LocationService","trim","facility","location_id","getLabFacilities","getLabs","getFacilityWards","wards","ward","getSpecialistClinics","clinics","clinic","getRegions","regions","region","region_id","getDistricts","regionID","districts","district","district_id","getTraditionalAuthorities","districtID","TAs","TA","traditional_authority_id","getVillages","traditionalAuthorityID","villages","village","village_id","webpackAsyncContext","req","__webpack_require__","o","resolve","Error","code","ids","slice","keys","module","exports","AppEncounterService","constructor","super","PatientProgramService","enrollProgram","setStateDate","date","setStateId","updateState","lnmpDate","theDate","setDate","getDate","s","Math","floor","period","dayjs","subtract","endOf","format","setMonth","getMonth","month","AppendleadingZero","day","getFullYear","estimateLnmpDate","gestationInWeeks","buildDelieveryDateObs"],"mappings":"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2O,KAIRvI,eAAeyI,EAAYC,EAAgClQ,EAAK,IACnE,MAAMmQ,QAAiB5B,OAAgB0B,YAAYC,EAAwBlQ,GAC3E,OAAOmQ,EAAS3P,IAAK4P,IAAY,CAC7BjP,MAAOiP,EAAQpQ,KACfb,MAAOiR,EAAQC,WACfjP,MAAOgP,O,qBC5Ef,IAAI5P,EAAM,CACT,wBAAyB,CACxB,OACA,qBAED,iCAAkC,CACjC,OACA,qBAED,+BAAgC,CAC/B,OACA,qBAED,0BAA2B,CAC1B,OACA,qBAED,yBAA0B,CACzB,OACA,iBACA,qBAED,sBAAuB,CACtB,OACA,qBAED,kCAAmC,CAClC,OACA,qBAED,0BAA2B,CAC1B,OACA,iBACA,qBAED,mBAAoB,CACnB,OACA,qBAED,yBAA0B,CACzB,OACA,qBAED,6BAA8B,CAC7B,OACA,sBAED,0BAA2B,CAC1B,OACA,iBACA,sBAED,oBAAqB,CACpB,OACA,sBAED,wBAAyB,CACxB,OACA,2DACA,sBAED,+BAAgC,CAC/B,OACA,sBAED,wBAAyB,CACxB,OACA,sBAED,sBAAuB,CACtB,OACA,iBACA,iBACA,sBAED,yBAA0B,CACzB,OACA,iBACA,iBACA,sBAED,6BAA8B,CAC7B,OACA,iBACA,iBACA,sBAED,wBAAyB,CACxB,OACA,sBAED,+BAAgC,CAC/B,OACA,2DACA,sBAED,4BAA6B,CAC5B,OACA,sBAED,qBAAsB,CACrB,OACA,sBAED,qBAAsB,CACrB,OACA,sBAED,sBAAuB,CACtB,OACA,2DACA,sBAED,uBAAwB,CACvB,OACA,iBACA,sBAED,wBAAyB,CACxB,OACA,sBAED,yBAA0B,CACzB,OACA,sBAED,qBAAsB,CACrB,OACA,sBAED,wCAAyC,CACxC,OACA,sBAED,qBAAsB,CACrB,OACA,iBACA,sBAED,uBAAwB,CACvB,OACA,sBAED,2BAA4B,CAC3B,OACA,sBAED,0BAA2B,CAC1B,OACA,iBACA,sBAED,6BAA8B,CAC7B,OACA,sBAED,gBAAiB,CAChB,OACA,sBAED,uBAAwB,CACvB,OACA,sBAED,6BAA8B,CAC7B,OACA,iBACA,sBAED,2BAA4B,CAC3B,OACA,sBAED,kBAAmB,CAClB,OACA,sBAED,mBAAoB,CACnB,OACA,sBAED,uBAAwB,CACvB,OACA,sBAED,sBAAuB,CACtB,OACA,sBAED,qBAAsB,CACrB,OACA,sBAED,uBAAwB,CACvB,OACA,sBAED,uBAAwB,CACvB,OACA,sBAED,yBAA0B,CACzB,OACA,sBAED,yBAA0B,CACzB,OACA,sBAED,wBAAyB,CACxB,OACA,sBAED,yBAA0B,CACzB,OACA,sBAED,yBAA0B,CACzB,OACA,sBAED,2BAA4B,CAC3B,OACA,sBAED,oBAAqB,CACpB,OACA,sBAED,oBAAqB,CACpB,OACA,uBAGF,SAAS8P,EAAoBC,GAC5B,IAAIC,EAAoBC,EAAEjQ,EAAK+P,GAC9B,OAAO1N,QAAQ6N,UAAUjU,MAAK,WAC7B,IAAI6C,EAAI,IAAIqR,MAAM,uBAAyBJ,EAAM,KAEjD,MADAjR,EAAEsR,KAAO,mBACHtR,KAIR,IAAIuR,EAAMrQ,EAAI+P,GAAMxJ,EAAK8J,EAAI,GAC7B,OAAOhO,QAAQC,IAAI+N,EAAIC,MAAM,GAAGtQ,IAAIgQ,EAAoBlR,IAAI7C,MAAK,WAChE,OAAO+T,EAAoBzJ,MAG7BuJ,EAAoBS,KAAO,WAC1B,OAAO3O,OAAO2O,KAAKvQ,IAEpB8P,EAAoBvJ,GAAK,OACzBiK,EAAOC,QAAUX,G,kCC5PjB,+FAKM,MAAOpK,UAAmCgL,OAC5CC,YAAY/V,EAAmBC,GAC3B+V,MAAMhW,EAAW,GAAIC,GAGzB,sBACI,MAAM+D,EAAU,IAAIiS,OAAsBhV,KAAKjB,iBAIzCgE,EAAQkS,gBACdlS,EAAQmS,aAAalV,KAAKmV,MAC1BpS,EAAQqS,WAAW,WACbrS,EAAQsS,cAGlB5K,0BAA0B6K,GACtB,MAAMC,EAAe,IAAI/J,KAAK8J,GAC9BC,EAAQC,QAAQD,EAAQE,UAAY,GACpC,MAAMhK,EAAa,IAAID,KAAKxL,KAAKyV,WAC3BC,EAAIjK,EAAQ8J,EAClB,OAAOI,KAAKC,MAAMF,EAAI,QAG1B1J,iCAAiC6J,GAC7B,OAAOC,IAAM9V,KAAKmV,MAAMY,SAASF,EAAQ,UAAUG,MAAM,SAASC,OAAO,cAG7E/J,sBAAsBoJ,GAClB,MAAMC,EAAe,IAAI/J,KAAK8J,GAC9BC,EAAQC,QAAQD,EAAQE,UAAY,GACpCF,EAAQW,SAASX,EAAQY,WAAa,GACtC,MAAMC,EAAQC,eAAkBd,EAAQY,WAAW,GAC7CG,EAAMD,eAAkBd,EAAQE,WACtC,MAAO,GAAGF,EAAQgB,iBAAiBH,KAASE,IAGhDE,iBAAiBC,GACf,OAAOX,MACJC,SAASU,EAAkB,SAC3BV,SAAS,EAAG,QACZE,OAAO,cAGZS,sBAAsBnL,GACpB,GAAe,WAAXA,EACF,MAAO,CACLvL,KAAKuK,eAAe,wBAAyBgB,GAC7CvL,KAAKuK,eAAe,6BAClBvK,KAAKkM,sBAAsBX,IAE7BvL,KAAKwK,iBAAiB,sBACpBxK,KAAKyK,0BAA0Bc","file":"js/chunk-d8955780.d5a860b3.js","sourcesContent":["\n/**\n * @deprecated moved to useEncounter composable\n * \n */\nimport { defineComponent } from 'vue'\nimport { Field, Option } from '@/components/Forms/FieldInterface'\nimport { ProgramService } from \"@/services/program_service\"\nimport { find, isEmpty } from \"lodash\"\nimport { nextTask } from \"@/utils/WorkflowTaskHelper\"\nimport { ENCOUNTER_GUIDELINES, FlowState } from \"@/guidelines/encounter_guidelines\"\nimport { matchToGuidelines } from \"@/utils/GuidelineEngine\"\nimport HisStandardForm from \"@/components/Forms/HisStandardForm.vue\";\nimport { toastDanger } from '@/utils/Alerts'\nimport Store from \"@/composables/ApiStore\"\n\nexport default defineComponent({\n    components: { HisStandardForm },\n    data: () => ({\n        patient: {} as any,\n        fields: [] as Array<Field>,\n        patientID: '' as any,\n        providerID: -1 as number,\n        providers: [] as any,\n        facts: {\n            sessionDate: '' as string,\n            apiDate: '' as string,\n            encounterName: 'N/A' as string,\n            providers: [] as Array<any>,\n            isBdeMode: false as boolean,\n            birthDate: '' as string,\n            outcome: '' as string,\n            outcomeStartDate: '' as string\n        },\n        ready: false\n    }),\n    watch: {\n       '$route': {\n            handler(route: any) {\n                if(route.params.patient_id && this.patientID != route.params.patient_id) {\n                    this.patientID = parseInt(route.params.patient_id);\n                    Store.get('ACTIVE_PATIENT', { patientID: this.patientID})\n                        .then(patientData => {\n                            this.patient = patientData\n                            this.setEncounterFacts().then(() => {\n                                this.checkEncounterGuidelines().then(() => {\n                                    this.ready = true\n                                })\n                            })\n                        })\n                    }\n            },\n            immediate: true,\n            deep: true\n        }\n    },\n    computed: {\n        cancelDestination(): string {\n            return this.patientDashboardUrl()\n        }\n    },\n    methods: {\n        runflowState(state: FlowState, params=null) {\n            const states: any = {}\n            states[FlowState.SET_PROVIDER] = (selection: any) => {\n                const [ username ] = selection.split(' ')\n                const provider = find(this.providers, { username })\n                if (provider) this.providerID = provider.person_id\n                return FlowState.CONTINUE\n            }\n            states[FlowState.CHANGE_SESSION_DATE] = () => { \n                this.$router.push(`/session/date?patient_dashboard_redirection_id=${this.patientID}`)\n                return FlowState.EXIT\n            }\n            states[FlowState.CHANGE_PATIENT_OUTCOME] = () => {\n                this.$router.push(`/patient/programs/${this.patientID}`)\n                return FlowState.EXIT\n            }\n            states[FlowState.GO_TO_PATIENT_DASHBOARD] = () => {\n                this.gotoPatientDashboard()\n                return FlowState.EXIT\n            }\n            if (state in states) {\n                return states[state](params)\n            }\n        },\n        async checkEncounterGuidelines() {\n            const findings = matchToGuidelines(this.facts, ENCOUNTER_GUIDELINES)\n            for(const index in findings) {\n                const finding = findings[index]\n                if (finding?.actions?.alert) {\n                    const status = this.runflowState((await finding?.actions?.alert(this.facts)))\n                    if (status === FlowState.EXIT) return\n                }\n                if (finding?.actions?.selection) {\n                    const selection = await finding?.actions?.selection(this.facts)\n                    this.runflowState(selection.flowState, selection.value)\n                }\n            }\n        },\n        async setEncounterFacts() {\n            try {\n                const program = await Store.get('PATIENT_PROGRAM', { patientID: this.patientID })\n                this.facts.outcome = program.outcome\n                this.facts.outcomeStartDate = program.startDate\n            } catch (e) {\n                console.error(e)\n                toastDanger(`${e}`)\n            }\n            this.facts.sessionDate = ProgramService.getSessionDate()\n            this.facts.apiDate = ProgramService.getCachedApiDate() as string\n            this.facts.isBdeMode = ProgramService.isBDE() as boolean\n            this.facts.birthDate = this.patient.getBirthdate()\n            this.facts.encounterName = this.$route.name \n                ? this.$route.name.toString().toUpperCase()\n                : 'N/A'\n            if (ProgramService.isBDE()) {\n                this.providers = await Store.get('PROVIDERS')\n                this.facts.providers = this.providers\n                    .sort((a: any, b: any) => {\n                        const usernameA = a.username.toUpperCase()\n                        const usernameB = b.username.toUpperCase()\n                        return usernameA < usernameB ? -1 : usernameA > usernameB  ? 1 : 0\n                    })\n                    .map((p: any) => {\n                        let name = `${p.username}`\n                        if (!isEmpty(p?.person?.names)) {\n                            const [ latestName ] = p.person?.names || []\n                            name += ` (${latestName.given_name} ${latestName.family_name})`\n                        }\n                        return name\n                    })\n            }\n        },\n        toOption(label: string, other={}) {\n            return {\n                label,\n                value: label,\n                other\n            }\n        },\n        mapStrToOptions(items: string[]) {\n            return items.map(i => ({label: i, value: i}))\n        },\n        patientDashboardUrl(): string {\n            return `/patient/dashboard/${this.patientID}`\n        },\n        gotoPatientDashboard() {\n            return this.$router.push({path: this.patientDashboardUrl()})\n        },\n        nextTask() {\n            return nextTask(this.patientID, this.$router)\n        },\n        yesNoOptions(): Option[] {\n            return [\n                { label: \"Yes\", value: \"Yes\" },\n                { label: \"No\", value: \"No\" }\n            ]\n        },\n        toYesNoOption(label: string, other: any={}): Option {\n            return {\n                label,\n                value: '',\n                other: {\n                    ...other,\n                    values: this.yesNoOptions()\n                }\n            } \n        },\n        mapOptions(options: Array<string>) {\n            return options.map((option) => {\n                return { label: option, value: option }\n            });\n        },\n        yesNoUnknownOptions(): Option[] {\n            return [\n                { label: \"Yes\", value: \"Yes\" },\n                { label: \"No\", value: \"No\" },\n                { label: \"Unknown\", value: \"Unknown\" }\n            ]\n        },\n        resolveObs(obs: any, tag='') {\n            const values: any = Object.values(obs)\n                .filter((d: any) => d && (d.tag === tag || tag === ''))\n                .reduce((accum: any, cur: any) => { \n                    const data = cur.obs ? cur.obs : cur\n                    if (Array.isArray(data)) {\n                        accum = accum.concat(data)\n                    } else if (typeof data === 'function') {\n                        accum.push(data())\n                    } else {\n                        accum.push(data)\n                    }\n                    return accum\n                    }, [])\n            return Promise.all(values)\n        },\n        inArray(arr: Array<any>, expression: (i: any) => boolean): boolean {\n            try {\n                return arr.filter((i: any) => expression(i)).length > 0\n            } catch (e) {\n                return false\n            }\n        },\n        validateSeries(conditions: Array<any>){\n            try {\n                for(const i in conditions) {\n                    const condition = conditions[i]()\n\n                    if (condition) return condition\n                }\n            } catch (e) {\n                return [e]\n            }\n        }\n    }\n})\n","import script from \"./EncounterMixin.vue?vue&type=script&lang=ts\"\nexport * from \"./EncounterMixin.vue?vue&type=script&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { resolveDynamicComponent as _resolveDynamicComponent, openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  return (_openBlock(), _createBlock(_resolveDynamicComponent(_ctx.formType), {\n    fields: _ctx.fields,\n    skipSummary: _ctx.skipSummary,\n    activeField: _ctx.activeField,\n    cancelDestinationPath: _ctx.cancelDestinationPath,\n    onOnFinish: _ctx.onFinish,\n    onFinish: _ctx.onFinishAction,\n    onOnIndex: _ctx.onIndex\n  }, null, 40, [\"fields\", \"skipSummary\", \"activeField\", \"cancelDestinationPath\", \"onOnFinish\", \"onFinish\", \"onOnIndex\"]))\n}","\nimport TouchScreenForm from \"@/components/Forms/TouchScreenForm.vue\";\nimport { defineComponent, PropType } from \"vue\";\nimport { Field } from \"./FieldInterface\";\n\nexport default defineComponent({\n    name: \"HisStandardForm\",\n    components: { TouchScreenForm },\n    emits: [\n        'onFinish',\n        'onIndex'\n    ],\n    data: () => ({\n        formType: 'touch-screen-form' as string\n    }),\n    props: {\n        onFinishAction: {\n            type: Function\n        },\n        skipSummary: {\n            type: Boolean,\n            default: false\n        },\n        activeField: {\n            type: String\n        },\n        fields: {\n            type: Object as PropType<Field[]>,\n            required: true\n        },\n        cancelDestinationPath: {\n            type: String,\n            required: false,\n        }\n    },\n    methods: {\n        onFinish(formData: any, computedData: any) {\n            this.$emit('onFinish', formData, computedData)\n        },\n        onIndex(i: number) {\n            this.$emit('onIndex', i)\n        }\n    }\n})\n","import { render } from \"./HisStandardForm.vue?vue&type=template&id=6daa0375&ts=true\"\nimport script from \"./HisStandardForm.vue?vue&type=script&lang=ts\"\nexport * from \"./HisStandardForm.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/daniel/projects/malawi-emr/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_his_standard_form = _resolveComponent(\"his-standard-form\")!\n  const _component_ion_page = _resolveComponent(\"ion-page\")!\n\n  return (_openBlock(), _createBlock(_component_ion_page, null, {\n    default: _withCtx(() => [\n      _createVNode(_component_his_standard_form, {\n        fields: _ctx.fields,\n        skipSummary: true,\n        onFinishAction: _ctx.onFinish,\n        cancelDestinationPath: _ctx.cancelDestination\n      }, null, 8, [\"fields\", \"onFinishAction\", \"cancelDestinationPath\"])\n    ]),\n    _: 1\n  }))\n}","\nimport EncounterMixinVue from '@/views/EncounterMixin.vue'\nimport { FieldType } from \"@/components/Forms/BaseFormElements\"\nimport { defineComponent } from 'vue'\nimport { AncCurrentPregnancyService } from \"@/apps/ANC/Services/anc_current_pregnancy\"\nimport { Field, FooterBtnEvent, Option } from '@/components/Forms/FieldInterface'\nimport Validation from \"@/components/Forms/validations/StandardValidations\"\nimport { IonPage } from \"@ionic/vue\"\nimport { ObsValue } from '@/services/observation_service'\nimport { getFacilities } from \"@/utils/HisFormHelpers/LocationFieldOptions\"\nimport HisDate from \"@/utils/Date\"\nimport { alertConfirmation } from '@/utils/Alerts'\nimport { RecordConflictError } from '@/services/service'\n\nexport default defineComponent({\n  components: { IonPage },\n  mixins: [EncounterMixinVue],\n  data: () => ({\n    service: {} as AncCurrentPregnancyService,\n    gestationWeeks: 0,\n    delieveryDate: \"\",\n  }),\n  watch: {\n    ready: {\n      async handler(ready: boolean) {\n        if (ready) {\n            this.service = new AncCurrentPregnancyService(this.patientID, this.providerID)\n            this.fields = this.getFields()\n        } \n      },\n      immediate: true\n    }\n  },\n  methods: {\n    async onFinish(_: any, computedData: any) {\n      try {\n        await this.service.enrollPatient()\n      } catch (e) {\n       if(e instanceof RecordConflictError) {\n        console.warn(`${e}`)\n       } else {\n         throw e\n       }\n      }\n      const obs = await this.resolveObs(computedData)\n      await this.service.createEncounter()\n      await this.service.saveObservationList(obs as ObsValue[])\n      this.nextTask()\n    },\n    buildLnmpObs(v: Option) {\n      if (v.value != 'Unknown') {\n        const lnmp = v.value as string;\n        return [\n          this.service.buildValueDate('Last menstrual period', lnmp),\n          this.service.buildValueNumber('Week of First Visit', this.service.calculateWeekOfFirstVisit(lnmp))\n        ]\n      }\n    },\n    getFields(): Field[] {\n      return [\n        {\n                id: 'lnmp',\n                proxyID: 'delivery_date',\n                helpText: 'Last Normal Menstrual Period',\n                type: FieldType.TT_FULL_DATE,\n                config: { allowUnknown: true },\n                computedValue: this.buildLnmpObs,\n                beforeNext: async (v: Option) => {\n                  this.gestationWeeks = this.service.calculateWeekOfFirstVisit(v.value as string)\n                  if (typeof this.gestationWeeks === 'number') {\n                    if (this.gestationWeeks <= 0 || this.gestationWeeks > 42) {\n                      if ((await alertConfirmation('Gestation weeks out of range of 0-42. Are you sure you want to continue?'))) {\n                        return true\n                      } else {\n                        return false\n                      }\n                    }\n                  }\n                  return true\n                },\n                validation: (v: Option) => this.validateSeries([\n                  () => Validation.required(v),\n                  () => {\n                      if (v.value) {\n                        const lmpDate = new Date(v.value)\n                        const today = new Date()\n                        if (lmpDate > today) {\n                          return ['Last menstrual period cannot be in the future']\n                        }\n                      }\n                      return null\n                  }\n                ]),\n            },\n            {\n                id: 'estimate_lmp',\n                proxyID: 'delivery_date',\n                helpText: 'Gestation (months)',\n                type: FieldType.TT_NUMBER,\n                condition: (f: any) => f.lnmp.value === 'Unknown',\n                computedValue: this.buildLnmpObs,\n                validation: (v: Option) => this.validateSeries([\n                    () => Validation.required(v),\n                    () => Validation.rangeOf(v, 1, 10)\n                ])\n            },\n            {\n              id: \"expected_delivary_date\",\n              helpText: \"Expected Date Of Delivery\",\n              type: FieldType.TT_FULL_DATE,\n              dynamicHelpText: () => `Expected Date Of Delivery (Gestation Weeks: ${this.gestationWeeks})`,\n              defaultValue: (f: any) => {\n                const lnmp = /unknown/i.test(f.lnmp.value) \n                  ? this.service.calculateGestationDateFromPeriod(f.estimate_lmp.value)\n                  : f.lnmp.value\n                  return this.service.estimateDelieveryDate(lnmp) \n              },\n              computedValue: (v: Option) => this.service.buildValueDate('Estimated date of delivery', v.value as string),\n              validation: (v: Option) => Validation.required(v)\n            },\n            {\n                id: 'planned_delivery_place',\n                helpText: 'Planned delivery place',\n                type: FieldType.TT_SELECT,\n                computedValue: (v: Option) => this.service.buildValueText('Planned Delivery Place', v.label),\n                validation: (v: Option) => Validation.required(v),\n                options: (_: any, filter='') => getFacilities(filter),\n                config: {\n                    footerBtns: [\n                      {\n                        name: \"Here\",\n                        slot: \"end\",\n                        onClickComponentEvents: {\n                          setValue: (btnEvent: FooterBtnEvent) => {\n                            return btnEvent.btnOutput\n                          }\n                        },\n                        onClick: () => AncCurrentPregnancyService.getLocationName()\n                      }\n                    ],\n                    showKeyboard: true,\n                    isFilterDataViaApi: true\n                }\n            },\n            {\n                id: 'bed_net_available_for_use',\n                helpText: 'Mosquito net in good condition available for own use',\n                type: FieldType.TT_SELECT,\n                condition: () => false, /// Feature disabled\n                computedValue: (v: Option) => this.service.buildValueCoded('Do you use bed nets', v.value),\n                validation: (v: Option) => Validation.required(v),\n                options: () => {\n                    return this.yesNoOptions()\n                }\n            },\n            {\n                id: 'bed_net_given',\n                helpText: 'Bed net given today',\n                type: FieldType.TT_SELECT,\n                computedValue: (v: Option) => this.service.buildValueCoded('Mosquito net started', v.value),\n                validation: (v: Option) => Validation.required(v),\n                options: () => {\n                    return this.yesNoOptions()\n                }\n            },\n            {\n                id: 'previous_td_given',\n                helpText: 'Previous TD given before this pregnancy',\n                type: FieldType.TT_NUMBER,\n                computedValue: (v: Option) => this.service.buildValueNumber('TD Booster', v.value as number), //Previously called TTV\n                validation: (v: Option) => Validation.required(v)\n            }\n        ]\n    }\n  }\n})\n","import { render } from \"./CurrentPregnancy.vue?vue&type=template&id=c3ea4bc2&ts=true\"\nimport script from \"./CurrentPregnancy.vue?vue&type=script&lang=ts\"\nexport * from \"./CurrentPregnancy.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/daniel/projects/malawi-emr/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { infoActionSheet, optionsActionSheet } from \"@/utils/ActionSheets\";\nimport { GuideLineInterface } from \"@/utils/GuidelineEngine\";\nimport HisDate from '@/utils/Date'\n\nexport enum FlowState {\n    SET_PROVIDER = 'SET_PROVIDER',\n    CHANGE_SESSION_DATE = 'change_session_date',\n    GO_TO_PATIENT_DASHBOARD = 'go_to_patient_dashboard',\n    CHANGE_PATIENT_OUTCOME = 'change_outcome',\n    CONTINUE = 'continue',\n    EXIT = 'exit'\n}\nconst dformat = (d: string) => HisDate.toStandardHisDisplayFormat(d)\n\nexport const ENCOUNTER_GUIDELINES: Record<string, GuideLineInterface> = {\n    \"Warn if attempting to create new encounters for a deceased patient\": {\n        priority: 1,\n        actions: {\n            alert: async ({ outcomeStartDate }: any) => {\n                const action = await infoActionSheet(\n                    'Data Integrity Issue Found',\n                    `Patient died on ${dformat(outcomeStartDate)}`,\n                    'Proceeding with this outcome might affect accuracy of some reports',\n                    [\n                        { name: 'Cancel', slot: 'end', color: 'primary'},\n                        { name: 'Change outcome', slot: 'end', color: 'primary'},\n                        { name: 'Continue Anyway', slot: 'end', color: 'danger'}\n                    ]\n                )\n                return action === 'Cancel'\n                    ? FlowState.GO_TO_PATIENT_DASHBOARD\n                    : action === 'Change outcome'\n                    ? FlowState.CHANGE_PATIENT_OUTCOME\n                    : FlowState.CONTINUE\n            }\n        },\n        conditions: {\n            outcome(outcome: string) {\n                return outcome === 'Patient died'\n            },\n            outcomeStartDate(startDate: string, { sessionDate }: any) {\n                return sessionDate >= startDate\n            }\n        }\n    },\n    \"A patient's date of birth must not be less than Session Date\": {\n        priority: 2,\n        actions: {\n            alert: async ({ birthDate, sessionDate}: any) => {\n                const action = await infoActionSheet(\n                    'Data integrity issue found', '',\n                    `Session date ${dformat(sessionDate)} is less than birth date of ${dformat(birthDate)}`,\n                    [\n                        { name: 'Cancel', slot: 'end', color: 'danger'},\n                        { name: 'Change session date', slot: 'end', color: 'success'}\n                    ]\n                )\n                return action === 'Change session date'\n                    ? FlowState.CHANGE_SESSION_DATE\n                    : FlowState.GO_TO_PATIENT_DASHBOARD\n            }\n        },\n        conditions: {\n            birthDate(birthDate: string, { sessionDate }: any) {\n                return sessionDate < birthDate\n            }\n        }\n    },\n    \"Select Encounter provider when in back data entry\": {\n        priority: 3,\n        actions: {\n            selection: async ({ providers, encounterName, sessionDate, apiDate }: any) => {\n                const modal = await optionsActionSheet(\n                    `Please select a provider for ${encounterName}`,\n                    `BDE: ${dformat(sessionDate)} | Current: ${dformat(apiDate)}`,\n                    providers,\n                    [\n                        { name: 'Cancel', color: 'danger', slot: 'start', role: 'default'},\n                        { name: 'Confirm', slot: 'end', role: 'action' }\n                    ]\n                )\n                return modal.action === 'Cancel' \n                    ? { value: -1, flowState: FlowState.GO_TO_PATIENT_DASHBOARD }\n                    : { value: modal.selection, flowState: FlowState.SET_PROVIDER }\n            }\n        },\n        conditions: {\n            isBdeMode(isBDE: boolean) {\n                return isBDE\n            }\n        }\n    }\n}","/**\n * Compares patient facts against a predefined guideline Object.\n*/\nexport interface DescriptionInterface {\n    color?: 'primary' | 'secondary' | 'danger' | 'warning';\n    info: (facts: FactsInterface) => any;\n    text?: string;\n    show: 'onChecked' | 'always';\n}\n\nexport interface GuideLineInterface {\n    title?: string;\n    concept?: string;\n    weight?: number;\n    priority?: number;\n    conditions: ConditionsInteface;\n    actions?: Record<string, any>; //TODO: should <key, Function>\n    data?: Record<string, any>;\n    description?: DescriptionInterface;\n    target?: string;\n    targetEvent?: string;\n}\n\nexport type FactsInterface = Record<string, any>\nexport type ConditionResolver = (value: any, facts: FactsInterface) => boolean | RegExpMatchArray | null\nexport type ConditionsInteface = Record<string, ConditionResolver>\n\n/**\n * Match the facts with guidelines\n * @param facts \n * @param conditions \n * @returns \n */\nfunction isCondition(facts: FactsInterface, conditions: ConditionsInteface): boolean {\n    const state = [] \n    const ignored = [-1, '', null, undefined]\n\n    for(const prop in conditions) {\n        if (!(prop in facts)) \n            continue\n        \n        const value = facts[prop]\n        if (ignored.includes(value)) {\n            state.push(false)\n            continue\n        }\n\n        state.push(conditions[prop](value, facts))\n    }\n    return state.every(Boolean)\n}\n\n/**\n * Sort guidelines in the order of importance/relevance\n * @param findings \n * @returns \n */\nfunction sortByPriority(findings: GuideLineInterface[]) {\n    return findings.sort((a, b) => (a.priority && b.priority) && a.priority < b.priority ? -1 : 1)\n}\n\nfunction sortByWeight(findings: GuideLineInterface[]) {\n    return findings.sort((a, b) => (a.weight && b.weight) && a.weight > b.weight ? -1 : 1)\n}\n\nexport function logFindingsByWeight(guidelines: Record<string, GuideLineInterface>) {\n    const findings: any = Object.keys(guidelines).map(i => ({ name: i, weight: guidelines[i].weight}))\n    console.log(sortByWeight(findings).map((i: any) => `${i.weight} -> ${i.name}`))\n}\n\n/**\n * Check the guideline for matching facts and return matching object \n * @param facts: key value pair for used for searching in guidelines\n * @param guidelines: A dictionary containing fixed rules/validations that conforms to GuideLineInterface\n * @param target: Used for matching a target defined in a guidlines before executing conditions\n * @param targetEvent: used for matching a target event in a guideline before executing conditions\n * @returns\n */\nexport function matchToGuidelines(\n    facts: FactsInterface, \n    guidelines: Record<string, GuideLineInterface>,\n    target='', \n    targetEvent='',\n    sortBy='priority' as 'priority' | 'weight'): Array<GuideLineInterface> {\n    const matches = []\n    for(const guidelineIndex in guidelines) {\n        const data: GuideLineInterface = guidelines[guidelineIndex]\n        const targetValidations = [\n            (data.target && target && data.target != target),\n            (data.targetEvent && targetEvent \n                && data.targetEvent != targetEvent)\n        ]\n\n        if (targetValidations.some(Boolean)) {\n            continue\n        }\n\n        if (isCondition(facts, data.conditions)) {\n            data.title = guidelineIndex\n            if (data.description) {\n                data.description.text = data.description.info(facts)\n            }\n            matches.push(data)\n        }\n    }\n    return sortBy === 'priority' ? sortByPriority(matches) : sortByWeight(matches)\n}\n","/**\n * Map all formElements/components defined in \"@/components/FormElements\" \n * in the Enum below by their file name.\n * \n * Next step is to add FieldType entry in COMPONENT_REFS in the \n * Array below the FieldType Enum\n */\nexport enum FieldType {\n    TT_ASYNC_MULTI_SELECT = 'AsyncMultiSelect',\n    TT_LINKAGE_CODE = 'LinkageCodeInput',\n    TT_MULTI_SELECT_GRID= 'HisMultiSelectGrid',\n    TT_AGE_INPUT='HisAgeInput',\n    TT_GROUP_SELECTOR = 'HisGroupSelector',\n    TT_DATA_TABLE = 'HisDataTable',\n    TT_GRID_SELECTOR = 'HisGridSelector',\n    TT_NOTE = 'HisNote',\n    TT_BARCODE = 'HisBarcodeInput',\n    TT_MONTHLY_DAYS=\"HisMonthlyDays\",\n    TT_TEXT=\"HisTextInput\",\n    TT_NUMBER = \"HisNumberInput\",\n    TT_DATETIME=\"datetime\",\n    TT_SELECT=\"HisSelect\",\n    TT_MULTIPLE_SELECT=\"HisMultipleSelect\",\n    TT_ART_REGIMEN_SELECTION=\"HisArtRegimenSelection\",\n    TT_NEXT_VISIT_INTERVAL_SELECTION=\"HisNextVisitInterval\",\n    TT_TABLE_VIEWER=\"HisTableViewer\",\n    TT_DOSAGE_INPUT=\"HisDosageInput\",\n    TT_YES_NO=\"YesNoSelect\",\n    TT_MULTIPLE_YES_NO=\"MultiYesNoSelect\",\n    TT_SUMMARY=\"HisSummary\",\n    TT_WEIGHT_CHART = \"HisWeightChart\",\n    TT_VITALS_ENTRY=\"HisVitalsEntry\",\n    TT_ADHERENCE_INPUT = \"HisAdherenceInput\",\n    TT_ART_STAGING_SUMMARY = \"ArtStagingSummary\",\n    TT_LAB_ORDERS = \"HisLabOrders\",\n    TT_APPOINTMENTS_ENTRY = \"HisAppointments\",\n    TT_DISPENSATION_INPUT = 'DrugDispensationSelection',\n    TT_PROGRAM_SELECTION = 'ProgramSelection',\n    TT_DATE_PICKER = 'HisDatePicker',\n    TT_PERSON_RESULT_VIEW = 'PersonSearchView',\n    TT_RELATION_SELECTION = 'RelationsSelection',\n    TT_FILING_NUMBER_VIEW = 'FilingNumberView',\n    TT_CARD_SELECTOR = 'HisCardSelector',\n    TT_PERSON_MATCH_VIEW = 'PersonMatchView',\n    TT_FULL_DATE = 'HisDateInput',\n    TT_BATCH_ENTRY = 'HisBatchEntry',\n    TT_BATCH_VERIFICATION = 'HisBatchVerification',\n    TT_BATCH_MOVEMENT = 'HisBatchMovement',\n    TT_COMPLAINTS_PICKER = 'HisComplaintsPicker',\n    TT_RADIOLOGY_PICKER = 'HisRadiologyPicker',\n    TT_IP_ADDRESS = 'HisIPAddress',\n    TT_TEXT_BANNER = 'HisTextBanner',\n    TT_DRUG_DISPENSER = 'GeneralDrugDispenser',\n    TT_CLINIC_HOLIDAY_PICKER = 'HisClinicHolidayPicker',\n    TT_ANC_PREGNANCY_INPUT_CONFIG = 'AncPregnancyInfoConfig',\n    TT_ANC_PREGNANCY_DETAILS_INPUT = 'AncPregnancyDetailsInput',\n    TT_ANC_DRUGSET_INPUT = 'AncDrugSetInput',\n    TT_DRUG_TRANSFER_IN = 'DrugTransferInput',\n    TT_PRESCRIPTION_INPUT = 'HisPrescriptionInput',\n    TT_INFINITE_SCROLL_MULTIPLE_SELECT=\"HisInfiniteScrollMultipleSelect\"\n}\n\n// Register FieldTypes here that will be registered at runtime\nexport const COMPONENT_REFS: FieldType[] = [\n    FieldType.TT_ASYNC_MULTI_SELECT,\n    FieldType.TT_LINKAGE_CODE,\n    FieldType.TT_MULTI_SELECT_GRID,\n    FieldType.TT_AGE_INPUT,\n    FieldType.TT_BARCODE,\n    FieldType.TT_NOTE,\n    FieldType.TT_SELECT,\n    FieldType.TT_CARD_SELECTOR,\n    FieldType.TT_MULTIPLE_SELECT,\n    FieldType.TT_TEXT,\n    FieldType.TT_NUMBER,\n    FieldType.TT_MONTHLY_DAYS,\n    FieldType.TT_ART_REGIMEN_SELECTION,\n    FieldType.TT_NEXT_VISIT_INTERVAL_SELECTION,\n    FieldType.TT_TABLE_VIEWER,\n    FieldType.TT_DOSAGE_INPUT,\n    FieldType.TT_YES_NO,\n    FieldType.TT_MULTIPLE_YES_NO,\n    FieldType.TT_WEIGHT_CHART,\n    FieldType.TT_VITALS_ENTRY,\n    FieldType.TT_APPOINTMENTS_ENTRY,\n    FieldType.TT_COMPLAINTS_PICKER,\n    FieldType.TT_CLINIC_HOLIDAY_PICKER,\n    FieldType.TT_SUMMARY,\n    FieldType.TT_ART_STAGING_SUMMARY,\n    FieldType.TT_ADHERENCE_INPUT,\n    FieldType.TT_LAB_ORDERS,\n    FieldType.TT_PERSON_RESULT_VIEW,\n    FieldType.TT_PROGRAM_SELECTION,\n    FieldType.TT_DATE_PICKER,\n    FieldType.TT_RELATION_SELECTION,\n    FieldType.TT_FILING_NUMBER_VIEW,\n    FieldType.TT_PERSON_MATCH_VIEW,\n    FieldType.TT_FULL_DATE,\n    FieldType.TT_BATCH_ENTRY,\n    FieldType.TT_BATCH_VERIFICATION,\n    FieldType.TT_BATCH_MOVEMENT,\n    FieldType.TT_IP_ADDRESS,\n    FieldType.TT_TEXT_BANNER,\n    FieldType.TT_DISPENSATION_INPUT,\n    FieldType.TT_DATA_TABLE,\n    FieldType.TT_GROUP_SELECTOR,\n    FieldType.TT_ANC_PREGNANCY_INPUT_CONFIG,\n    FieldType.TT_ANC_PREGNANCY_DETAILS_INPUT,\n    FieldType.TT_DRUG_TRANSFER_IN,\n    FieldType.TT_GRID_SELECTOR,\n    FieldType.TT_ANC_DRUGSET_INPUT,\n    FieldType.TT_RADIOLOGY_PICKER,\n    FieldType.TT_PRESCRIPTION_INPUT,\n    FieldType.TT_INFINITE_SCROLL_MULTIPLE_SELECT,\n    FieldType.TT_DRUG_DISPENSER\n]\n","import {LocationService} from \"@/services/location_service\"\nimport { Option } from \"@/components/Forms/FieldInterface\"\nimport { isEmpty } from \"lodash\"\n\nexport async function getFacilities(filter=''): Promise<Option[]> {\n    const facilities = await LocationService.getFacilities({name: filter})\n    return facilities.filter((f: any) => !isEmpty(f) && f.name.trim() !='')\n        .map((facility: any) => ({\n            label: facility.name,\n            value: facility.location_id,\n            other: facility\n        }))\n}\n\nexport async function getLabFacilities(filter=''): Promise<Option[]> {\n    const facilities = await LocationService.getLabs({'search_name': filter})\n    return facilities.map((facility: any) => ({\n            label: facility,\n            value: facility\n        }))\n}\n\nexport async function getFacilityWards(filter=''): Promise<Option[]> {\n    const wards = await LocationService.getFacilities({\n        name: filter,\n        tag: 'Facility adult sections'\n    })\n\n    return wards.map((ward: any) => ({\n        label: ward.name,\n        value: ward.name,\n        other: ward\n    }))\n}\n\nexport async function getSpecialistClinics(): Promise<Option[]> {\n    const clinics = await LocationService.getSpecialistClinics()\n    return clinics.map((clinic: any) => ({\n        label: clinic.name,\n        value: clinic.name,\n        other: clinic\n    }))\n}\n\nexport async function getRegions(): Promise<Option[]> {\n    const regions = await LocationService.getRegions()\n    return regions.map((region: any) => ({\n        label: region.name,\n        value: region.region_id,\n        other: region\n    }))\n}\n\nexport async function getDistricts(regionID: number): Promise<Option[]> {\n    const districts = await LocationService.getDistricts(regionID)\n    return districts.map((district: any) => ({\n        label: district.name,\n        value: district.district_id,\n        other: district\n    }))\n}\n\nexport async function getTraditionalAuthorities(districtID: number, name=''): Promise<Option[]> {\n    const TAs = await LocationService.getTraditionalAuthorities(districtID, name)\n    return TAs.map((TA: any) => ({\n        label: TA.name,\n        value: TA.traditional_authority_id,\n        other: TA\n    }))\n}\n\nexport async function getVillages(traditionalAuthorityID: number, name=''): Promise<Option[]> {\n    const villages = await LocationService.getVillages(traditionalAuthorityID, name)\n    return villages.map((village: any) => ({\n        label: village.name,\n        value: village.village_id,\n        other: village\n    }))\n}\n","var map = {\n\t\"./AncDrugSetInput.vue\": [\n\t\t\"c99f\",\n\t\t\"TouchFormElement0\"\n\t],\n\t\"./AncPregnancyDetailsInput.vue\": [\n\t\t\"b043\",\n\t\t\"TouchFormElement1\"\n\t],\n\t\"./AncPregnancyInfoConfig.vue\": [\n\t\t\"262e\",\n\t\t\"TouchFormElement2\"\n\t],\n\t\"./ArtStagingSummary.vue\": [\n\t\t\"43db\",\n\t\t\"TouchFormElement3\"\n\t],\n\t\"./AsyncMultiSelect.vue\": [\n\t\t\"5de2\",\n\t\t\"chunk-03993608\",\n\t\t\"TouchFormElement4\"\n\t],\n\t\"./BaseTextInput.vue\": [\n\t\t\"36ad\",\n\t\t\"TouchFormElement5\"\n\t],\n\t\"./DrugDispensationSelection.vue\": [\n\t\t\"05d5\",\n\t\t\"TouchFormElement6\"\n\t],\n\t\"./DrugTransferInput.vue\": [\n\t\t\"de42\",\n\t\t\"chunk-337918c0\",\n\t\t\"TouchFormElement7\"\n\t],\n\t\"./FieldMixin.vue\": [\n\t\t\"51c8\",\n\t\t\"TouchFormElement8\"\n\t],\n\t\"./FilingNumberView.vue\": [\n\t\t\"c650\",\n\t\t\"TouchFormElement9\"\n\t],\n\t\"./GeneralDrugDispenser.vue\": [\n\t\t\"7737\",\n\t\t\"TouchFormElement10\"\n\t],\n\t\"./HisAdherenceInput.vue\": [\n\t\t\"f2c3\",\n\t\t\"chunk-337918c0\",\n\t\t\"TouchFormElement11\"\n\t],\n\t\"./HisAgeInput.vue\": [\n\t\t\"c05f\",\n\t\t\"TouchFormElement12\"\n\t],\n\t\"./HisAppointments.vue\": [\n\t\t\"b2eb\",\n\t\t\"TouchFormElement13~TouchFormElement20~TouchFormElement24\",\n\t\t\"TouchFormElement13\"\n\t],\n\t\"./HisArtRegimenSelection.vue\": [\n\t\t\"47b9\",\n\t\t\"TouchFormElement14\"\n\t],\n\t\"./HisBarcodeInput.vue\": [\n\t\t\"dd65\",\n\t\t\"TouchFormElement15\"\n\t],\n\t\"./HisBatchEntry.vue\": [\n\t\t\"f2ab\",\n\t\t\"chunk-182277b5\",\n\t\t\"chunk-337918c0\",\n\t\t\"TouchFormElement16\"\n\t],\n\t\"./HisBatchMovement.vue\": [\n\t\t\"5148\",\n\t\t\"chunk-182277b5\",\n\t\t\"chunk-337918c0\",\n\t\t\"TouchFormElement17\"\n\t],\n\t\"./HisBatchVerification.vue\": [\n\t\t\"7b0f\",\n\t\t\"chunk-182277b5\",\n\t\t\"chunk-337918c0\",\n\t\t\"TouchFormElement18\"\n\t],\n\t\"./HisCardSelector.vue\": [\n\t\t\"0734\",\n\t\t\"TouchFormElement19\"\n\t],\n\t\"./HisClinicHolidayPicker.vue\": [\n\t\t\"4030\",\n\t\t\"TouchFormElement13~TouchFormElement20~TouchFormElement24\",\n\t\t\"TouchFormElement20\"\n\t],\n\t\"./HisComplaintsPicker.vue\": [\n\t\t\"82d1\",\n\t\t\"TouchFormElement21\"\n\t],\n\t\"./HisDataTable.vue\": [\n\t\t\"a6ba\",\n\t\t\"TouchFormElement22\"\n\t],\n\t\"./HisDateInput.vue\": [\n\t\t\"374c\",\n\t\t\"TouchFormElement23\"\n\t],\n\t\"./HisDatePicker.vue\": [\n\t\t\"9b30\",\n\t\t\"TouchFormElement13~TouchFormElement20~TouchFormElement24\",\n\t\t\"TouchFormElement24\"\n\t],\n\t\"./HisDosageInput.vue\": [\n\t\t\"b34c\",\n\t\t\"chunk-337918c0\",\n\t\t\"TouchFormElement25\"\n\t],\n\t\"./HisGridSelector.vue\": [\n\t\t\"112a\",\n\t\t\"TouchFormElement26\"\n\t],\n\t\"./HisGroupSelector.vue\": [\n\t\t\"81cf\",\n\t\t\"TouchFormElement27\"\n\t],\n\t\"./HisIPAddress.vue\": [\n\t\t\"2a82\",\n\t\t\"TouchFormElement28\"\n\t],\n\t\"./HisInfiniteScrollMultipleSelect.vue\": [\n\t\t\"52a3\",\n\t\t\"TouchFormElement29\"\n\t],\n\t\"./HisLabOrders.vue\": [\n\t\t\"e614\",\n\t\t\"chunk-03993608\",\n\t\t\"TouchFormElement30\"\n\t],\n\t\"./HisMonthlyDays.vue\": [\n\t\t\"69cf\",\n\t\t\"TouchFormElement31\"\n\t],\n\t\"./HisMultiSelectGrid.vue\": [\n\t\t\"0fa3\",\n\t\t\"TouchFormElement32\"\n\t],\n\t\"./HisMultipleSelect.vue\": [\n\t\t\"2fd5\",\n\t\t\"chunk-03993608\",\n\t\t\"TouchFormElement33\"\n\t],\n\t\"./HisNextVisitInterval.vue\": [\n\t\t\"3126\",\n\t\t\"TouchFormElement34\"\n\t],\n\t\"./HisNote.vue\": [\n\t\t\"c927\",\n\t\t\"TouchFormElement35\"\n\t],\n\t\"./HisNumberInput.vue\": [\n\t\t\"5e75\",\n\t\t\"TouchFormElement36\"\n\t],\n\t\"./HisPrescriptionInput.vue\": [\n\t\t\"87e5\",\n\t\t\"chunk-337918c0\",\n\t\t\"TouchFormElement37\"\n\t],\n\t\"./HisRadiologyPicker.vue\": [\n\t\t\"adc7\",\n\t\t\"TouchFormElement38\"\n\t],\n\t\"./HisSelect.vue\": [\n\t\t\"d11f\",\n\t\t\"TouchFormElement39\"\n\t],\n\t\"./HisSummary.vue\": [\n\t\t\"e0bd\",\n\t\t\"TouchFormElement40\"\n\t],\n\t\"./HisTableViewer.vue\": [\n\t\t\"8904\",\n\t\t\"TouchFormElement41\"\n\t],\n\t\"./HisTextBanner.vue\": [\n\t\t\"952c\",\n\t\t\"TouchFormElement42\"\n\t],\n\t\"./HisTextInput.vue\": [\n\t\t\"6ef9\",\n\t\t\"TouchFormElement43\"\n\t],\n\t\"./HisVitalsEntry.vue\": [\n\t\t\"e333\",\n\t\t\"TouchFormElement44\"\n\t],\n\t\"./HisWeightChart.vue\": [\n\t\t\"26a1\",\n\t\t\"TouchFormElement45\"\n\t],\n\t\"./LinkageCodeInput.vue\": [\n\t\t\"ac86\",\n\t\t\"TouchFormElement46\"\n\t],\n\t\"./MultiYesNoSelect.vue\": [\n\t\t\"5fd1\",\n\t\t\"TouchFormElement47\"\n\t],\n\t\"./PersonMatchView.vue\": [\n\t\t\"6591\",\n\t\t\"TouchFormElement48\"\n\t],\n\t\"./PersonSearchView.vue\": [\n\t\t\"28b2\",\n\t\t\"TouchFormElement49\"\n\t],\n\t\"./ProgramSelection.vue\": [\n\t\t\"e3b4\",\n\t\t\"TouchFormElement50\"\n\t],\n\t\"./RelationsSelection.vue\": [\n\t\t\"0e57\",\n\t\t\"TouchFormElement51\"\n\t],\n\t\"./SelectMixin.vue\": [\n\t\t\"82a9\",\n\t\t\"TouchFormElement52\"\n\t],\n\t\"./YesNoSelect.vue\": [\n\t\t\"71f2\",\n\t\t\"TouchFormElement53\"\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = \"f159\";\nmodule.exports = webpackAsyncContext;","import { AppEncounterService } from \"@/services/app_encounter_service\";\nimport { PatientProgramService } from \"@/services/patient_program_service\"\nimport dayjs from \"dayjs\";\nimport { AppendleadingZero } from \"@/utils/Strs\";\n\nexport class AncCurrentPregnancyService extends AppEncounterService {\n    constructor(patientID: number, providerID: number) {\n        super(patientID, 81, providerID)\n    }\n\n    async enrollPatient() {\n        const program = new PatientProgramService(this.patientID)\n        /**\n         * TODO: Check if patient is already enrolled first\n        */\n        await program.enrollProgram()\n        program.setStateDate(this.date)\n        program.setStateId(118) //Currently on treatment state... Please remove this ID hack if you can\n        await program.updateState()\n    }\n\n    calculateWeekOfFirstVisit(lnmpDate: string) {\n        const theDate: any = new Date(lnmpDate)\n        theDate.setDate(theDate.getDate() + 7);\n        const today: any = new Date(this.getDate());\n        const s = today - theDate;\n        return Math.floor(s / (24 * 60 * 60 * 7 * 1000));\n    }\n\n    calculateGestationDateFromPeriod(period: number) {\n        return dayjs(this.date).subtract(period, 'months').endOf('month').format('YYYY-MM-DD')\n    }\n\n    estimateDelieveryDate(lnmpDate: string) {\n        const theDate: any = new Date(lnmpDate)\n        theDate.setDate(theDate.getDate() + 7);\n        theDate.setMonth(theDate.getMonth() + 9);\n        const month = AppendleadingZero(theDate.getMonth()+1)\n        const day = AppendleadingZero(theDate.getDate())\n        return `${theDate.getFullYear()}-${month}-${day}`\n    }\n\n    estimateLnmpDate(gestationInWeeks: number) {\n      return dayjs()\n        .subtract(gestationInWeeks, 'weeks')\n        .subtract(7, 'days')\n        .format(\"YYYY-MM-DD\");\n    }\n\n    buildDelieveryDateObs(lmpDate: string) {\n      if (lmpDate != 'Unknown') {\n        return [\n          this.buildValueDate('Last menstrual period', lmpDate),\n          this.buildValueDate('Estimated date of delivery', \n            this.estimateDelieveryDate(lmpDate)\n          ),\n          this.buildValueNumber('Week of First Visit', \n            this.calculateWeekOfFirstVisit(lmpDate)\n          )\n        ]\n      }\n    }\n}\n"],"sourceRoot":""}