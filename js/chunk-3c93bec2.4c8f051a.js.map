{"version":3,"sources":["webpack:///./src/components/Keyboard/KbLayouts.ts","webpack:///./src/views/FindByID.vue?9510","webpack:///./src/views/FindByID.vue","webpack:///./src/views/FindByID.vue?6e1f","webpack:///./node_modules/vue-loader-v16/dist/templateLoader.js","webpack:///./node_modules/cache-loader/dist/cjs.js","webpack:///./src/components/Forms/HisStandardForm.vue"],"names":["DEFAULT_KEYPAD","VITALS_KEYPAD","DRUG_DISPENSER_KEYPAD","CD4_COUNT_PAD_LO","SYMBOLS","NUMBER_PAD_LO","MONTHLY_DAYS_LO","ALPHABETICAL_LO","QWERTY_LO","CHARACTERS_AND_NUMBERS_LO","NOTE_PAD_KEYBOARD","LOGIN_KEYBOARD","render","_ctx","_cache","$props","$setup","$data","$options","_component_his_standard_form","_resolveComponent","_openBlock","_createBlock","fields","onFinishAction","onFinish","skipSummary","activeField","fieldComponent","defineComponent","components","HisStandardForm","data","app","people","patient","assignNewARVNumber","suggestedARVNumber","created","this","setApp","getIdSelectionField","getIdSearchField","getARVDuplicatesField","getReassignARVNumberField","methods","id","helpText","type","FieldType","TT_SELECT","requireNext","validation","val","Validation","required","options","ids","programPatientIdentifiers","Object","values","Promise","all","map","visible","globalPropertySetting","GlobalPropertyService","isProp","resolvedProps","filter","index","useForSearch","identifier","label","name","value","other","programIdentifer","dynamicHelpText","f","identifier_type","TT_TEXT","validateSeries","config","casing","customKeyboard","prependValue","prefix","TT_DATA_TABLE","condition","hasDuplicates","hiddenFooterBtns","columns","table","thTxt","thDate","colspan","rows","p","Patientservice","td","getGivenName","getFamilyName","getGender","tdDate","getBirthdate","toString","getCurrentVillage","tdBtn","selectPatient","getID","style","fontSize","textTransform","reassignARVNumber","computedValue","defaultValue","initialKb","HisApp","getActiveApp","formData","findByOtherID","length","patientId","$router","push","loadingController","create","loader","present","ProgramService","getNextSuggestedARVNumber","NextARVNumber","arv_number","replace","dismiss","isEmpty","toastWarning","updateARVNumber","__exports__","_resolveDynamicComponent","formType","cancelDestinationPath","onOnFinish","onOnIndex","onIndex","TouchScreenForm","emits","props","Function","Boolean","default","String","computedData","$emit","i"],"mappings":"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","file":"js/chunk-3c93bec2.4c8f051a.js","sourcesContent":["export const DEFAULT_KEYPAD = [\n    ['1', '2', '3'],\n    ['4', '5', '6'],\n    ['7', '8', '9'],\n    ['.', '0', 'Del'],\n    ['',  'Done', '']\n]\nexport const VITALS_KEYPAD = [\n    ['1', '2', '3'],\n    ['4', '5', '6'],\n    ['7', '8', '9'],\n    ['.', '0', 'Del'],\n    ['Clear',  '%', '/']\n]\nexport const DRUG_DISPENSER_KEYPAD = [\n    ['1', '2', '3'],\n    ['4', '5', '6'],\n    ['7', '8', '9'],\n    ['Del.', '0', 'Clear'],\n    // ['Reset',  'Close', 'Dispense']\n]\nexport const CD4_COUNT_PAD_LO = [\n    ['1', '2', '3', '<'],\n    ['4', '5', '6', '>'],\n    ['7', '8', '9', '='],\n    ['',  '0', '']\n]\n\nexport const SYMBOLS = [\n    ['1', '2', '3', '+', '-', '/', '*'],\n    ['4', '5', '6', '%', '=', '<', '>', 'Qwerty'],\n    ['7', '8', '9', '.', ','],\n    ['',  '0', '']\n]\n\nexport const NUMBER_PAD_LO = [\n    ['1', '2', '3'],\n    ['4', '5', '6'],\n    ['7', '8', '9'],\n    ['',  '0', '']\n]\n\nexport const MONTHLY_DAYS_LO = [\n    ['1', '2', '3', '4', '5', '6', '7'],\n    ['8', '9', '10', '11', '12', '13', '14'],\n    ['15', '16', '17', '18', '19', '20', '21'],\n    ['22', '23', '24', '25', '26', '27', '28'],\n    ['29', '30', '31']\n]\n\nexport const ALPHABETICAL_LO = [\n    ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', '.'],\n    ['i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q'],\n    ['r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z']\n]\n\nexport const QWERTY_LO = [\n    ['q', 'w', 'e', 'r', 't', 'y', 'u', 'i', 'o', 'p'],\n    ['a', 's', 'd', 'f', 'g', 'h', 'j', 'k', 'l', \"'\"],\n    ['z', 'x', 'c', 'v', 'b', 'n', 'm',',', '.', 'A-Z']\n]\n\nexport const CHARACTERS_AND_NUMBERS_LO = [\n    ['1', '2', '3', '4', '5', '6', '7', '8', '9', '0'],\n    ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', '-', '.'],\n    ['i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q'],\n    ['r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z']\n]\nexport const NOTE_PAD_KEYBOARD = [\n    ['1', '2', '3', '4', '5', '6', '7', '8', '9', '0', 'Del'],\n    [\"q\", \"w\", \"e\", \"r\", \"t\", \"y\", \"u\", \"i\", \"o\", \"p\", 'Clear'],\n    [\"a\", \"s\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \".\", \"Caps\"],\n    [\"z\", \"x\", \"c\", \"v\", \"b\", \"n\", \"m\", \"<\", \">\", \"/\", \"Enter\"], \n]\n\nexport const LOGIN_KEYBOARD =  [\n    [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"0\"],\n    [\"q\", \"w\", \"e\", \"r\", \"t\", \"y\", \"u\", \"i\", \"o\", \"p\"],\n    [\"a\", \"s\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"Del.\"],\n    [\"z\", \"x\", \"c\", \"v\", \"b\", \"n\", \"m\", \"Caps\", \"Login\"],\n];\n","import { resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_his_standard_form = _resolveComponent(\"his-standard-form\")\n\n  return (_openBlock(), _createBlock(_component_his_standard_form, {\n    fields: _ctx.fields,\n    onFinishAction: _ctx.onFinish,\n    skipSummary: true,\n    activeField: _ctx.fieldComponent\n  }, null, 8, [\"fields\", \"onFinishAction\", \"activeField\"]))\n}","\nimport { defineComponent } from \"vue\";\nimport { FieldType } from \"@/components/Forms/BaseFormElements\"\nimport HisStandardForm from \"@/components/Forms/HisStandardForm.vue\";\nimport { Patientservice } from \"@/services/patient_service\"\nimport { toastWarning } from \"@/utils/Alerts\"\nimport { AppInterface, ProgramIdentifierInterface } from \"@/apps/interfaces/AppInterface\";\nimport { Field, Option } from \"@/components/Forms/FieldInterface\"\nimport Validation from \"@/components/Forms/validations/StandardValidations\"\nimport HisApp from \"@/apps/app_lib\"\nimport { isEmpty } from \"lodash\"\nimport table from \"@/components/DataViews/tables/ReportDataTable\"\nimport { ProgramService } from \"@/services/program_service\";\nimport { loadingController } from \"@ionic/core\";\nimport { GlobalPropertyService } from \"@/services/global_property_service\";\nimport { CHARACTERS_AND_NUMBERS_LO } from \"@/components/Keyboard/KbLayouts\";\n\nexport default defineComponent({\n  components: { HisStandardForm },\n  data: () => ({\n    app: {} as AppInterface,\n    fields: [] as Field[],\n    fieldComponent: '' as string,\n    people: [] as any[],\n    patient: {} as Patientservice,\n    assignNewARVNumber: false,\n    suggestedARVNumber: '' as string,\n  }),\n  created() {\n    this.setApp()\n    this.fields = [\n      this.getIdSelectionField(),\n      this.getIdSearchField(),\n      this.getARVDuplicatesField(),\n      this.getReassignARVNumberField()\n    ]\n  },\n  methods: {\n    getIdSelectionField(): Field {\n      return {\n        id: \"identifier_type\",\n        helpText: \"Select identifier type\",\n        type: FieldType.TT_SELECT,\n        requireNext: false,\n        validation: (val: Option) => Validation.required(val),\n        options: async () => {\n          const ids = this.app.programPatientIdentifiers\n            ? Object.values(this.app.programPatientIdentifiers) \n            : []\n\n          const resolvedProps = await Promise.all(ids.map(async (id) => {\n            if (typeof id.visible === 'function') {\n              return await id.visible()\n            }\n            if(id.globalPropertySetting){\n              return await GlobalPropertyService.isProp(id.globalPropertySetting)\n            }\n            return true\n          })) \n\n          return ids\n            .filter((id, index) => id.useForSearch && resolvedProps[index]) \n            .map(identifier => ({\n              label: identifier.name,\n              value: identifier.id,\n              other: identifier\n          }))\n        }\n      }\n    },\n    getIdSearchField(): Field {\n      let programIdentifer: ProgramIdentifierInterface;\n      return {\n        id: \"identifier\",\n        helpText: \"Identifier\",\n        dynamicHelpText: (f: any) => `Search by ${f.identifier_type.label}`,\n        type: FieldType.TT_TEXT,\n        validation: (val: Option) => Validation.validateSeries([\n          () => Validation.required(val),\n          () => (typeof programIdentifer.validation === 'function') \n            ? programIdentifer.validation(val)\n            : null\n        ]),\n        config: {\n          casing: 'uppercase',\n          customKeyboard: [CHARACTERS_AND_NUMBERS_LO, [['Delete']]],\n          prependValue: (f: any) => {\n            programIdentifer = f.identifier_type.other\n            return programIdentifer.prefix()\n          }\n        },\n        \n      }\n    },\n    getARVDuplicatesField(): Field {\n      return {\n        id: 'arv_duplicates',\n        helpText: 'Duplicates',\n        dynamicHelpText: (f: any) => `Duplicate patients with identifer ${f.identifier.value}`,\n        type: FieldType.TT_DATA_TABLE,\n        requireNext: false,\n        condition:  async (f: any) => await this.hasDuplicates(f) && f.identifier_type.label === \"ARV Number\",\n        config: {\n          hiddenFooterBtns: [\"Clear\", \"Finish\"],\n          columns: () => [\n            [\n              table.thTxt('First Name'),\n              table.thTxt('Family Name'),\n              table.thTxt('Gender'),\n              table.thDate('Birthdate'),\n              table.thTxt('Current Village'),\n              table.thTxt('Actions', {colspan: 2}),\n            ]\n          ],\n          rows: () => this.people.map(p => {\n            const patient = new Patientservice(p)\n            return [\n              table.td(patient.getGivenName()),\n              table.td(patient.getFamilyName()),\n              table.td(patient.getGender()),\n              table.tdDate(patient.getBirthdate().toString()),\n              table.td(patient.getCurrentVillage()),\n              table.tdBtn('Select patient', () => this.selectPatient(patient.getID()), {\n                style: {\n                  fontSize: '12px',\n                  textTransform: 'none'\n                }\n              }, 'warning'),\n              table.tdBtn('Re-assign identifier', () => this.reassignARVNumber(patient), {\n                style: {\n                  fontSize: '12px',\n                  textTransform: 'none'\n                }\n              }, 'danger')\n            ]\n          })\n        }\n      }\n    },\n    getReassignARVNumberField(): Field {\n      return {\n        id: \"arv_number\",\n        helpText: \"ART number\",\n        type: FieldType.TT_TEXT,\n        computedValue: ({ value }: Option) => {\n          return value\n        },\n        validation: (val: any) => Validation.required(val),\n        condition: (f: any) => this.fieldComponent === 'arv_number' && this.assignNewARVNumber,\n        defaultValue: () => this.suggestedARVNumber,\n        config: {\n          initialKb: '0-9',\n          prependValue: (f: any) => {\n            return f.identifier_type.other.prefix()\n          }\n        },\n      }\n    },\n    setApp() {\n      const app = HisApp.getActiveApp()\n      if (app) this.app = app\n    },\n    async hasDuplicates(formData: any) {\n      this.people = await Patientservice.findByOtherID(formData.identifier_type.value, formData.identifier.value)\n      return this.people.length > 1\n    },\n    selectPatient(patientId: string | number) {\n      this.$router.push(`/patients/confirm?person_id=${patientId}`);\n    },\n    async reassignARVNumber(patient: Patientservice) {\n      const loader = await loadingController.create({})\n      loader.present()\n      const NextARVNumber = await ProgramService.getNextSuggestedARVNumber()\n      this.suggestedARVNumber = NextARVNumber.arv_number.replace(/^\\D+|\\s/g, \"\")\n      this.patient = patient\n      this.assignNewARVNumber = true,\n      this.fieldComponent = \"arv_number\"\n      loader.dismiss()\n    },\n    async onFinish(formData: Record<string, any>) {\n      if (isEmpty(this.people)) {\n        toastWarning('Client not found')\n      } else if(this.assignNewARVNumber && !isEmpty(this.patient)) {\n        try {\n          await this.patient.updateARVNumber(formData.arv_number.value)\n          this.selectPatient(this.patient.getID())\n        } catch (error) {\n          toastWarning(`${error}`)\n        }\n      } else {\n        const patient = new Patientservice(this.people[0])\n        this.selectPatient(patient.getID())\n      } \n    },\n  }\n});\n","import { render } from \"./FindByID.vue?vue&type=template&id=10d6de43&ts=true\"\nimport script from \"./FindByID.vue?vue&type=script&lang=ts\"\nexport * from \"./FindByID.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/andrew-dev/Projects/HIS-Core/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { resolveDynamicComponent as _resolveDynamicComponent, openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return (_openBlock(), _createBlock(_resolveDynamicComponent(_ctx.formType), {\n    fields: _ctx.fields,\n    skipSummary: _ctx.skipSummary,\n    activeField: _ctx.activeField,\n    cancelDestinationPath: _ctx.cancelDestinationPath,\n    onOnFinish: _ctx.onFinish,\n    onFinish: _ctx.onFinishAction,\n    onOnIndex: _ctx.onIndex\n  }, null, 8, [\"fields\", \"skipSummary\", \"activeField\", \"cancelDestinationPath\", \"onOnFinish\", \"onFinish\", \"onOnIndex\"]))\n}","\nimport TouchScreenForm from \"@/components/Forms/TouchScreenForm.vue\";\nimport { defineComponent, PropType } from \"vue\";\nimport { Field } from \"./FieldInterface\";\n\nexport default defineComponent({\n    name: \"HisStandardForm\",\n    components: { TouchScreenForm },\n    emits: [\n        'onFinish',\n        'onIndex'\n    ],\n    data: () => ({\n        formType: 'touch-screen-form' as string\n    }),\n    props: {\n        onFinishAction: {\n            type: Function\n        },\n        skipSummary: {\n            type: Boolean,\n            default: false\n        },\n        activeField: {\n            type: String\n        },\n        fields: {\n            type: Object as PropType<Field[]>,\n            required: true\n        },\n        cancelDestinationPath: {\n            type: String,\n            required: false,\n        }\n    },\n    methods: {\n        onFinish(formData: any, computedData: any) {\n            this.$emit('onFinish', formData, computedData)\n        },\n        onIndex(i: number) {\n            this.$emit('onIndex', i)\n        }\n    }\n})\n","import { render } from \"./HisStandardForm.vue?vue&type=template&id=6daa0375&ts=true\"\nimport script from \"./HisStandardForm.vue?vue&type=script&lang=ts\"\nexport * from \"./HisStandardForm.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/andrew-dev/Projects/HIS-Core/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"sourceRoot":""}