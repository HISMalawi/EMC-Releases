{"version":3,"sources":["webpack:///./src/apps/CxCa/services/reports/cxca_report_service.ts","webpack:///./src/apps/CxCa/views/reports/clinic/BookedClients.vue?7f5e","webpack:///./src/apps/CxCa/views/reports/clinic/BookedClients.vue","webpack:///./src/apps/CxCa/views/reports/clinic/BookedClients.vue?6d90"],"names":["CxCaReportService","endDate","startDate","date","Service","getSessionDate","programID","getProgramID","reportName","this","getReport","HisDate","toStandardHisDisplayFormat","url","params","getJson","buildRequest","config","payload","minDuration","quarters","year","getCurrentYear","i","push","name","start","end","render","_ctx","_cache","$props","$setup","$data","$options","_component_report_template","_resolveComponent","_component_ion_page","_openBlock","_createBlock","default","_withCtx","_createVNode","title","rows","fields","columns","period","canExportPDf","canExportCsv","onReportConfiguration","init","_","defineComponent","components","ReportTemplate","IonPage","mixins","ReportMixin","data","reportService","table","thTxt","created","getDateDurationFields","methods","setStartDate","start_date","setEndDate","end_date","getClinicReport","buildRows","map","d","td","tdDate","tdBtn","$router","__exports__"],"mappings":"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","file":"js/chunk-123da1b6.7cb3b845.js","sourcesContent":["import { Service } from \"@/services/service\";\nimport HisDate from \"@/utils/Date\"\n\nexport interface QuarterInterface {\n    name: string;\n    start: string;\n    end: string;\n}\n\n\n\nexport const AGE_GROUPS = [\n    '15-19 years', '20-24 years',\n    '25-29 years', '30-34 years',\n    '35-39 years', '40-44 years',\n    '45-49 years', '50 plus years'\n]\n\n\nexport class CxCaReportService extends Service {\n    programID: number;\n    startDate: string;\n    endDate: string;\n    date: string;\n    constructor() {\n        super()\n        this.endDate = ''\n        this.startDate = ''\n        this.date = Service.getSessionDate()\n        this.programID = Service.getProgramID()\n    }\n\n    getPepfarReport(reportName: string) {\n        return this.getReport('pepfar_cxca', {'report_name': reportName})\n    }\n    getClinicReport(reportName: string) {\n        return this.getReport('screened_for_cxca', {'report_name': reportName})\n    }\n    \n    getDateIntervalPeriod() {\n        return `${HisDate.toStandardHisDisplayFormat(this.startDate)} - ${HisDate.toStandardHisDisplayFormat(this.endDate)}`\n    }\n\n    setStartDate(startDate: string) {\n        this.startDate = startDate\n    }  \n\n    setEndDate(endDate: string) {\n        this.endDate = endDate\n    }\n\n   \n\n    getReportPeriod() {\n        return this.startDate && this.endDate\n         ? `${HisDate.toStandardHisDisplayFormat(this.startDate)} - ${HisDate.toStandardHisDisplayFormat(this.endDate)}`\n         : '-'\n    }\n\n    getReport(url: string, params={}) {\n        return Service.getJson(url, this.buildRequest(params))\n    }\n\n    buildRequest(config: Record<string, any> = {}) {\n        const payload: any = {'date': this.date, 'program_id': this.programID}\n        if (this.startDate && this.endDate) {\n            payload['start_date'] = this.startDate\n            payload['end_date'] = this.endDate\n        }\n        return { ...payload, ...config }\n    }\n\n    static getReportQuarters(minDuration= 4) {\n        const quarters: Array<QuarterInterface> = []\n        let year = HisDate.getCurrentYear()\n        for(let i=0; i < minDuration; ++i) {\n            quarters.push({ name: `Q4 ${year}`, start: `${year}-10-01`, end: `${year}-12-31` })\n            quarters.push({ name: `Q3 ${year}`, start: `${year}-07-01`, end: `${year}-09-30` })\n            quarters.push({ name: `Q2 ${year}`, start: `${year}-04-01`, end: `${year}-06-30` })\n            quarters.push({ name: `Q1 ${year}`, start: `${year}-01-01`, end: `${year}-03-31` })\n            --year\n        }\n        return quarters\n    }\n\n}","import { resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_report_template = _resolveComponent(\"report-template\")\n  const _component_ion_page = _resolveComponent(\"ion-page\")\n\n  return (_openBlock(), _createBlock(_component_ion_page, null, {\n    default: _withCtx(() => [\n      _createVNode(_component_report_template, {\n        title: _ctx.title,\n        rows: _ctx.rows,\n        fields: _ctx.fields,\n        columns: _ctx.columns,\n        period: _ctx.period,\n        canExportPDf: false,\n        canExportCsv: false,\n        onReportConfiguration: _ctx.init\n      }, null, 8, [\"title\", \"rows\", \"fields\", \"columns\", \"period\", \"onReportConfiguration\"])\n    ]),\n    _: 1\n  }))\n}","\nimport { defineComponent } from 'vue'\nimport ReportTemplate from \"@/views/reports/BaseTableReport.vue\"\nimport table, { ColumnInterface, RowInterface } from \"@/components/DataViews/tables/ReportDataTable\"\nimport ReportMixin from '@/apps/ART/views/reports/ReportMixin.vue'\nimport { IonPage } from \"@ionic/vue\";\nimport { CxCaReportService } from '@/apps/CxCa/services/reports/cxca_report_service'\nexport default defineComponent({\n\n  components: { ReportTemplate, IonPage },\n  mixins: [ReportMixin],\n  data: () => ({\n    title: 'Booked Clients',\n    rows: [] as RowInterface[],\n    reportService: {} as any,\n    columns: [\n      [\n        table.thTxt(''),\n        table.thTxt('First Name'), \n        table.thTxt('Last Name'),\n        table.thTxt('Birthdate'),\n        table.thTxt('Booked'),\n        table.thTxt('Seen'),\n        table.thTxt('Action')\n      ]\n    ] as ColumnInterface[][],\n  }),\n  created() {\n    this.fields = this.getDateDurationFields()\n  },\n  methods: {\n    async init(_: any, config: any) {\n      this.reportService = new CxCaReportService()\n      this.reportService.setStartDate(config.start_date)\n      this.reportService.setEndDate(config.end_date)\n      const data = await this.reportService.getClinicReport('BOOKED CLIENTS FROM ART RAW DATA');\n      this.rows = this.buildRows(data)\n\n    },\n    buildRows(data: any): RowInterface[] {\n     return data.map((d: any) => ([\n        table.td(d['identifier']),\n        table.td(d['given_name']),\n        table.td(d['family_name']),\n        table.tdDate(d['dob']),\n        table.td(d['gender']),\n        table.td(d['seen']),\n        table.tdBtn('View', () => this.$router.push(`/patient/dashboard/${d['person_id']}`))\n      ]))\n    },\n  },\n})\n","import { render } from \"./BookedClients.vue?vue&type=template&id=63403bc0&ts=true\"\nimport script from \"./BookedClients.vue?vue&type=script&lang=ts\"\nexport * from \"./BookedClients.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/andrew-dev/Projects/HIS-Core/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"sourceRoot":""}