{"version":3,"sources":["webpack:///./src/apps/CxCa/views/encounters/CxCaOutcome.vue?d79d","webpack:///./src/apps/CxCa/services/CxCaOutcomeService.ts","webpack:///./src/apps/CxCa/views/encounters/CxCaOutcome.vue","webpack:///./src/apps/CxCa/views/encounters/CxCaOutcome.vue?53ab","webpack:///./src/guidelines/encounter_guidelines.ts","webpack:///./node_modules/cache-loader/dist/cjs.js","webpack:///./src/views/EncounterMixin.vue","webpack:///./node_modules/vue-loader-v16/dist/templateLoader.js","webpack:///./src/components/Forms/HisStandardForm.vue","webpack:///./src/utils/GuidelineEngine.ts"],"names":["render","_ctx","_cache","$props","$setup","$data","$options","_component_his_standard_form","_resolveComponent","_openBlock","_createBlock","fields","onFinishAction","onFinish","skipSummary","cancelDestinationPath","cancelDestination","OutcomeService","patientID","providerID","AppEncounterService","defineComponent","mixins","EncounterMixinVue","components","HisStandardForm","data","outcome","watch","patient","handler","getFields","deep","methods","formData","createEncounter","encounter","toastWarning","programID","ProgramService","getProgramID","getProgramWorkflows","workflows","select_referral_outcome","value","flows","forEach","w","states","f","conceptID","program_workflow_state_id","conceptName","concept","concept_names","name","state","getLocationName","date","getSessionDate","createState","saveState","referralObs","cancerObs","select_cancer_treatment","buildValueCoded","rOb","obList","match","cOb","push","saveObservationList","toastSuccess","nextTask","id","helpText","type","FieldType","TT_SELECT","validation","val","Validation","required","options","label","__exports__","FlowState","dformat","d","HisDate","toStandardHisDisplayFormat","ENCOUNTER_GUIDELINES","priority","actions","alert","outcomeStartDate","infoActionSheet","slot","color","action","GO_TO_PATIENT_DASHBOARD","CHANGE_PATIENT_OUTCOME","CONTINUE","conditions","startDate","sessionDate","birthDate","CHANGE_SESSION_DATE","selection","providers","encounterName","apiDate","optionsActionSheet","role","modal","flowState","SET_PROVIDER","isBdeMode","isBDE","facts","ready","route","params","patient_id","parseInt","Store","get","then","patientData","setEncounterFacts","checkEncounterGuidelines","immediate","computed","patientDashboardUrl","runflowState","username","split","provider","find","person_id","$router","EXIT","gotoPatientDashboard","findings","matchToGuidelines","index","finding","status","program","e","console","error","toastDanger","getCachedApiDate","getBirthdate","$route","toString","toUpperCase","sort","a","b","usernameA","usernameB","map","p","isEmpty","person","names","latestName","given_name","family_name","toOption","other","mapStrToOptions","items","i","path","yesNoOptions","toYesNoOption","values","mapOptions","option","yesNoUnknownOptions","resolveObs","obs","tag","Object","filter","reduce","accum","cur","Array","isArray","concat","Promise","all","inArray","arr","expression","length","validateSeries","condition","_resolveDynamicComponent","formType","activeField","onOnFinish","onOnIndex","onIndex","TouchScreenForm","emits","props","Function","Boolean","default","String","computedData","this","$emit","isCondition","ignored","undefined","prop","includes","every","sortByRelevance","guidelines","target","targetEvent","matches","guidelineIndex","targetValidations","some","title","description","text","info"],"mappings":"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","file":"js/chunk-2b71730d.fbb0f438.js","sourcesContent":["import { resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_his_standard_form = _resolveComponent(\"his-standard-form\")\n\n  return (_openBlock(), _createBlock(_component_his_standard_form, {\n    fields: _ctx.fields,\n    onFinishAction: _ctx.onFinish,\n    skipSummary: true,\n    cancelDestinationPath: _ctx.cancelDestination\n  }, null, 8, [\"fields\", \"onFinishAction\", \"cancelDestinationPath\"]))\n}","import { AppEncounterService } from \"@/services/app_encounter_service\"\n\nexport class OutcomeService extends AppEncounterService {\n    constructor(patientID: number, providerID: number) {\n        super(patientID, 184, providerID) //TODO: Use encounter type reference name'\n    }\n}","\nimport { defineComponent } from \"vue\";\nimport { FieldType } from \"@/components/Forms/BaseFormElements\";\nimport HisStandardForm from \"@/components/Forms/HisStandardForm.vue\";\nimport Validation from \"@/components/Forms/validations/StandardValidations\";\nimport EncounterMixinVue from \"../../../../views/EncounterMixin.vue\";\nimport { toastSuccess, toastWarning } from \"@/utils/Alerts\";\nimport { ProgramService } from \"@/services/program_service\";\nimport {ProgramWorkflow} from \"@/interfaces/program_workflow\"\nimport {OutcomeService} from \"@/apps/CxCa/services/CxCaOutcomeService\"\nexport default defineComponent({\n  mixins: [EncounterMixinVue],\n  components: { HisStandardForm },\n  data: () => ({\n    outcome: {} as any,\n  }),\n  watch: {\n    patient: {\n      async handler() {\n        this.outcome = new OutcomeService(\n          this.patientID,\n          this.providerID\n        );\n        this.fields = this.getFields();\n      },\n      deep: true,\n    },\n  },\n  methods: {\n    async onFinish(formData: any) {\n      const encounter = await this.outcome.createEncounter();\n\n      if (!encounter) return toastWarning(\"Unable to create encounter\");\n      const programID = ProgramService.getProgramID();\n      const workflows: ProgramWorkflow[] = await ProgramService.getProgramWorkflows(ProgramService.getProgramID());\n      const outcome = formData.select_referral_outcome.value;\n      const flows = {} as any;\n      workflows.forEach(w => {\n        w.states.forEach(f => {\n          const conceptID = f.program_workflow_state_id;\n          const conceptName = f.concept.concept_names[0].name;\n          flows[conceptName] = conceptID;\n        })\n      })\n      const state = {\n        'location_id': ProgramService.getLocationName(),\n        state: flows[outcome],\n        date: ProgramService.getSessionDate()\n      }\n      const saveState = await ProgramService.createState(this.patientID, programID, state);\n      if(!saveState) return toastWarning('Unable to update state')\n      const referralObs = formData.select_referral_outcome.value;\n      const cancerObs = formData.select_cancer_treatment.value;\n      const rOb = await this.outcome.buildValueCoded('Outcome', referralObs);\n      const obList = [rOb];\n      if(cancerObs.match(/cancer/)) {\n        const cOb = await this.outcome.buildValueCoded('Cancer treatment', cancerObs);\n        obList.push(cOb);\n      }\n\n      const obs = await this.outcome.saveObservationList(obList);\n      toastSuccess(\"Observations and encounter created!\");\n      this.nextTask();\n    },\n\n    getFields(): any {\n      return [\n        {\n          id: \"select_referral_outcome\",\n          helpText: `Referral outcome`,\n          type: FieldType.TT_SELECT,\n          validation: (val: any) => Validation.required(val),\n          options: () => {\n            return [\n              {\n                label: \"Cancer of cervix\",\n                value: \"Cancer of cervix\",\n              },\n              {\n                label: \"Continue follow-up\",\n                value: \"Continue follow-up\",\n              },\n              {\n                label: \"Discharged uninfected\",\n                value: \"Discharged uninfected\",\n              },\n              {\n                label: \"Treatment complete\",\n                value: \"Treatment complete\",\n              },\n            ];\n          },\n        },\n        {\n          id: \"select_cancer_treatment\",\n          helpText: \"Select cancer treatment\",\n          type: FieldType.TT_SELECT,\n          validation: (val: any) => Validation.required(val),\n          options: () => {\n            return [\n              {\n                label: \"Surgery\",\n                value: \"Surgery\",\n              },\n              {\n                label: \"Palliative Care\",\n                value: \"Palliative Care\",\n              },\n              {\n                label: \"Discharged\",\n                value: \"Discharged\",\n              },\n              {\n                label: \"Other\",\n                value: \"Other\",\n              },\n            ];\n          },\n        },\n      ];\n    },\n  },\n});\n","import { render } from \"./CxCaOutcome.vue?vue&type=template&id=3317e905&ts=true\"\nimport script from \"./CxCaOutcome.vue?vue&type=script&lang=ts\"\nexport * from \"./CxCaOutcome.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/andrew-dev/Projects/HIS-Core/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { infoActionSheet, optionsActionSheet } from \"@/utils/ActionSheets\";\nimport { GuideLineInterface } from \"@/utils/GuidelineEngine\";\nimport HisDate from '@/utils/Date'\n\nexport enum FlowState {\n    SET_PROVIDER = 'SET_PROVIDER',\n    CHANGE_SESSION_DATE = 'change_session_date',\n    GO_TO_PATIENT_DASHBOARD = 'go_to_patient_dashboard',\n    CHANGE_PATIENT_OUTCOME = 'change_outcome',\n    CONTINUE = 'continue',\n    EXIT = 'exit'\n}\nconst dformat = (d: string) => HisDate.toStandardHisDisplayFormat(d)\n\nexport const ENCOUNTER_GUIDELINES: Record<string, GuideLineInterface> = {\n    \"Warn if attempting to create new encounters for a deceased patient\": {\n        priority: 1,\n        actions: {\n            alert: async ({ outcomeStartDate }: any) => {\n                const action = await infoActionSheet(\n                    'Data Integrity Issue Found',\n                    `Patient died on ${dformat(outcomeStartDate)}`,\n                    'Proceeding with this outcome might affect accuracy of some reports',\n                    [\n                        { name: 'Cancel', slot: 'end', color: 'primary'},\n                        { name: 'Change outcome', slot: 'end', color: 'primary'},\n                        { name: 'Continue Anyway', slot: 'end', color: 'danger'}\n                    ]\n                )\n                return action === 'Cancel'\n                    ? FlowState.GO_TO_PATIENT_DASHBOARD\n                    : action === 'Change outcome'\n                    ? FlowState.CHANGE_PATIENT_OUTCOME\n                    : FlowState.CONTINUE\n            }\n        },\n        conditions: {\n            outcome(outcome: string) {\n                return outcome === 'Patient died'\n            },\n            outcomeStartDate(startDate: string, { sessionDate }: any) {\n                return sessionDate >= startDate\n            }\n        }\n    },\n    \"A patient's date of birth must not be less than Session Date\": {\n        priority: 2,\n        actions: {\n            alert: async ({ birthDate, sessionDate}: any) => {\n                const action = await infoActionSheet(\n                    'Data integrity issue found', '',\n                    `Session date ${dformat(sessionDate)} is less than birth date of ${dformat(birthDate)}`,\n                    [\n                        { name: 'Cancel', slot: 'end', color: 'danger'},\n                        { name: 'Change session date', slot: 'end', color: 'success'}\n                    ]\n                )\n                return action === 'Change session date'\n                    ? FlowState.CHANGE_SESSION_DATE\n                    : FlowState.GO_TO_PATIENT_DASHBOARD\n            }\n        },\n        conditions: {\n            birthDate(birthDate: string, { sessionDate }: any) {\n                return sessionDate < birthDate\n            }\n        }\n    },\n    \"Select Encounter provider when in back data entry\": {\n        priority: 3,\n        actions: {\n            selection: async ({ providers, encounterName, sessionDate, apiDate }: any) => {\n                const modal = await optionsActionSheet(\n                    `Please select a provider for ${encounterName}`,\n                    `BDE: ${dformat(sessionDate)} | Current: ${dformat(apiDate)}`,\n                    providers,\n                    [\n                        { name: 'Cancel', color: 'danger', slot: 'start', role: 'default'},\n                        { name: 'Confirm', slot: 'end', role: 'action' }\n                    ]\n                )\n                return modal.action === 'Cancel' \n                    ? { value: -1, flowState: FlowState.GO_TO_PATIENT_DASHBOARD }\n                    : { value: modal.selection, flowState: FlowState.SET_PROVIDER }\n            }\n        },\n        conditions: {\n            isBdeMode(isBDE: boolean) {\n                return isBDE\n            }\n        }\n    }\n}","\nimport TouchScreenForm from \"@/components/Forms/TouchScreenForm.vue\";\nimport { defineComponent, PropType } from \"vue\";\nimport { Field } from \"./FieldInterface\";\n\nexport default defineComponent({\n    name: \"HisStandardForm\",\n    components: { TouchScreenForm },\n    emits: [\n        'onFinish',\n        'onIndex'\n    ],\n    data: () => ({\n        formType: 'touch-screen-form' as string\n    }),\n    props: {\n        onFinishAction: {\n            type: Function\n        },\n        skipSummary: {\n            type: Boolean,\n            default: false\n        },\n        activeField: {\n            type: String\n        },\n        fields: {\n            type: Object as PropType<Field[]>,\n            required: true\n        },\n        cancelDestinationPath: {\n            type: String,\n            required: false,\n        }\n    },\n    methods: {\n        onFinish(formData: any, computedData: any) {\n            this.$emit('onFinish', formData, computedData)\n        },\n        onIndex(i: number) {\n            this.$emit('onIndex', i)\n        }\n    }\n})\n","import script from \"./EncounterMixin.vue?vue&type=script&lang=ts\"\nexport * from \"./EncounterMixin.vue?vue&type=script&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { resolveDynamicComponent as _resolveDynamicComponent, openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return (_openBlock(), _createBlock(_resolveDynamicComponent(_ctx.formType), {\n    fields: _ctx.fields,\n    skipSummary: _ctx.skipSummary,\n    activeField: _ctx.activeField,\n    cancelDestinationPath: _ctx.cancelDestinationPath,\n    onOnFinish: _ctx.onFinish,\n    onFinish: _ctx.onFinishAction,\n    onOnIndex: _ctx.onIndex\n  }, null, 8, [\"fields\", \"skipSummary\", \"activeField\", \"cancelDestinationPath\", \"onOnFinish\", \"onFinish\", \"onOnIndex\"]))\n}","import { render } from \"./HisStandardForm.vue?vue&type=template&id=6daa0375&ts=true\"\nimport script from \"./HisStandardForm.vue?vue&type=script&lang=ts\"\nexport * from \"./HisStandardForm.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/andrew-dev/Projects/HIS-Core/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","/**\n * Compares patient facts against a predefined guideline Object.\n*/\nexport interface DescriptionInterface {\n    color?: 'primary' | 'secondary' | 'danger' | 'warning';\n    info: Function;\n    text?: string;\n    show: 'onChecked' | 'always';\n}\n\nexport interface GuideLineInterface {\n    title?: string;\n    concept?: string;\n    priority: number;\n    conditions: Record<string, Function>;\n    actions?: Record<string, any>; //TODO: should <key, Function>\n    data?: Record<string, any>;\n    description?: DescriptionInterface;\n    target?: string;\n    targetEvent?: string;\n}\n\n/**\n * Match the facts with guidelines\n * @param facts \n * @param conditions \n * @returns \n */\nfunction isCondition(facts: Record<string, any>, conditions: Record<string, Function>): boolean {\n    const state = [] \n    const ignored = [-1, '', null, undefined]\n\n    for(const prop in conditions) {\n        if (!(prop in facts)) \n            continue\n        \n        const value = facts[prop]\n        if (ignored.includes(value)) {\n            state.push(false)\n            continue\n        }\n\n        state.push(conditions[prop](value, facts))\n    }\n    return state.every(Boolean)\n}\n\n/**\n * Sort guidelines in the order of importance/relevance\n * @param findings \n * @returns \n */\nfunction sortByRelevance(findings: Array<GuideLineInterface>) {\n    return findings.sort((a, b) => a.priority < b.priority ? -1 : 1)\n}\n\n/**\n * Check the guideline for matching facts and return matching object \n * @param facts: key value pair for used for searching in guidelines\n * @param guidelines: A dictionary containing fixed rules/validations that conforms to GuideLineInterface\n * @param target: Used for matching a target defined in a guidlines before executing conditions\n * @param targetEvent: used for matching a target event in a guideline before executing conditions\n * @returns\n */\nexport function matchToGuidelines(\n    facts: Record<string, any>, \n    guidelines: Record<string, GuideLineInterface>,\n    target='', \n    targetEvent=''): Array<GuideLineInterface> {\n\n    const matches = []\n    for(const guidelineIndex in guidelines) {\n        const data: GuideLineInterface = guidelines[guidelineIndex]\n \n        const targetValidations = [\n            (data.target && target && data.target != target),\n            (data.targetEvent && targetEvent \n                && data.targetEvent != targetEvent)\n        ]\n\n        if (targetValidations.some(Boolean)) {\n            continue\n        }\n\n        if (isCondition(facts, data.conditions)) {\n            data.title = guidelineIndex\n            if (data.description) {\n                data.description.text = data.description.info(facts)\n            }\n            matches.push(data)\n        }\n    }\n    return sortByRelevance(matches)\n}\n"],"sourceRoot":""}