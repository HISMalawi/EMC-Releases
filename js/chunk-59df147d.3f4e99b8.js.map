{"version":3,"sources":["webpack:///./src/components/Keyboard/KbLayouts.ts","webpack:///./node_modules/core-js/modules/es.object.entries.js","webpack:///./src/components/Keyboard/HisKbConfigurations.ts","webpack:///./src/apps/OPD/services/idsr_service.ts","webpack:///./node_modules/vue-loader-v16/dist/templateLoader.js","webpack:///./node_modules/cache-loader/dist/cjs.js","webpack:///./src/components/Forms/HisStandardForm.vue","webpack:///./src/utils/HisFormHelpers/MultiFieldDateHelper.ts","webpack:///./node_modules/eslint-loader/index.js","webpack:///./src/apps/OPD/views/reports/ReportMixin.vue","webpack:///./src/apps/OPD/views/reports/ReportMixin.vue?18df","webpack:///./src/apps/OPD/views/reports/moh/MOHReportHeader.vue?3f60","webpack:///./src/apps/OPD/views/reports/moh/MOHReportHeader.vue","webpack:///./src/apps/OPD/views/reports/moh/MOHReportHeader.vue?fae4","webpack:///./src/apps/OPD/services/opd_report_service.ts"],"names":["DEFAULT_KEYPAD","VITALS_KEYPAD","DRUG_DISPENSER_KEYPAD","CD4_COUNT_PAD_LO","SYMBOLS","NUMBER_PAD_LO","MONTHLY_DAYS_LO","ALPHABETICAL_LO","QWERTY_LO","CHARACTERS_AND_NUMBERS_LO","NOTE_PAD_KEYBOARD","LOGIN_KEYBOARD","$","$entries","entries","target","stat","O","SYMBOLS_CONFIG","NUMBERS_ONLY","NUMBERS_WITH_UNKNOWN","NUMBERS_WITH_ESTIMATE","NUMBERS_WITHOUT_NA_UNKNOWN","NUMBERS","MONTHLY_DAYS","A_TO_Z","QWERTY","KEY_BTN_NAV","btn","keyboard","IDSRReportService","regenerate","this","getReport","request","params","all","count","Object","key","value","temp","condition","item","id","name","lessThanFiveYears","lessThanFiveYearsPatientIds","greaterThanEqualFiveYears","greaterThanEqualFiveYearsPatientIds","total","totalPatientIds","key1","value1","conditionDetails","length","push","IDSRConditionsObj","CSVString","epiWeeks","Service","getJson","epiWeeksObj","reverse","forEach","dates","split","startDate","endDate","txt","start","end","months","_payload","monthandyear","startandendmonths","trim","OpdReportService","render","_ctx","_cache","$props","$setup","$data","$options","_openBlock","_createBlock","_resolveDynamicComponent","formType","fields","skipSummary","activeField","cancelDestinationPath","onOnFinish","onFinish","onFinishAction","onOnIndex","onIndex","defineComponent","components","TouchScreenForm","emits","data","props","type","Function","Boolean","default","String","required","methods","formData","computedData","$emit","i","__exports__","EstimationFieldType","label","getYearField","showUnknown","primaryFunctions","helpText","appearInSummary","FieldType","TT_TEXT","config","customKeyboard","getMonthField","TT_SELECT","options","MonthOptions","getDayField","TT_MONTHLY_DAYS","getMonthDurationEstimateField","getAgeEstimateField","TT_NUMBER","keypad","appendLeadingZero","s","parseInt","getDefaultDate","form","field","datePart","defaultValue","date","year","month","day","d","HisDate","toStandardHisDisplayFormat","validateMinMax","computed","minDate","min","Date","maxDate","max","generateDateFields","fullDate","yearValue","monthValue","dayValue","dateIsEstimated","yearID","monthID","dayID","ageEstimateID","durationEstimateID","estimation","allowUnknown","ageEstimate","durationEstimate","estimateMonthOrDay","allowUnknownMonthDay","datePartCondition","f","includes","buildHelpTextDate","part","parts","reduce","partValues","dpart","wl","undefined","join","init","updateHelpTextOnValue","proxyID","unload","v","toString","validation","c","StandardValidations","match","isNaN","minYear","getYear","summaryMapValue","summaryLabel","_","ref","computedValue","val","computeValue","beforeNext","keyboardActions","valueEstimateCondition","estimateType","conditions","estimationFieldType","every","ageEstimateRegex","dayjs","getSessionDate","subtract","AGE_ESTIMATE_FIELD","format","STANDARD_DATE_FORMAT","MONTH_ESTIMATE_FIELD","report","reportReady","period","customFileName","drillDownCache","toDate","confirmPatient","patient","$router","exportToCustomPDF","title","printW","open","content","document","getElementById","write","innerHTML","setTimeout","print","close","onDrillDown","conditionName","patientIds","isEmpty","columns","table","thTxt","rowParser","ids","Promise","map","Patientservice","findByID","personDetails","td","getGivenName","getFamilyName","getGender","getAge","getPhoneNumber","getCurrentDistrict","getCurrentVillage","getClosestLandmark","tdBtn","modalController","dismiss","path","drilldownData","drilldownAsyncRows","asyncRows","create","component","DrilldownTable","cssClass","componentProps","showFilters","rowsPerPage","paginated","showReportStamp","footerColor","modal","present","rows","getDefaultDrillDownTable","tableRows","defaultRow","index","row","getArvNumber","tdDate","getBirthdate","runTableDrill","drill","values","tdLink","getEpiweeksFields","Validation","getReportEpiWeeks","items","q","moment","other","getMonthlyFields","getReportMonths","getDateDurationFields","useQuarter","setCustomQuarterPeriod","maxQuarter","quarters","getReportQuarters","quarter","end_date","start_date","_hoisted_1","style","_component_report_table","_resolveComponent","_createVNode","tableCssTheme","ReportTable","clinicName","reportparams","totalOPDVisits","Number","reportName","periodLabel","periodDates","rangeLabel","range","colspan","sortable","exportable","mounted","initTable","tableHeaders","textAlign","LA_TYPES","one","two","three","four","NCD_TYPES","MENTAL_HEALTH_DIAGNOSIS","epiweek","programID","getProgramID","url","printService","PrintoutService","keys","printLbl","Url","parameterizeObjToString","buildRequest","payload","minDuration","getCurrentYear"],"mappings":"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","file":"js/chunk-59df147d.3f4e99b8.js","sourcesContent":["export const DEFAULT_KEYPAD = [\n    ['1', '2', '3'],\n    ['4', '5', '6'],\n    ['7', '8', '9'],\n    ['.', '0', 'Del'],\n    ['',  'Done', '']\n]\nexport const VITALS_KEYPAD = [\n    ['1', '2', '3'],\n    ['4', '5', '6'],\n    ['7', '8', '9'],\n    ['.', '0', 'Del'],\n    ['Clear',  '%', '/']\n]\nexport const DRUG_DISPENSER_KEYPAD = [\n    ['1', '2', '3'],\n    ['4', '5', '6'],\n    ['7', '8', '9'],\n    ['Del.', '0', 'Clear'],\n    // ['Reset',  'Close', 'Dispense']\n]\nexport const CD4_COUNT_PAD_LO = [\n    ['1', '2', '3', '<'],\n    ['4', '5', '6', '>'],\n    ['7', '8', '9', '='],\n    ['',  '0', '']\n]\n\nexport const SYMBOLS = [\n    ['1', '2', '3', '+', '-', '/', '*'],\n    ['4', '5', '6', '%', '=', '<', '>', 'Qwerty'],\n    ['7', '8', '9', '.', ','],\n    ['',  '0', '']\n]\n\nexport const NUMBER_PAD_LO = [\n    ['1', '2', '3'],\n    ['4', '5', '6'],\n    ['7', '8', '9'],\n    ['',  '0', '']\n]\n\nexport const MONTHLY_DAYS_LO = [\n    ['1', '2', '3', '4', '5', '6', '7'],\n    ['8', '9', '10', '11', '12', '13', '14'],\n    ['15', '16', '17', '18', '19', '20', '21'],\n    ['22', '23', '24', '25', '26', '27', '28'],\n    ['29', '30', '31']\n]\n\nexport const ALPHABETICAL_LO = [\n    ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', '.'],\n    ['i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q'],\n    ['r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z']\n]\n\nexport const QWERTY_LO = [\n    ['q', 'w', 'e', 'r', 't', 'y', 'u', 'i', 'o', 'p'],\n    ['a', 's', 'd', 'f', 'g', 'h', 'j', 'k', 'l', \"'\"],\n    ['z', 'x', 'c', 'v', 'b', 'n', 'm',',', '.', 'A-Z']\n]\n\nexport const CHARACTERS_AND_NUMBERS_LO = [\n    ['1', '2', '3', '4', '5', '6', '7', '8', '9', '0'],\n    ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', '-', '.'],\n    ['i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q'],\n    ['r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z']\n]\nexport const NOTE_PAD_KEYBOARD = [\n    ['1', '2', '3', '4', '5', '6', '7', '8', '9', '0', 'Del'],\n    [\"q\", \"w\", \"e\", \"r\", \"t\", \"y\", \"u\", \"i\", \"o\", \"p\", 'Clear'],\n    [\"a\", \"s\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \".\", \"Caps\"],\n    [\"z\", \"x\", \"c\", \"v\", \"b\", \"n\", \"m\", \"<\", \">\", \"/\", \"Enter\"], \n]\n\nexport const LOGIN_KEYBOARD =  [\n    [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"0\"],\n    [\"q\", \"w\", \"e\", \"r\", \"t\", \"y\", \"u\", \"i\", \"o\", \"p\"],\n    [\"a\", \"s\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"Del.\"],\n    [\"z\", \"x\", \"c\", \"v\", \"b\", \"n\", \"m\", \"Caps\", \"Login\"],\n];\n","var $ = require('../internals/export');\nvar $entries = require('../internals/object-to-array').entries;\n\n// `Object.entries` method\n// https://tc39.github.io/ecma262/#sec-object.entries\n$({ target: 'Object', stat: true }, {\n  entries: function entries(O) {\n    return $entries(O);\n  }\n});\n","/**\n * Default keyboard configurations.\n * \n * Configuration consists of one or two keyboard layouts\n * to be displayed at once.\n */\n\nimport {\n    NUMBER_PAD_LO,\n    MONTHLY_DAYS_LO,\n    ALPHABETICAL_LO,\n    QWERTY_LO,\n    SYMBOLS,\n} from \"@/components/Keyboard/KbLayouts\";\n\nexport const SYMBOLS_CONFIG = [\n    SYMBOLS,\n    [\n        ['', 'Delete']\n    ]\n]\n\nexport const NUMBERS_ONLY = [\n    NUMBER_PAD_LO,\n    [\n        ['Delete']\n    ]\n]\n\nexport const NUMBERS_WITH_UNKNOWN = [\n    NUMBER_PAD_LO,\n    [\n        ['Delete', 'Unknown']\n    ]\n]\n\nexport const NUMBERS_WITH_ESTIMATE = [\n    NUMBER_PAD_LO,\n    [\n        ['N/A'],\n        ['Delete', 'Unknown']\n    ]\n]\n\nexport const NUMBERS_WITHOUT_NA_UNKNOWN = [\n    NUMBER_PAD_LO,\n    [\n        ['Delete']\n    ]\n]\n\nexport const NUMBERS = [\n    NUMBER_PAD_LO,\n    [\n        ['Unknown', 'Delete'],\n        ['Qwerty', 'A-Z'],\n    ]\n]\n\nexport const MONTHLY_DAYS = [\n    MONTHLY_DAYS_LO,\n    [\n        ['Unknown']\n    ]\n]\n\nexport const A_TO_Z = [\n    ALPHABETICAL_LO,\n    [\n        ['0-9', 'Delete'],\n        ['Qwerty', 'Unknown'],\n        ['', 'Space']\n    ]\n]\n\nexport const QWERTY = [\n    QWERTY_LO,\n    [\n        ['', 'Delete'],\n        ['?123', '0-9'],\n        ['Space', 'Unknown']\n    ]\n]\n\n/**\n * Navigation map for switching between different keyboard layouts\n */\nexport const KEY_BTN_NAV = [\n    {\n        btn: '0-9',\n        keyboard: NUMBERS\n    },\n    {\n        btn: '?123',\n        keyboard: SYMBOLS_CONFIG\n    },\n    {   \n        btn: 'A-Z',\n        keyboard: A_TO_Z \n    },\n    {\n        btn: 'Qwerty',\n        keyboard: QWERTY\n    }\n]\n","import { OpdReportService } from \"./opd_report_service\";\nimport moment from \"dayjs\"\nimport { Service } from \"@/services/service\";\n\nexport interface CohortValidationInterface {\n    param: number | string;\n    error: (indicator: number, param: number) => string;\n    check: (indicator: number, param: number) => boolean;\n}\n\nexport interface CommonInterface {\n    name: string;\n    start: string;\n    end: string;\n}\n\nexport class IDSRReportService extends OpdReportService {\n    regenerate: boolean;\n    constructor() {\n        super()\n        this.regenerate = false\n    }\n\n    setRegenerate(regenerate: boolean) {\n        this.regenerate = regenerate\n    }\n\n    requestIDSRWeekly() {\n        return this.getReport('generate_weekly_idsr_report', {\n            request: 'true',\n        })\n    }\n\n    requestIDSRMonthly() {\n        return this.getReport('generate_monthly_idsr_report', {\n            request: 'true',\n        })\n    }\n\n    renderResults(params: any) {\n        const all = []\n        let count = 1\n        for (const [key, value] of Object.entries(params)) {\n            const temp: any = []\n            const condition: any = value\n            const item = {\n                id: 0,\n                name: '',\n                lessThanFiveYears: '',\n                lessThanFiveYearsPatientIds: '',\n                greaterThanEqualFiveYears: '',\n                greaterThanEqualFiveYearsPatientIds: '',\n                total: 0,\n                totalPatientIds: ''\n            }\n            item.name = key\n            let total = 0\n            item.id = count\n            count += 1 \n            for (const [key1, value1] of Object.entries(condition)) {\n                const conditionDetails: any = value1\n                if (conditionDetails != null) {\n                    total +=conditionDetails.length;\n                    item.total = total\n                    if(conditionDetails.length) {\n                        temp.push(...conditionDetails)\n                        item.totalPatientIds = temp\n                    }\n                    if (key1 == '<5yrs') {\n                    item.lessThanFiveYears = conditionDetails.length\n                    item.lessThanFiveYearsPatientIds = conditionDetails\n                    }\n                if (key1 == '>=5yrs') {\n                item.greaterThanEqualFiveYears = conditionDetails.length\n                item.greaterThanEqualFiveYearsPatientIds = conditionDetails\n                }\n            }\n          }\n          all.push(item)\n        }\n        return all\n    }\n\n    getCSVString(IDSRConditionsObj: any) {\n        let CSVString = `Diseases/Events/Conditions, <5 yrs, >=5 yrs, Total,\\n`\n        for(const condition of IDSRConditionsObj) {\n            CSVString += `${condition.name},${condition.lessThanFiveYears},${condition.greaterThanEqualFiveYears},${condition.total},\\n`  \n        }\n        return {CSVString}\n    }\n\n    static async getReportEpiWeeks() {\n        const epiWeeks: Array<CommonInterface> = []\n        const epiWeeksObj = await Service.getJson('get_weeks')\n        epiWeeksObj.reverse().forEach( (item: any) => { \n            const dates = item[1].split(\" \")\n            const startDate = dates[0]\n            const endDate = dates[2]\n            const txt = item[0].split('W')\n            const name = txt[0] +\"/W\"+ txt[1]\n            epiWeeks.push({ name: name, start: startDate, end: endDate })\n        })\n        return epiWeeks\n    }\n\n    static async getReportMonths() {\n        const months: Array<CommonInterface> = []\n        const epiWeeksObj = await Service.getJson('get_months')\n        epiWeeksObj.forEach( (item: any) => {\n            const _payload = item[1];\n            const monthandyear = _payload[0]\n            const startandendmonths = _payload[1];\n            const dates = startandendmonths.split(\"to\");\n            months.push({ name: monthandyear, start: dates[0], end: dates[1].trim() })\n        })\n        return months\n    }\n}\n","import { resolveDynamicComponent as _resolveDynamicComponent, openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return (_openBlock(), _createBlock(_resolveDynamicComponent(_ctx.formType), {\n    fields: _ctx.fields,\n    skipSummary: _ctx.skipSummary,\n    activeField: _ctx.activeField,\n    cancelDestinationPath: _ctx.cancelDestinationPath,\n    onOnFinish: _ctx.onFinish,\n    onFinish: _ctx.onFinishAction,\n    onOnIndex: _ctx.onIndex\n  }, null, 8, [\"fields\", \"skipSummary\", \"activeField\", \"cancelDestinationPath\", \"onOnFinish\", \"onFinish\", \"onOnIndex\"]))\n}","\nimport TouchScreenForm from \"@/components/Forms/TouchScreenForm.vue\";\nimport { defineComponent, PropType } from \"vue\";\nimport { Field } from \"./FieldInterface\";\n\nexport default defineComponent({\n    name: \"HisStandardForm\",\n    components: { TouchScreenForm },\n    emits: [\n        'onFinish',\n        'onIndex'\n    ],\n    data: () => ({\n        formType: 'touch-screen-form' as string\n    }),\n    props: {\n        onFinishAction: {\n            type: Function\n        },\n        skipSummary: {\n            type: Boolean,\n            default: false\n        },\n        activeField: {\n            type: String\n        },\n        fields: {\n            type: Object as PropType<Field[]>,\n            required: true\n        },\n        cancelDestinationPath: {\n            type: String,\n            required: false,\n        }\n    },\n    methods: {\n        onFinish(formData: any, computedData: any) {\n            this.$emit('onFinish', formData, computedData)\n        },\n        onIndex(i: number) {\n            this.$emit('onIndex', i)\n        }\n    }\n})\n","import { render } from \"./HisStandardForm.vue?vue&type=template&id=6daa0375&ts=true\"\nimport script from \"./HisStandardForm.vue?vue&type=script&lang=ts\"\nexport * from \"./HisStandardForm.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/andrew-dev/Projects/HIS-Core/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { FieldType } from \"@/components/Forms/BaseFormElements\"\nimport MonthOptions from \"@/utils/HisFormHelpers/MonthOptions\"\nimport { Field, Option } from \"@/components/Forms/FieldInterface\"\nimport HisDate, { STANDARD_DATE_FORMAT } from \"@/utils/Date\"\nimport StandardValidations from \"@/components/Forms/validations/StandardValidations\"\nimport { NUMBER_PAD_LO } from \"@/components/Keyboard/KbLayouts\"\nimport { NUMBERS_WITHOUT_NA_UNKNOWN } from '../../components/Keyboard/HisKbConfigurations';\nimport dayjs from \"dayjs\"\nimport { Service } from \"@/services/service\"\n\nexport enum EstimationFieldType {\n    AGE_ESTIMATE_FIELD = \"age-estimate-field\",\n    MONTH_ESTIMATE_FIELD = \"month-period-estimate-field\"\n}\n\nexport interface EstimationInterface {\n    estimationFieldType?: EstimationFieldType;\n    allowUnknown: boolean; \n    allowUnknownMonthDay?: boolean;\n}\n\nexport interface DateFieldInterface {\n    id: string;\n    helpText: string;\n    init?: (f: any, c: any) => boolean | Promise<boolean>;\n    summaryLabel?: string;\n    condition?: Function;\n    required?: boolean;\n    defaultValue?: Function;\n    beforeNext?: Function;\n    minDate?(formData: any, computeForm: any): string;\n    maxDate?(formData: any, computeForm: any): string | null;\n    unload?(data: any, state: string, formData: any,  computeForm: any): void; \n    computeValue: Function;\n    appearInSummary?: Function;\n    estimation: EstimationInterface;\n    config?: any;\n}\n\nexport function getYearField(id: string, name: string, showUnknown=true): Field {\n    const primaryFunctions = []\n    if (showUnknown) primaryFunctions.push('UNKNOWN')\n    return {\n        id,\n        helpText: `${name} Year`,\n        appearInSummary: () => false,\n        type: FieldType.TT_TEXT,\n        config: {\n            customKeyboard: [\n                NUMBER_PAD_LO,\n                [\n                    primaryFunctions,\n                    ['DELETE']\n                ]\n            ]\n        }\n    }\n}\n\nexport function getMonthField(id: string, name: string): Field {\n    return {\n        id,\n        helpText: `${name} Month`,\n        appearInSummary: () => false,\n        type: FieldType.TT_SELECT,\n        options: () => MonthOptions\n    }\n}\n\nexport function getDayField(id: string, name: string): Field {\n    return {\n        id,\n        helpText: `${name} Day`,\n        type: FieldType.TT_MONTHLY_DAYS,\n        appearInSummary: () => false\n    }\n}\n\nexport function getMonthDurationEstimateField(id: string, name: string): Field {\n    return {\n        id,\n        helpText: `${name} Estimated period`,\n        type: FieldType.TT_SELECT,\n        appearInSummary: () => false,\n        options: () => ([\n            { label: '6 months ago', value: 180 },\n            { label: '12 months ago', value: 365 },\n            { label: '18 months ago', value: 540 },\n            { label: '24 months ago', value: 730 },\n            { label: 'Over 2 years ago', value: 730 }\n        ])\n    }\n}\n\nexport function getAgeEstimateField(id: string, name: string): Field {\n    return {\n        id,\n        helpText: `${name} Age Estimate`,\n        type: FieldType.TT_NUMBER,\n        appearInSummary: () => false,\n        config: {\n            keypad: NUMBERS_WITHOUT_NA_UNKNOWN\n        }\n    }\n}\n\nfunction appendLeadingZero(s: string) {\n    return parseInt(s) < 10 ? `0${s}` : s\n}\n\nasync function getDefaultDate(form: any, field: DateFieldInterface, datePart: 'Year' | 'Month' | 'Day') {\n    if (field.defaultValue) {\n        const date = await field.defaultValue(form)\n        if (date) {\n            const [year, month, day] = date.split('-')\n            switch(datePart) {\n                case 'Year':\n                    return year || ''\n                case 'Month':\n                    return parseInt(month) || ''\n                case 'Day':\n                    return parseInt(day) || ''    \n            }\n        }\n    }\n    return ''\n}\n\nfunction d(date: string) {\n    return HisDate.toStandardHisDisplayFormat(date)\n}\n\nfunction validateMinMax(date: string, field: DateFieldInterface, form: any, computed: any) {\n    if (field.minDate) {\n        const min = field.minDate(form, computed)\n        if (new Date(date) < new Date(min)) {\n            return [`${d(date)} is less than minimum date of ${d(min)}`]\n        }\n    }\n    if (field.maxDate) {\n        const max = field.maxDate(form, computed)\n        if (max && new Date(date) > new Date(max)) {\n            return [`${d(date)} is greater than max date of  ${d(max)}`]\n        }\n    }\n}\n/**\n * This Jungle of code generates Fields of Year, Month and Day.\n * \n * if you're brave please refactor this. Just dont break anything Ok!\n * @param field \n * @param refDate \n * @returns \n */\nexport function generateDateFields(field: DateFieldInterface, refDate=''): Array<Field> {\n    let fullDate = ''\n    let yearValue = ''\n    let monthValue = ''\n    let dayValue = ''\n    let dateIsEstimated = false\n\n    const yearID = `year_${field.id}`\n    const monthID = `month_${field.id}`\n    const dayID = `day_${field.id}`\n    const ageEstimateID = `age_estimate_${field.id}`\n    const durationEstimateID = `duration_estimate_${field.id}`\n\n    const year = getYearField(yearID, field.helpText, field.estimation.allowUnknown)\n    const month = getMonthField(monthID, field.helpText)\n    const day = getDayField(dayID, field.helpText)\n\n    const ageEstimate = getAgeEstimateField(ageEstimateID, field.helpText)\n    const durationEstimate = getMonthDurationEstimateField(durationEstimateID, field.helpText)\n\n    const estimateMonthOrDay = typeof field.estimation.allowUnknownMonthDay === 'boolean'\n        && field.estimation.allowUnknownMonthDay\n\n    const datePartCondition = (f: any) => {\n        if (f[yearID] && f[yearID].value) {\n            if (['Unknown'].includes(f[yearID].value)) {\n                return false\n            }\n        }\n        return field.condition ? field.condition(f) : true\n    }\n    /**\n     * Generates fulldate based on current date part, it's value and previously recorded date parts.\n     * @param value\n     * @param part\n     * @returns\n     */\n    const buildHelpTextDate = (value: any, part: 'month' | 'year' | 'day') => {\n        const parts = [\n            { type: 'year', value: yearValue, default: 'YYYY' },\n            { type: 'month', value: monthValue, default: 'MM' },\n            { type: 'day', value: dayValue, default: 'DD' },\n        ]\n        return parts.reduce((partValues: any, dpart: any) => {\n            const wl = [null, undefined, 'Unknown', '']\n            if (part === dpart.type) {\n                if (wl.includes(value)) {\n                    partValues.push(dpart.default)\n                } else {\n                    partValues.push(value)\n                }\n            } else {\n                if (wl.includes(dpart.value)) {\n                    partValues.push(dpart.default)\n                } else {\n                    partValues.push(dpart.value)\n                }\n            }\n            return partValues\n        }, []).join('-')\n    }\n\n    if (typeof field.init === 'function') year.init = field.init\n    \n    // YEAR CONFIG\n    year.updateHelpTextOnValue = (data: any) => `${year.helpText} (${buildHelpTextDate(data?.label, 'year')})`\n\n    year.proxyID = field.id\n\n    year.unload = (v: Option) => yearValue = v.value.toString()\n \n    year.config = { ...year.config, ...field.config }\n\n    year.defaultValue = (f: any) => getDefaultDate(f, field, 'Year')\n\n    year.condition = (f: any) => field.condition \n        ? field.condition(f) \n        : true\n\n    year.validation = (v: Option, f: any, c: any) => {\n        if (field.required && StandardValidations.required(v)) {\n            return ['Year cannot be empty']\n        }\n        const year = v ? v.value : ''\n        if (!field.estimation.allowUnknown \n            && year.toString().match(/unknown/i)) {\n            return ['Value unknown is not permitted']\n        }\n    \n        if (year && !['Unknown'].includes(year as string)\n            && isNaN(year as number)\n            || year < 1900) {\n            return ['Invalid Year']\n        }\n\n        if (year && typeof field.minDate === 'function') {\n            const minYear = HisDate.getYear(field.minDate(f, c)) \n            if (parseInt(year as any) < minYear) {\n                return [`Year of ${year} is less than Minimum year of ${minYear}`]\n            }\n        }\n\n        if (year && typeof field.maxDate === 'function') {\n            const max = field.maxDate(f, c)\n            if (max && year > HisDate.getYear(max)) {\n                return [`Year of ${year} exceeds Maximum year of ${HisDate.getYear(max)}`]\n            }\n        }\n\n        return null\n    }\n    /**\n     * Year Proxy field will be our reference point of \n     * how data should appear on the summary\n     * @returns \n     */\n    year.summaryMapValue = () => ({\n        label: field.summaryLabel || field.helpText, \n        value: fullDate ? d(fullDate) : 'Unknown'\n    })\n\n    // To avoid the year from appearing on the summary, \n    // match the ref against the proxyID itself\n    year.appearInSummary = (_: any, ref: string) => ref === field.id\n\n    /**\n     * This helps to keep computeValue of the dateProxy up-to-date when year changes\n     * @param val \n     * @returns \n     */\n    year.computedValue = (val: Option) => {\n        if (fullDate) {\n            const [_, month, day] = fullDate.split('-')\n            fullDate = `${val.value}-${month}-${day}`\n            return field.computeValue(fullDate, false)\n        }\n        if (val && val.value === 'Unknown') {\n            fullDate = ''\n            return field.computeValue('Unknown', false)\n        }\n    }\n\n    // MONTH CONFIG\n    month.updateHelpTextOnValue = (data: any) => `${month.helpText} (${buildHelpTextDate(data?.label, 'month')})`\n\n    month.proxyID = field.id\n\n    month.unload = (v: Option) => monthValue = appendLeadingZero(v.value.toString())\n\n    month.condition = (f: any) =>  datePartCondition(f)\n\n    month.validation = (v: Option) => StandardValidations.required(v)\n\n    month.defaultValue = (f: any) => getDefaultDate(f, field, 'Month')\n\n    // Add Unknown value to trigger default estimated Month\n    if (estimateMonthOrDay) {\n        month.options = () => [...MonthOptions, { label: 'Unknown', value: 'Unknown'}]\n    }\n\n    /**\n     *\n     * This helps to keep compute value up to date when month changes\n     * @param val\n     * @returns\n     */\n    month.computedValue = (val: Option, f: any) => {\n        // Estimate Month and Day when Month Value is Unknown\n        if (`${val.value}`.match(/unknown/i)) {\n            fullDate = `${f[yearID].value}-07-15`\n            return field.computeValue(fullDate, true)\n        }\n        // Default date behaviour\n        if (fullDate) {\n            const [year, _, day] = fullDate.split('-')\n            const month = appendLeadingZero(`${val.value}`)\n            fullDate = `${year}-${month}-${day}`\n            return field.computeValue(fullDate, false)\n        }\n    }\n    // DAY CONFIG\n    day.proxyID = field.id\n\n    day.updateHelpTextOnValue = (data: any) => `${day.helpText} (${buildHelpTextDate(data?.label, 'day')})`\n\n    day.condition = (f: any) => !`${f[monthID].value}`.match(/unknown/i) && datePartCondition(f) \n\n    day.validation =  (v: Option, f: any, c: any) => {\n        if (StandardValidations.required(v)) {\n            return ['Day is required for date']\n        }\n        dateIsEstimated = `${v.value}`.match(/unknown/i) ? true : false\n        // Use 15 as default value if day is estimated\n        dayValue = dateIsEstimated ? '15' :  appendLeadingZero(`${v.value}`)\n        fullDate = `${yearValue}-${monthValue}-${dayValue}`\n        return validateMinMax(fullDate, field, f, c)\n    }\n\n    day.defaultValue = (f: any) => getDefaultDate(f, field, 'Day')\n\n    day.computedValue = () => {\n        return field.computeValue(fullDate, dateIsEstimated)\n    }\n\n    day.unload = (d: any, s: any, f: any, c: any) => {\n        if (field.unload) field.unload(d, s, f, c)\n    }\n\n    day.beforeNext = (v: any, f: any) => {\n        return !field.beforeNext \n            ? true \n            : field.beforeNext(fullDate, f)\n    }\n\n    day.config = { \n        // Monthly days shown on the Day component depends on this configuration\n        // to show approprite days based on specific year and month calendar\n        year: (f: any) => f[yearID].value,\n        month: (f: any) => f[monthID].value\n    }\n    // If not configured to do estimates, dont show Unknown Button which appears by default\n    // on MonthlyDay component.\n    if (!estimateMonthOrDay) day.config.keyboardActions = []\n\n    const valueEstimateCondition = (f: any, estimateType: EstimationFieldType) => {\n        const conditions = [\n            f[yearID].value === 'Unknown',\n            field.condition ? field.condition(f) : true,\n            field.estimation.estimationFieldType === estimateType\n        ]\n        return conditions.every(Boolean)\n    }\n\n    // AGE ESTIMATE CONFIG\n    ageEstimate.proxyID = field.id\n\n    ageEstimate.validation = (v: Option, f: any, c: any) => {\n        if (v && v.value > 300) {\n            return ['Age estimate is too high and exceeding hard limit of 300']\n        }\n        if (isNaN(parseInt(v.value.toString()))) {\n            return ['Please enter a valid number']\n        }\n        const ageEstimateRegex = /^(12[0-7]|1[01][0-9]|[1-9]?[0-9])$/\n        if(!v.value.toString().match(ageEstimateRegex) ){\n            return ['Not a valid age estimate'] \n        }\n        const year = dayjs(Service.getSessionDate())\n            .subtract(v.value as number, 'years')\n            .year()\n        fullDate = `${year}-07-15`\n        return validateMinMax(fullDate, field, f, c)\n    }\n\n    ageEstimate.condition = (form: any) => valueEstimateCondition(\n        form, EstimationFieldType.AGE_ESTIMATE_FIELD\n    ) \n\n    ageEstimate.computedValue = () => field.computeValue(fullDate, true)\n\n    ageEstimate.beforeNext = (v: any, f: any) => {\n        return !field.beforeNext \n            ? true \n            : field.beforeNext(fullDate, f)\n    }\n\n    // DURATION ESTIMATE\n    durationEstimate.proxyID = field.id\n\n    durationEstimate.validation = (v: Option, f: any, c: any) => {\n        if (StandardValidations.required(v)) {\n            return ['Please select an estimate']\n        }\n        fullDate = dayjs(Service.getSessionDate())\n            .subtract(v.value as number, 'day')\n            .format(STANDARD_DATE_FORMAT)\n        return validateMinMax(fullDate, field, f, c)\n    }\n\n    durationEstimate.condition = (form: any) => valueEstimateCondition(\n        form, EstimationFieldType.MONTH_ESTIMATE_FIELD\n    )\n\n    durationEstimate.computedValue = () => field.computeValue(fullDate, true)\n\n    durationEstimate.beforeNext = (_: any, f: any) => {\n        return !field.beforeNext \n            ? true \n            : field.beforeNext(fullDate, f)\n    }\n\n    return [\n        year,\n        month,\n        day,\n        ageEstimate,\n        durationEstimate\n    ]\n}\n","export default ([\n    {\n        label: 'Jan',\n        value: 1\n    },\n    {\n        label: 'Feb',\n        value: 2\n    },\n    {\n        label: 'Mar',\n        value: 3\n    },\n    {\n        label: 'Apr',\n        value: 4\n    },\n    {\n        label: 'May',\n        value: 5\n    },\n    {\n        label: 'Jun',\n        value: 6\n    },\n    {\n        label: 'Jul',\n        value: 7\n    },\n    {\n        label: 'Aug',\n        value: 8\n    },\n    {\n        label: 'Sep',\n        value: 9\n    },\n    {\n        label: 'Oct',\n        value: 10\n    },\n    {\n        label: 'Nov',\n        value: 11\n    },\n    {\n        label: 'Dec',\n        value: 12\n    }\n])","\nimport { defineComponent } from 'vue'\nimport { Field } from '@/components/Forms/FieldInterface'\nimport { generateDateFields } from \"@/utils/HisFormHelpers/MultiFieldDateHelper\"\nimport { Patientservice } from \"@/services/patient_service\"\nimport HisDate from \"@/utils/Date\"\nimport { modalController } from \"@ionic/vue\";\nimport DrilldownTable from \"@/apps/ART/views/reports/BasicReportTemplate.vue\"\nimport { OpdReportService } from \"@/apps/OPD/services/opd_report_service\"\nimport { IDSRReportService } from \"@/apps/OPD/services/idsr_service\"\nimport { FieldType } from \"@/components/Forms/BaseFormElements\"\nimport { Option } from '@/components/Forms/FieldInterface'\nimport Validation from \"@/components/Forms/validations/StandardValidations\"\nimport table from \"@/components/DataViews/tables/ReportDataTable\"\nimport moment from \"dayjs\"\nimport { Service } from '@/services/service';\nimport { isEmpty } from 'lodash'\n\nexport default defineComponent({\n    data: () => ({\n        fields: [] as Array<Field>,\n        report: {} as any,\n        reportReady: false as boolean,\n        period: '' as string,\n        startDate: '' as string,\n        endDate: '' as string,\n        customFileName: '' as string,\n        drillDownCache: {} as Record<number, Array<any>>\n    }),\n    methods: {\n        toDate(date: string) {\n            return HisDate.toStandardHisDisplayFormat(date)\n        },\n        confirmPatient(patient: number) {\n            return this.$router.push(`/patients/confirm?person_id=${patient}`)\n        },\n        async exportToCustomPDF(title: string) {\n            const printW = open('', '', 'width:1024px, height:768px')\n            const content = document.getElementById('report-content')\n            if (content && printW) {\n                printW.document.write(`\n                    <html>\n                    <head>\n                        <title>${title}</title>\n                        <link rel=\"stylesheet\" media=\"print\" href=\"/assets/css/cohort.css\" />\n                    </head>\n                    <body>\n                        ${content.innerHTML}\n                    </body>\n                    </html>\n                `)\n                setTimeout(() => { printW.print(); printW.close() }, 3500)\n            }\n        },\n        async onDrillDown(conditionName: string, patientIds: number[]) {\n            if(isEmpty(patientIds)) return\n            const columns = [[\n                table.thTxt('First name'),\n                table.thTxt('Last name'),\n                table.thTxt('Gender'),\n                table.thTxt('Age'),\n                table.thTxt('Phone'),\n                table.thTxt('Address'),\n                table.thTxt('Action')\n            ]]\n            const rowParser = async (ids: number[]) => {\n                return await Promise.all(ids.map(async (id) => {\n                const personDetails = await Patientservice.findByID(id)\n                const patient = new Patientservice(personDetails)\n                return [\n                    table.td(patient.getGivenName()),\n                    table.td(patient.getFamilyName()),\n                    table.td(patient.getGender()),\n                    table.td(patient.getAge()),\n                    table.td(patient.getPhoneNumber()),\n                    table.td(`${patient.getCurrentDistrict()}, ${patient.getCurrentVillage()}, ${patient.getClosestLandmark()}`),\n                    table.tdBtn('Select', async () => {\n                    await modalController.dismiss({})\n                    this.$router.push({ path: `/patient/dashboard/${id}`})\n                    })\n                ]\n                })) \n            }\n            return this.drilldownData(conditionName, columns, patientIds, rowParser)\n        },\n        async drilldownAsyncRows(title: string, columns: Array<any>, asyncRows: Function) {\n            const modal = await modalController.create({\n                component: DrilldownTable,\n                cssClass: 'large-modal',\n                componentProps: { \n                    title, \n                    columns, \n                    asyncRows,\n                    showFilters: true,\n                    rowsPerPage: 50,\n                    paginated: true,\n                    showReportStamp: false,\n                    footerColor: 'light',\n                    onFinish: () => modalController.dismiss()\n                }\n            })\n            modal.present()\n        },\n        async drilldownData(title: string, columns: Array<any>, rows: Array<any>, rowParser: any) {\n            const modal = await modalController.create({\n                component: DrilldownTable,\n                cssClass: 'large-modal',\n                componentProps: { \n                    title, \n                    columns, \n                    rows,\n                    rowParser,\n                    rowsPerPage: 50,\n                    showFilters: true,\n                    paginated: true,\n                    showReportStamp: false,\n                    footerColor: 'light',\n                    onFinish: () => modalController.dismiss()\n                }\n            })\n            modal.present()\n        },\n        getDefaultDrillDownTable() {\n            const columns = [\n                [\n                    table.thTxt('ARV number'), \n                    table.thTxt('Gender'),\n                    table.thTxt('Birth Date'), \n                    table.thTxt('Actions')\n                ]\n            ]\n            const rowParser = (tableRows: Array<any[]>) => {\n                return tableRows.map(async (defaultRow: Array<any>) => {\n                    const [index, id ] = defaultRow\n                    if (id in this.drillDownCache) {\n                        //const [oldIndex, ...rest] = this.drillDownCache[id]\n                        return [index] // Assign new index number and maintain patient record\n                    } \n    \n                    const data = await Patientservice.findByID(id)\n                    const patient = new Patientservice(data)\n                    const row = [\n                        index,\n                        table.td(patient.getArvNumber()), \n                        table.td(patient.getGender()), \n                        table.tdDate(patient.getBirthdate().toString()),\n                        table.tdBtn('Show', async () => {\n                            await modalController.dismiss({})\n                            this.$router.push({ path: `/patient/dashboard/${id}`})\n                        })\n                    ]\n                    this.drillDownCache[id] = row\n                    return row\n                })\n            }\n            return { rowParser, columns }\n        },\n        runTableDrill(data: any, title='Drilldown patients') {\n            const { columns, rowParser } = this.getDefaultDrillDownTable()\n            this.drilldownData(title, columns, data, rowParser)\n        },\n        drill(values: Array<number>, title='Drill table') {\n            if (values && values.length > 0) {\n                return table.tdLink(\n                    values.length, \n                    () => this.runTableDrill(values, title)\n                )\n            }\n            return table.td(0)\n        },\n        getEpiweeksFields(): Array<Field> {\n            return [\n                {\n                    id: 'epiweek',\n                    helpText: 'Select EPI week',\n                    type: FieldType.TT_SELECT,\n                    validation: (val: Option) => Validation.required(val),\n                    options: async () => {\n                        const epiWeeks = await IDSRReportService.getReportEpiWeeks()\n                        const items: Array<Option> = epiWeeks.map((q: any) => ({\n                            label: q.name +' - ('+ moment(q.start).format('DD/MMM/YYYY') +' - '+ moment(q.end).format('DD/MMM/YYYY')+')',\n                            value: q.start,\n                            other: q\n                        }))\n                        return items\n                    }\n                },\n            ]\n        },\n        getMonthlyFields(): Array<Field> {\n            return [\n                {\n                    id: 'idsrmonth',\n                    helpText: 'Select Month',\n                    type: FieldType.TT_SELECT,\n                    validation: (val: Option) => Validation.required(val),\n                    options: async () => {\n                        const epiWeeks = await IDSRReportService.getReportMonths()\n                        const items: Array<Option> = epiWeeks.map((q: any) => ({\n                            label: q.name +' - ('+ moment(q.start).format('DD/MMM/YYYY') +' - '+ moment(q.end).format('DD/MMM/YYYY')+')',\n                            value: q.start,\n                            other: q\n                        }))\n                        return items\n                    }\n                },\n            ]\n        },\n        getDateDurationFields(useQuarter=false, setCustomQuarterPeriod=false, maxQuarter=5): Array<Field> {\n            const minDate = '2001-01-01'\n            const maxDate = Service.getSessionDate()\n            return [\n                {\n                    id: 'quarter',\n                    helpText: 'Select Quarter',\n                    type: FieldType.TT_SELECT,\n                    condition: () => useQuarter,\n                    validation: (val: Option) => Validation.required(val),\n                    options: () => {\n                        const quarters = OpdReportService.getReportQuarters(maxQuarter)\n                        let items: Array<Option> = quarters.map((q: any) => ({\n                            label: q.name,\n                            value: q.start,\n                            other: q\n                        }))\n                        if (setCustomQuarterPeriod) {\n                            items = [\n                                {\n                                    label: 'Set custom period',\n                                    value: 'custom_period',\n                                    other: {}\n                                },\n                                ...items\n                            ]\n                        }\n                        return items\n                    }\n                },\n                ...generateDateFields({\n                    id: 'start_date',\n                    helpText: 'Start',\n                    required: true,\n                    condition: (f: any) => f.quarter && f.quarter.value === 'custom_period' || !useQuarter,\n                    minDate: () => minDate,\n                    maxDate: () => maxDate,\n                    estimation: {\n                        allowUnknown: false\n                    },\n                    computeValue: (date: string) => date \n                }),\n                ...generateDateFields({\n                    id: 'end_date',\n                    helpText: 'End',\n                    required: true,\n                    condition: (f: any) => f.quarter && f.quarter.value === 'custom_period' || !useQuarter,\n                    unload: (d: any, s: any, f: any, c: any) => {\n                        if (s === 'next') {\n                            this.endDate = c.end_date\n                        }\n                    },\n                    minDate: (_: any, c: any) => c.start_date,\n                    maxDate: () => maxDate,\n                    estimation: {\n                        allowUnknown: false\n                    },\n                    computeValue: (date: string) => date\n                })\n            ]\n        }\n    }\n})\n","import script from \"./ReportMixin.vue?vue&type=script&lang=ts\"\nexport * from \"./ReportMixin.vue?vue&type=script&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nconst _hoisted_1 = { style: {\"margin\":\"auto\",\"width\":\"95%\",\"margin-top\":\"1%\"} }\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_report_table = _resolveComponent(\"report-table\")\n\n  return (_openBlock(), _createBlock(\"div\", _hoisted_1, [\n    _createVNode(_component_report_table, {\n      columns: _ctx.columns,\n      rows: _ctx.rows,\n      config: {tableCssTheme: _ctx.tableCssTheme}\n    }, null, 8, [\"columns\", \"rows\", \"config\"])\n  ]))\n}","\nimport { defineComponent } from 'vue'\nimport ReportTable from \"@/components/DataViews/tables/ReportDataTable.vue\"\nimport table, { ColumnInterface, RowInterface } from \"@/components/DataViews/tables/ReportDataTable\"\n\nexport default defineComponent({\n    components: { ReportTable },\n    props: {\n      clinicName: {\n        type: String,\n        default: ''\n      },\n      reportparams: {\n        type: Object,\n        required: true\n      },\n      totalOPDVisits: {\n        type: Number,\n        required: true\n      },\n      reportName: {\n        type: String,\n        required: true\n      },\n      periodLabel: {\n        type: String,\n        required: true\n      },\n      periodDates: {\n        type: String,\n        required: true\n      },\n      rangeLabel: {\n        type: String,\n        required: true\n      },\n      range: {\n        type: String,\n        required: true\n      },\n    },\n    data: function() {\n      return {\n        tableCssTheme: 'opd-report-theme',\n        rows: [] as RowInterface[][],\n        columns: [\n            [\n              table.thTxt(this.reportName, {\n                colspan: 2,\n                sortable: false,\n                exportable: false \n              })\n            ]\n        ] as ColumnInterface[][],\n      }\n    },\n    mounted() {\n      this.initTable()\n    },\n    methods: {\n      initTable() {\n        const rows: RowInterface[][] = []\n        const tableHeaders = [\n          {\n            name: 'Country:',\n            value: 'Malawi',\n          },\n          {\n            name: 'Reporting Facility Name:',\n            value: this.clinicName\n          },\n          {\n            name: this.rangeLabel+':',\n            value: this.range\n          },\n          {\n            name: this.periodLabel+':',\n            value: this.periodDates\n          },\n          {\n            name: 'Total OPD Visits:',\n            value: this.totalOPDVisits\n          }\n\n        ]\n        tableHeaders.forEach(item => {\n          if(item.name !== 'undefined:') {\n                rows.push([\n                    table.td(item.name, {style: {textAlign: 'left'}}),\n                    table.td(item.value, {style: {textAlign: 'left'}}),\n                ])\n          }\n        })\n        this.rows = rows\n      }\n    }\n  })\n  ","import { render } from \"./MOHReportHeader.vue?vue&type=template&id=522eaa58&ts=true\"\nimport script from \"./MOHReportHeader.vue?vue&type=script&lang=ts\"\nexport * from \"./MOHReportHeader.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/andrew-dev/Projects/HIS-Core/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { Service } from \"@/services/service\";\nimport HisDate from \"@/utils/Date\"\nimport { PrintoutService } from '@/services/printout_service';\nimport Url from \"@/utils/Url\";\n\nexport interface QuarterInterface {\n    name: string;\n    start: string;\n    end: string;\n}\n\nexport const AGE_GROUPS = [\n    '0-5 months', '6-11 months',\n    '12-23 months', '2-4 years', \n    '5-9 years', '10-14 years', \n    '15-17 years', '18-19 years', \n    '20-24 years', '25-29 years', \n    '30-34 years', '35-39 years', \n    '40-44 years', '45-49 years', \n    '50 plus years'\n]\n\nexport const OTHER_AGE_GROUPS = [\n    '<1 year', '1-4 years',\n    '5-9 years', '10-14 years',\n    '15-19 years', '20-24 years',\n    '25-29 years', '30-34 years',\n    '35-39 years', '40-44 years',\n    '45-49 years', '50 plus years'\n]\n\nexport const LA_TYPES: Record<string, string> = {\n    one: 'AL 1', \n    two: 'AL 2', \n    three: 'AL 3', \n    four: 'LA 4'\n}\n\nexport const NCD_TYPES = [\n    'Diabetes',\n    'Hypertension',\n    'Stroke',\n    'Suspected cancer',\n    'Confirmed cancer',\n    'Palliative cancer',\n    'Asthma',\n    'Depression',\n    'Acute psychosis',\n    'Chronic psychosis',\n    'Epilepsy'\n]\n\nexport const MENTAL_HEALTH_DIAGNOSIS = [\n    'Organic mental disorder (Chronic)',\n    'Organic mental disorder (acute)',\n    'Alcohol use mental disorder',\n    'Drug use mental disorder',\n    'Schizophrenia',\n    'Acute and transient psychotic disorder',\n    'Schizo-affective disorder',\n    'Mood-affective disorder (MANIC)',\n    'Mood-affective disorder (BIPOLAR)',\n    'Mood-affective disorder (DEPRESSION)',\n    'Anxiety disorder',\n    'Stress reaction adjustment disorder',\n    'Dissociative conversion disorder',\n    'Somatoform disorder',\n    'Puerperal mental disorder',\n    'Personality/Behaviour disorder',\n    'Mental retardation',\n    'Psychological mental disorder',\n    'Hyperkinetic conduct disorder',\n    'Epilepsy'\n]\n\nexport class OpdReportService extends Service {\n    programID: number;\n    startDate: string;\n    endDate: string;\n    date: string;\n    epiweek: string;\n    constructor() {\n        super()\n        this.endDate = ''\n        this.startDate = ''\n        this.epiweek = ''\n        this.date = Service.getSessionDate()\n        this.programID = Service.getProgramID()\n    }\n\n    getPatientsWithNIDs() {\n        return this.getReport('with_nids')\n    }\n\n    getClinicRegistrations(){\n        return this.getReport('registration');\n    }\n\n    getDrugsGivenWithoutPrescription() {\n        return this.getReport('drugs_given_without_prescription')\n    }\n\n    getDrugsGivenWithPrescription() {\n        return this.getReport('drugs_given_with_prescription')\n    }\n\n    getDiagnosis(){\n        const url = `programs/${this.programID}/reports/diagnosis`\n        return Service.getJson(url, {\n            'start_date': this.startDate,\n            'end_date': this.endDate,\n            'date': this.date\n        })\n    }\n\n    getDiagnosisByAddress(){\n        return this.getReport('diagnosis_by_address')\n    }\n\n    getLaPrescriptions(){\n        const url = `programs/${this.programID}/reports/la_prescriptions`\n        return Service.getJson(url, {\n            'start_date': this.startDate,\n            'end_date': this.endDate,\n            \n        })\n    }\n\n    printLaReport(data: Record<string, any>){\n        const printService = new PrintoutService()\n        const url = `programs/${this.programID}/barcodes/la_report`\n        const params: Record<string, any> = {\n            \"date[start]\": this.startDate,\n            \"date[end]\": this.endDate\n        }\n        Object.keys(LA_TYPES).forEach((v, i) => {\n            i++\n            params[`${i}[prescription]`] = data[`total_la_${v}_prescribed_drugs`]\n            params[`${i}[dispensed]`] = data[`total_la_${v}_dispensed_drugs`]\n        })\n        return printService.printLbl(`${url}?${Url.parameterizeObjToString(params)}`)\n    }\n\n    getDateIntervalPeriod() {\n        return `${HisDate.toStandardHisDisplayFormat(this.startDate)} - ${HisDate.toStandardHisDisplayFormat(this.endDate)}`\n    }\n\n    setStartDate(startDate: string) {\n        this.startDate = startDate\n    }  \n\n    setEndDate(endDate: string) {\n        this.endDate = endDate\n    }\n\n    setEpiWeek(epiweek: string) {\n        this.epiweek = epiweek\n    }\n\n    getReportPeriod() {\n        return this.startDate && this.endDate\n         ? `${HisDate.toStandardHisDisplayFormat(this.startDate)} - ${HisDate.toStandardHisDisplayFormat(this.endDate)}`\n         : '-'\n    }\n\n    getReport(url: string, params={}) {\n        return Service.getJson(url, this.buildRequest(params))\n    }\n\n    buildRequest(config: Record<string, any> = {}) {\n        const payload: any = {'date': this.date, 'program_id': this.programID}\n        if (this.startDate && this.endDate) {\n            payload['start_date'] = this.startDate\n            payload['end_date'] = this.endDate\n        }\n        if (this.epiweek) {\n            payload['epiweek'] = this.epiweek\n        }\n        return { ...payload, ...config }\n    }\n\n    static getReportQuarters(minDuration= 4) {\n        const quarters: Array<QuarterInterface> = []\n        let year = HisDate.getCurrentYear()\n        for(let i=0; i < minDuration; ++i) {\n            quarters.push({ name: `Q4 ${year}`, start: `${year}-10-01`, end: `${year}-12-31` })\n            quarters.push({ name: `Q3 ${year}`, start: `${year}-07-01`, end: `${year}-09-30` })\n            quarters.push({ name: `Q2 ${year}`, start: `${year}-04-01`, end: `${year}-06-30` })\n            quarters.push({ name: `Q1 ${year}`, start: `${year}-01-01`, end: `${year}-03-31` })\n            --year\n        }\n        return quarters\n    }\n\n}"],"sourceRoot":""}