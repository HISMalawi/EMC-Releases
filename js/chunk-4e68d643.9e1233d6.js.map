{"version":3,"sources":["webpack:///./src/apps/OPD/views/encounters/Prescription.vue?b3c7","webpack:///./src/apps/OPD/views/encounters/Prescription.vue","webpack:///./src/apps/OPD/views/encounters/Prescription.vue?e7f2","webpack:///./src/services/drug_order_service.ts","webpack:///./src/guidelines/encounter_guidelines.ts","webpack:///./node_modules/cache-loader/dist/cjs.js","webpack:///./src/views/EncounterMixin.vue","webpack:///./node_modules/eslint-loader/index.js","webpack:///./node_modules/vue-loader-v16/dist/templateLoader.js","webpack:///./src/components/Forms/HisStandardForm.vue","webpack:///./node_modules/core-js/modules/es.array.find.js","webpack:///./src/apps/OPD/services/drug_prescription_service.ts","webpack:///./src/utils/GuidelineEngine.ts"],"names":["render","_ctx","_cache","$props","$setup","$data","$options","_component_his_standard_form","_resolveComponent","_openBlock","_createBlock","cancelDestinationPath","cancelDestination","fields","activeField","onFinishAction","onSubmit","skipSummary","defineComponent","components","HisStandardForm","mixins","EncounterMixinVue","data","prescriptionService","showMalariaDrugs","hasMalaria","watch","ready","handler","isReady","DrugPrescriptionService","patientID","providerID","getFields","immediate","deep","methods","formData","drugOrders","mapToOrders","createEncounter","encounter","toastWarning","createDrugOrder","drugOrder","toastSuccess","nextTask","calculateExpireDate","startDate","duration","date","Date","setDate","getDate","HisDate","toStandardHisFormat","drugs","map","drug","getSessionDate","frequency","DRUG_FREQUENCIES","find","f","label","other","drug_id","dosage","value","units","code","isOrderComplete","every","id","helpText","validation","Validation","required","type","FieldType","TT_SELECT","condition","unload","options","ANTI_MALARIA_DRUGS","name","TT_INFINITE_SCROLL_MULTIPLE_SELECT","_","filter","page","limit","loadDrugs","onload","config","showKeyboard","hiddenFooterBtns","footerBtns","color","size","visible","slot","onClick","alertConfirmation","TT_PRESCRIPTION_INPUT","malaria_drugs","beforeNext","isEmpty","TT_TABLE_VIEWER","columns","rows","__exports__","DrugOrderService","orders","this","postJson","getProgramID","dispensations","order","getJson","pageSize","Service","drugID","params","patientId","FlowState","dformat","d","toStandardHisDisplayFormat","ENCOUNTER_GUIDELINES","priority","actions","alert","outcomeStartDate","infoActionSheet","action","GO_TO_PATIENT_DASHBOARD","CHANGE_PATIENT_OUTCOME","CONTINUE","conditions","outcome","sessionDate","birthDate","CHANGE_SESSION_DATE","selection","providers","encounterName","apiDate","optionsActionSheet","role","modal","flowState","SET_PROVIDER","isBdeMode","isBDE","patient","facts","route","patient_id","parseInt","Store","get","then","patientData","setEncounterFacts","checkEncounterGuidelines","computed","patientDashboardUrl","runflowState","state","states","username","split","provider","person_id","$router","push","EXIT","gotoPatientDashboard","findings","matchToGuidelines","index","finding","status","program","e","console","error","toastDanger","ProgramService","getCachedApiDate","getBirthdate","$route","toString","toUpperCase","sort","a","b","usernameA","usernameB","p","person","names","latestName","given_name","family_name","toOption","mapStrToOptions","items","i","path","yesNoOptions","toYesNoOption","values","mapOptions","option","yesNoUnknownOptions","resolveObs","obs","tag","Object","reduce","accum","cur","Array","isArray","concat","Promise","all","inArray","arr","expression","length","validateSeries","DrugService","constructor","super","_resolveDynamicComponent","formType","onOnFinish","onFinish","onOnIndex","onIndex","TouchScreenForm","emits","props","Function","Boolean","default","String","computedData","$emit","$","$find","addToUnscopables","arrayMethodUsesToLength","FIND","SKIPS_HOLES","USES_TO_LENGTH","target","proto","forced","callbackfn","arguments","undefined","getDrugs","OrderService","getLatestMalariaTestResult","malariaTestResult","AppEncounterService","getAllValueCoded","primaryDiagnosis","includes","secondaryDiagnosis","create","encounterID","isCondition","ignored","prop","sortByRelevance","guidelines","targetEvent","matches","guidelineIndex","targetValidations","some","title","description","text","info"],"mappings":"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","file":"js/chunk-4e68d643.9e1233d6.js","sourcesContent":["import { resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_his_standard_form = _resolveComponent(\"his-standard-form\")\n\n  return (_openBlock(), _createBlock(_component_his_standard_form, {\n    cancelDestinationPath: _ctx.cancelDestination,\n    fields: _ctx.fields,\n    activeField: _ctx.activeField,\n    onFinishAction: _ctx.onSubmit,\n    skipSummary: true\n  }, null, 8, [\"cancelDestinationPath\", \"fields\", \"activeField\", \"onFinishAction\"]))\n}","\nimport { defineComponent} from 'vue'\nimport HisStandardForm from \"@/components/Forms/TouchScreenForm.vue\";\nimport EncounterMixinVue from '@/views/EncounterMixin.vue';\nimport Validation from '@/components/Forms/validations/StandardValidations';\nimport { Field, Option } from '@/components/Forms/FieldInterface';\nimport { FieldType } from '@/components/Forms/BaseFormElements';\nimport { isEmpty } from 'lodash';\nimport { ANTI_MALARIA_DRUGS, DrugPrescriptionService, DRUG_FREQUENCIES } from '../../services/drug_prescription_service';\nimport HisDate from \"@/utils/Date\"\nimport { alertConfirmation, toastSuccess, toastWarning } from '@/utils/Alerts';\nimport { loadingController } from '@ionic/core';\n\nexport default defineComponent({\n  components: { HisStandardForm },\n  mixins: [EncounterMixinVue],\n  data: () => ({\n    activeField: '',\n    prescriptionService: {} as any,\n    showMalariaDrugs: false,\n    hasMalaria: false,\n  }),\n  watch: {\n    ready: {\n      async handler(isReady: boolean) {\n        if(isReady){\n          this.prescriptionService = new DrugPrescriptionService(this.patientID, this.providerID)  \n          this.hasMalaria = await this.prescriptionService.hasMalaria()\n          this.fields = this.getFields()\n        }\n      },\n      immediate: true,\n      deep: true\n    }\n  },\n  methods: {\n    async onSubmit(formData: any){   \n      const drugOrders = this.mapToOrders(formData['drugs_details'])\n      const encounter = await this.prescriptionService.createEncounter()\n      if (!encounter) return toastWarning('Unable to create treatment encounter')   \n      const drugOrder = await this.prescriptionService.createDrugOrder(drugOrders);\n      if(!drugOrder) return toastWarning('Unable to create drug orders!')\n      toastSuccess('Drug order has been created')\n      this.nextTask()       \n    },\n    calculateExpireDate(startDate: string | Date, duration: number ) {\n      const date = new Date(startDate)\n      date.setDate(date.getDate() + duration)\n      return HisDate.toStandardHisFormat(date)\n    },\n    mapToOrders(drugs: Option[]): any[] {\n      return drugs.map(drug => {\n        const startDate = DrugPrescriptionService.getSessionDate()\n        const frequency = DRUG_FREQUENCIES.find(f => f.label === drug.other.frequency)\n        return {\n          'drug_inventory_id': drug.other.drug_id,\n          'equivalent_daily_dose': drug.other.dosage * frequency!.value,\n          'start_date': startDate,\n          'auto_expire_date': this.calculateExpireDate(startDate, drug.other.duration), \n          'units': drug.other.units,\n          'instructions': `${drug.label}: ${frequency!.value} ${frequency!.code} for ${drug.other.duration}`,\n          'dose': drug.other.dosage,\n          'frequency': frequency!.code,\n        }\n      })\n    },\n    isOrderComplete(drugs: Option[]): boolean {\n      return drugs.every(drug => drug.other.frequency && drug.other.duration && drug.other.dosage)\n    },\n    getFields(): Array<Field>{\n      return [\n        {\n          id: 'malaria_drugs',\n          helpText: \"select Malaria Drugs\",\n          validation: (data: any) => Validation.required(data),\n          type: FieldType.TT_SELECT,\n          condition: () => this.activeField === 'malaria_drugs' && this.showMalariaDrugs,\n          unload: () => {\n            this.showMalariaDrugs = false\n            this.activeField = 'drugs_details'\n          },\n          options: () => ANTI_MALARIA_DRUGS.map(drug => ({\n            label: `${drug.name}, ${drug.frequency} time(s) a day, for ${drug.duration} days`,\n            value: drug.name,\n            other: drug\n          }))\n        },\n        {\n          id: 'drugs',\n          helpText: 'Select drugs',\n          type: FieldType.TT_INFINITE_SCROLL_MULTIPLE_SELECT,\n          validation: (data: any) => Validation.required(data),\n          options: async (_: any, filter = '', page=1, limit=10) => \n            await this.prescriptionService.loadDrugs(filter, page, limit),\n          onload: () => this.activeField = '',\n          config: {\n            showKeyboard: true,\n            hiddenFooterBtns: [\"Back\"],\n            footerBtns: [\n              {\n                name: 'Predefined Malaria Drugs',\n                color: 'primary',\n                size: 'large',\n                visible: false,\n                slot: 'end',\n                onClick: async () => {\n                  if(!this.hasMalaria && !(await alertConfirmation('Patient has no malaria. Do you still want to prescribe anti malaria drugs?'))) {\n                    return;\n                  }\n                  this.activeField = 'malaria_drugs'\n                  this.showMalariaDrugs = true\n                }\n              },\n            ]\n          }\n        },\n        {\n          id: 'drugs_details',\n          helpText: 'Complete prescribed drug details',\n          type: FieldType.TT_PRESCRIPTION_INPUT,\n          validation: (data: any) => Validation.required(data),\n          options: (f: any) => [...f.drugs, ...(f.malaria_drugs ? [f.malaria_drugs] : [])],\n          beforeNext: (data: Option[]) => {\n            if(isEmpty(data)) return false\n            if(this.isOrderComplete(data)) return true\n            toastWarning('Please complete all fields')\n            return false\n          }\n        },\n        {\n          id: 'summary',\n          helpText: 'Summary',\n          type: FieldType.TT_TABLE_VIEWER,\n          options: (f: any) => {\n            const drugs: Option[] = f['drugs_details']\n            const columns = [ 'Drug Name','Frequency','Dosage','Duration'];\n            const rows: any[] = drugs.map(drug => [\n              drug.other.name,\n              drug.other.frequency,\n              `${drug.other.dosage} ${drug.other.units}`,\n              `${drug.other.duration} days`\n            ])\n            return [\n              {\n                label: '',\n                value: '',\n                other: { columns, rows},\n              },\n            ];\n          },\n\n        }\n      ]\n    }\n  }\n})\n","import { render } from \"./Prescription.vue?vue&type=template&id=42959759&ts=true\"\nimport script from \"./Prescription.vue?vue&type=script&lang=ts\"\nexport * from \"./Prescription.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/andrew-dev/Projects/HIS-Core/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { DrugOrderInterface } from \"@/interfaces/DrugOrder\";\nimport { Service } from \"./service\";\n\nexport class DrugOrderService extends Service {\n    constructor() {\n        super()\n    }\n\n    static create(orders: DrugOrderInterface) {\n        return this.postJson('drug_orders', orders)\n    }\n\n    static updateDispensationOrders(orders: any) {\n        return this.postJson('dispensations', {\n            'program_id': this.getProgramID(),\n            dispensations: orders.map((order: any) => ({\n                'date': this.getSessionDate(),\n                'drug_order_id': order['order_id'],\n                'quantity': order['quantity']\n            }))\n        })\n    }\n\n    static getDrugOrderHistory(patientID: number) {\n        return this.getJson('drug_orders', { 'patient_id': patientID })\n    }\n\n    static getDrugOrders(patientID: number) {\n        return this.getJson('drug_orders', {\n            'patient_id': patientID,\n            'date': this.getSessionDate(),\n            'program_id': this.getProgramID()\n        })\n    }\n\n    static getAllDrugOrders(patientID: number, pageSize=1000) {\n        return this.getJson('drug_orders', {\n            'patient_id': patientID,\n            'program_id': Service.getProgramID(),\n            'page_size': pageSize\n        })\n    }\n\n    static getLastDrugsReceived(patientID: number) {\n        return this.getJson(`patients/${patientID}/last_drugs_received`, {\n            'date': this.getSessionDate(),\n            'program_id': this.getProgramID()\n        })\n    }\n\n    static getDrugDosages(patientID: number, drugID: number, date=this.getSessionDate()) {\n        const params = { 'drug_id': drugID, 'date': date }\n        return this.getJson(`programs/${this.getProgramID()}/patients/${patientID}/drug_doses`, params)\n    }\n\n    static getOrderByPatient(patientId: number, params: any) {\n        return this.getJson('/drug_orders', {\n            'patient_id': patientId,\n            'program_id': this.getProgramID(),\n            ...params\n        })\n    }\n\n}","import { infoActionSheet, optionsActionSheet } from \"@/utils/ActionSheets\";\nimport { GuideLineInterface } from \"@/utils/GuidelineEngine\";\nimport HisDate from '@/utils/Date'\n\nexport enum FlowState {\n    SET_PROVIDER = 'SET_PROVIDER',\n    CHANGE_SESSION_DATE = 'change_session_date',\n    GO_TO_PATIENT_DASHBOARD = 'go_to_patient_dashboard',\n    CHANGE_PATIENT_OUTCOME = 'change_outcome',\n    CONTINUE = 'continue',\n    EXIT = 'exit'\n}\nconst dformat = (d: string) => HisDate.toStandardHisDisplayFormat(d)\n\nexport const ENCOUNTER_GUIDELINES: Record<string, GuideLineInterface> = {\n    \"Warn if attempting to create new encounters for a deceased patient\": {\n        priority: 1,\n        actions: {\n            alert: async ({ outcomeStartDate }: any) => {\n                const action = await infoActionSheet(\n                    'Data Integrity Issue Found',\n                    `Patient died on ${dformat(outcomeStartDate)}`,\n                    'Proceeding with this outcome might affect accuracy of some reports',\n                    [\n                        { name: 'Cancel', slot: 'end', color: 'primary'},\n                        { name: 'Change outcome', slot: 'end', color: 'primary'},\n                        { name: 'Continue Anyway', slot: 'end', color: 'danger'}\n                    ]\n                )\n                return action === 'Cancel'\n                    ? FlowState.GO_TO_PATIENT_DASHBOARD\n                    : action === 'Change outcome'\n                    ? FlowState.CHANGE_PATIENT_OUTCOME\n                    : FlowState.CONTINUE\n            }\n        },\n        conditions: {\n            outcome(outcome: string) {\n                return outcome === 'Patient died'\n            },\n            outcomeStartDate(startDate: string, { sessionDate }: any) {\n                return sessionDate >= startDate\n            }\n        }\n    },\n    \"A patient's date of birth must not be less than Session Date\": {\n        priority: 2,\n        actions: {\n            alert: async ({ birthDate, sessionDate}: any) => {\n                const action = await infoActionSheet(\n                    'Data integrity issue found', '',\n                    `Session date ${dformat(sessionDate)} is less than birth date of ${dformat(birthDate)}`,\n                    [\n                        { name: 'Cancel', slot: 'end', color: 'danger'},\n                        { name: 'Change session date', slot: 'end', color: 'success'}\n                    ]\n                )\n                return action === 'Change session date'\n                    ? FlowState.CHANGE_SESSION_DATE\n                    : FlowState.GO_TO_PATIENT_DASHBOARD\n            }\n        },\n        conditions: {\n            birthDate(birthDate: string, { sessionDate }: any) {\n                return sessionDate < birthDate\n            }\n        }\n    },\n    \"Select Encounter provider when in back data entry\": {\n        priority: 3,\n        actions: {\n            selection: async ({ providers, encounterName, sessionDate, apiDate }: any) => {\n                const modal = await optionsActionSheet(\n                    `Please select a provider for ${encounterName}`,\n                    `BDE: ${dformat(sessionDate)} | Current: ${dformat(apiDate)}`,\n                    providers,\n                    [\n                        { name: 'Cancel', color: 'danger', slot: 'start', role: 'default'},\n                        { name: 'Confirm', slot: 'end', role: 'action' }\n                    ]\n                )\n                return modal.action === 'Cancel' \n                    ? { value: -1, flowState: FlowState.GO_TO_PATIENT_DASHBOARD }\n                    : { value: modal.selection, flowState: FlowState.SET_PROVIDER }\n            }\n        },\n        conditions: {\n            isBdeMode(isBDE: boolean) {\n                return isBDE\n            }\n        }\n    }\n}","\nimport TouchScreenForm from \"@/components/Forms/TouchScreenForm.vue\";\nimport { defineComponent, PropType } from \"vue\";\nimport { Field } from \"./FieldInterface\";\n\nexport default defineComponent({\n    name: \"HisStandardForm\",\n    components: { TouchScreenForm },\n    emits: [\n        'onFinish',\n        'onIndex'\n    ],\n    data: () => ({\n        formType: 'touch-screen-form' as string\n    }),\n    props: {\n        onFinishAction: {\n            type: Function\n        },\n        skipSummary: {\n            type: Boolean,\n            default: false\n        },\n        activeField: {\n            type: String\n        },\n        fields: {\n            type: Object as PropType<Field[]>,\n            required: true\n        },\n        cancelDestinationPath: {\n            type: String,\n            required: false,\n        }\n    },\n    methods: {\n        onFinish(formData: any, computedData: any) {\n            this.$emit('onFinish', formData, computedData)\n        },\n        onIndex(i: number) {\n            this.$emit('onIndex', i)\n        }\n    }\n})\n","import script from \"./EncounterMixin.vue?vue&type=script&lang=ts\"\nexport * from \"./EncounterMixin.vue?vue&type=script&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { Service } from \"./service\";\n\nexport class DrugService extends Service {\n    constructor() {\n        super()\n    }\n\n    \n    static getDrugs(params={} as Record<string, string | number>) {\n        return super.getJson('/drugs', params)\n    }\n}","import { resolveDynamicComponent as _resolveDynamicComponent, openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return (_openBlock(), _createBlock(_resolveDynamicComponent(_ctx.formType), {\n    fields: _ctx.fields,\n    skipSummary: _ctx.skipSummary,\n    activeField: _ctx.activeField,\n    cancelDestinationPath: _ctx.cancelDestinationPath,\n    onOnFinish: _ctx.onFinish,\n    onFinish: _ctx.onFinishAction,\n    onOnIndex: _ctx.onIndex\n  }, null, 8, [\"fields\", \"skipSummary\", \"activeField\", \"cancelDestinationPath\", \"onOnFinish\", \"onFinish\", \"onOnIndex\"]))\n}","import { render } from \"./HisStandardForm.vue?vue&type=template&id=6daa0375&ts=true\"\nimport script from \"./HisStandardForm.vue?vue&type=script&lang=ts\"\nexport * from \"./HisStandardForm.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/andrew-dev/Projects/HIS-Core/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","'use strict';\nvar $ = require('../internals/export');\nvar $find = require('../internals/array-iteration').find;\nvar addToUnscopables = require('../internals/add-to-unscopables');\nvar arrayMethodUsesToLength = require('../internals/array-method-uses-to-length');\n\nvar FIND = 'find';\nvar SKIPS_HOLES = true;\n\nvar USES_TO_LENGTH = arrayMethodUsesToLength(FIND);\n\n// Shouldn't skip holes\nif (FIND in []) Array(1)[FIND](function () { SKIPS_HOLES = false; });\n\n// `Array.prototype.find` method\n// https://tc39.github.io/ecma262/#sec-array.prototype.find\n$({ target: 'Array', proto: true, forced: SKIPS_HOLES || !USES_TO_LENGTH }, {\n  find: function find(callbackfn /* , that = undefined */) {\n    return $find(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n\n// https://tc39.github.io/ecma262/#sec-array.prototype-@@unscopables\naddToUnscopables(FIND);\n","import { Option } from \"@/components/Forms/FieldInterface\";\nimport { ConceptName } from \"@/interfaces/conceptName\";\nimport { DrugInterface } from \"@/interfaces/Drug\";\nimport { AppEncounterService } from \"@/services/app_encounter_service\"\nimport { DrugOrderService } from \"@/services/drug_order_service\";\nimport { OrderService } from \"@/services/order_service\";\nimport { DrugService } from '../../../services/drug_service';\n\nexport const DRUG_FREQUENCIES: Array<{label: string; code: string; value: number; [x: string]: any}> = [\n  { label : \"ONCE A DAY (OD)\", code : \"OD\", value : 1 },\n  { label : \"TWICE A DAY (BD)\", code : \"BD\", value : 2 },\n  { label : \"THREE TIMES A DAY (TDS)\", code : \"TDS\", value : 3 },\n  { label : \"FOUR TIMES A DAY (QID)\", code : \"QID\", value : 4 },\n  { label : \"FIVE TIMES A DAY (5X/D)\", code : \"5X/D\", value : 5 },\n  { label : \"SIX TIMES A DAY (Q4HRS)\", code : \"Q4HRS\", value : 6 },\n  { label : \"IN THE MORNING (QAM)\", code : \"QAM\", value : 1 },\n  { label : \"ONCE A DAY AT NOON (QNOON)\", code : \"QNOON\", value : 1 },\n  { label : \"IN THE EVENING (QPM)\", code : \"QPM\", value : 1 },\n  { label : \"ONCE A DAY AT NIGHT (QHS)\", code : \"QHS\", value : 1 },\n  { label : \"EVERY OTHER DAY (QOD)\", code : \"QOD\", value : 0.5 },\n  { label : \"ONCE A WEEK (QWK)\", code : \"QWK\", value : 0.14 },\n  { label : \"ONCE A MONTH\", code : \"ONCE A MONTH\", value : 0.03 },\n  { label : \"TWICE A MONTH\", code : \"TWICE A MONTH\", value : 0.071 }\n]\n\nexport const ANTI_MALARIA_DRUGS = [\n  {\n    'drug_id': 236,\n    'duration': 3,\n    'tabs': 6,\n    'name': \"Lumefantrine + Arthemether 1 x 6\",\n    'dose_strength': 1.0,\n    'units': \"tabs\",\n    'frequency': 2\n  },\n  {\n    'drug_id': 237,\n    'duration': 3,\n    'tabs': 12,\n    'name': \"Lumefantrine + Arthemether 2 x 6\",\n    'dose_strength': 2.0,\n    'units': \"tabs\",\n    'frequency': 2\n  },\n  {\n    'drug_id': 238,\n    'duration': 3,\n    'tabs': 18,\n    'name': \"Lumefantrine + Arthemether 3 x 6\",\n    'dose_strength': 3.0,\n    'units': \"tabs\",\n    'frequency': 2\n  },\n  {\n    'drug_id': 239,\n    'duration': 3,\n    'tabs': 24,\n    'name': \"Lumefantrine + Arthemether 4 x 6\",\n    'dose_strength': 4.0,\n    'units': \"tabs\",\n    'frequency': 2\n  }\n];\n\nexport class DrugPrescriptionService extends AppEncounterService {\n  constructor(patientID: number, providerID: number) {\n    super(patientID, 25, providerID) \n  }\n\n  async loadDrugs(filter = '', page=1, limit=10): Promise<Option[]> {\n    const drugs: ConceptName[] = await DrugService.getDrugs({ \n      \"name\": filter, \n      \"page\": page,\n      \"page_size\": limit \n    })\n    return drugs.map(drug => ({\n      label: drug.name, value: drug.name, other: drug\n    }))\n  }\n\n  async hasMalaria() {\n    const malariaTestResult = await OrderService.getLatestMalariaTestResult(this.patientID)\n    if(malariaTestResult === \"No\") {\n      const primaryDiagnosis: any[] = await AppEncounterService.getAllValueCoded(this.patientID, 'Primary diagnosis')\n      if(primaryDiagnosis.includes('Malaria')) return true\n      const secondaryDiagnosis: any[] = await AppEncounterService.getAllValueCoded(this.patientID, 'Secondary diagnosis')\n      if(secondaryDiagnosis.includes('Malaria')) return true\n      return false\n    }\n    return malariaTestResult === \"Positive\"\n  }\n\n  createDrugOrder(drugOrders: Array<DrugInterface>){\n    return DrugOrderService.create({\n      'encounter_id': this.encounterID,\n      'drug_orders': drugOrders\n    })\n  }\n}","/**\n * Compares patient facts against a predefined guideline Object.\n*/\nexport interface DescriptionInterface {\n    color?: 'primary' | 'secondary' | 'danger' | 'warning';\n    info: Function;\n    text?: string;\n    show: 'onChecked' | 'always';\n}\n\nexport interface GuideLineInterface {\n    title?: string;\n    concept?: string;\n    priority: number;\n    conditions: Record<string, Function>;\n    actions?: Record<string, any>; //TODO: should <key, Function>\n    data?: Record<string, any>;\n    description?: DescriptionInterface;\n    target?: string;\n    targetEvent?: string;\n}\n\n/**\n * Match the facts with guidelines\n * @param facts \n * @param conditions \n * @returns \n */\nfunction isCondition(facts: Record<string, any>, conditions: Record<string, Function>): boolean {\n    const state = [] \n    const ignored = [-1, '', null, undefined]\n\n    for(const prop in conditions) {\n        if (!(prop in facts)) \n            continue\n        \n        const value = facts[prop]\n        if (ignored.includes(value)) {\n            state.push(false)\n            continue\n        }\n\n        state.push(conditions[prop](value, facts))\n    }\n    return state.every(Boolean)\n}\n\n/**\n * Sort guidelines in the order of importance/relevance\n * @param findings \n * @returns \n */\nfunction sortByRelevance(findings: Array<GuideLineInterface>) {\n    return findings.sort((a, b) => a.priority < b.priority ? -1 : 1)\n}\n\n/**\n * Check the guideline for matching facts and return matching object \n * @param facts: key value pair for used for searching in guidelines\n * @param guidelines: A dictionary containing fixed rules/validations that conforms to GuideLineInterface\n * @param target: Used for matching a target defined in a guidlines before executing conditions\n * @param targetEvent: used for matching a target event in a guideline before executing conditions\n * @returns\n */\nexport function matchToGuidelines(\n    facts: Record<string, any>, \n    guidelines: Record<string, GuideLineInterface>,\n    target='', \n    targetEvent=''): Array<GuideLineInterface> {\n\n    const matches = []\n    for(const guidelineIndex in guidelines) {\n        const data: GuideLineInterface = guidelines[guidelineIndex]\n \n        const targetValidations = [\n            (data.target && target && data.target != target),\n            (data.targetEvent && targetEvent \n                && data.targetEvent != targetEvent)\n        ]\n\n        if (targetValidations.some(Boolean)) {\n            continue\n        }\n\n        if (isCondition(facts, data.conditions)) {\n            data.title = guidelineIndex\n            if (data.description) {\n                data.description.text = data.description.info(facts)\n            }\n            matches.push(data)\n        }\n    }\n    return sortByRelevance(matches)\n}\n"],"sourceRoot":""}