{"version":3,"sources":["webpack:///./src/apps/EMC/views/reports/moh/SurvivalAnalysis.vue?70c5","webpack:///./src/apps/EMC/views/reports/moh/SurvivalAnalysis.vue","webpack:///./src/apps/EMC/views/reports/moh/SurvivalAnalysis.vue?7e58","webpack:///./src/apps/EMC/Components/tables/BaseReportTable.vue?0520","webpack:///./src/apps/EMC/Components/tables/BaseReportTable.vue","webpack:///./src/apps/EMC/Components/tables/BaseReportTable.vue?eb42"],"names":["render","_ctx","_cache","$props","$setup","$data","$options","_component_base_report_table","_resolveComponent","_openBlock","_createBlock","title","columns","rows","quarter","useQuarterFilter","customFilters","onCustomFilter","fetchData","onRegenerate","defineComponent","name","components","BaseReportTable","setup","ref","ageGroup","path","label","initialSort","initialSortOrder","filters","regenerate","loader","show","value","report","SurvivalAnalysisReportService","setRegenerate","setQuarter","setAgeGroup","getSurvivalAnalysis","data","rs","Object","keys","filter","d","isEmpty","forEach","outcomes","interval","values","alive","get","died","defaulted","stopped","transferred","unknown","push","subgroup","totalReg","hide","computed","id","type","options","AGE_GROUP","map","age","toString","__exports__","_hoisted_1","key","_hoisted_2","_hoisted_3","_hoisted_4","_component_ion_col","_component_ion_row","_component_ion_grid","_component_ion_card_header","_component_data_table","_component_ion_card_content","_component_ion_card","_component_Layout","default","_withCtx","_createVNode","class","style","size","src","reportIcon","height","subtitle","width","_","innerHTML","_createCommentVNode","useDateRangeFilter","_toDisplayString","period","useDateFilter","dayjs","date","format","totalClients","asyncRows","actionBtns","rowActionButtons","color","onDrilldown","DataTable","IonCard","IonCardHeader","IonCardContent","Layout","IonGrid","IonRow","IonCol","props","String","Number","Array","Function","actionButtons","canExportCsv","Boolean","canExportPDF","showRefreshButton","emits","emit","filename","PatientReportService","getLocationName","btns","action","_a","startDate","split","endDate","qtrName","year","ArtReportService","buildQtrObj","parseInt","start","end","exportToCSV","convertToCsv","f","getReportQuarters","q"],"mappings":"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","file":"js/chunk-1696547a.67e9da9d.js","sourcesContent":["import { resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_base_report_table = _resolveComponent(\"base-report-table\")\n\n  return (_openBlock(), _createBlock(_component_base_report_table, {\n    title: \"MoH Survival Analysis Report\",\n    \"report-icon\": \"reports/refill.png\",\n    columns: _ctx.columns,\n    rows: _ctx.rows,\n    quarter: _ctx.quarter,\n    useQuarterFilter: \"\",\n    \"custom-filters\": _ctx.customFilters,\n    onCustomFilter: _ctx.fetchData,\n    onRegenerate: _ctx.onRegenerate\n  }, null, 8, [\"columns\", \"rows\", \"quarter\", \"custom-filters\", \"onCustomFilter\", \"onRegenerate\"]))\n}","\nimport { computed, defineComponent, ref } from \"vue\";\nimport { loader } from \"@/utils/loader\";\nimport BaseReportTable from \"@/apps/EMC/Components/tables/BaseReportTable.vue\";\nimport { CustomFilterInterface, TableColumnInterface } from \"@/apps/EMC/Components/datatable\";\nimport { AGE_GROUP, SurvivalAnalysisReportService } from \"@/apps/ART/services/reports/survival_analysis_report_service\";\nimport { get, isEmpty } from \"lodash\";\n\nexport default defineComponent({\n  name: \"SurvivalAnalysis\",\n  components: { BaseReportTable },\n  setup() {\n    const quarter = ref(\"\")\n    const ageGroup = ref(\"\")\n    const rows = ref<any[]>([]);\n    const columns: TableColumnInterface[] = [\n      { path: \"quarter\", label: \"Reg Cohort\", initialSort: true, initialSortOrder: 'asc' },\n      { path: \"interval\", label: \"Interval (Months)\" },\n      { path: \"subgroup\", label: \"Sub group\" },\n      { path: \"totalReg\", label: \"Total Reg (database)\" },\n      { path: \"totalConfirmed\", label: \"Total Reg (Confirmed)\" },\n      { path: \"alive\", label: \"Alive\" },\n      { path: \"died\", label: \"Died\" },\n      { path: \"defaulted\", label: \"Defaulted\" },\n      { path: \"stopped\", label: \"Stopped\" },\n      { path: 'transferred', label: \"Transferred out\" },\n      { path: \"unknown\", label:\"Unknown\" }\n    ]\n\n    const fetchData =  async (filters: Record<string, any>, regenerate=false) => {\n      await loader.show()\n      quarter.value = filters.quarter\n      ageGroup.value = filters.ageGroup\n      const report = new SurvivalAnalysisReportService()\n      report.setRegenerate(regenerate)\n      report.setQuarter(filters.quarter)\n      report.setAgeGroup(filters.ageGroup)\n      const data: any = await report.getSurvivalAnalysis()\n      const rs: any[] = []\n      Object.keys(data)\n        .filter((d: string) => !isEmpty(data[d]))\n        .forEach((quarter: string) => {\n          const outcomes: Record<string, any> = data[quarter]\n          const interval = Object.keys(Object.values(outcomes)[0])[0];\n          const alive = get(outcomes, `On antiretrovirals.${interval}`, 0);\n          const died = get(outcomes, `Patient died.${interval}`, 0);\n          const defaulted = get(outcomes, `Defaulted.${interval}`, 0);\n          const stopped = get(outcomes, `Treatment stopped.${interval}`, 0);\n          const transferred = get(outcomes, `Patient transferred out.${interval}`, 0);\n          const unknown = get(outcomes, `N/A.${interval}`, 0);\n          rs.push({\n            quarter,\n            interval,\n            alive,\n            died,\n            defaulted,\n            stopped,\n            transferred,\n            unknown,\n            subgroup: ageGroup.value,\n            totalReg: alive + died + defaulted + stopped + transferred + unknown,\n          })\n        })\n      rows.value = rs\n      await loader.hide();\n    }\n\n    const customFilters = computed<CustomFilterInterface[]>(() => [{\n      id: \"ageGroup\",\n      type: \"select\",\n      label: \"Sub Group:\",\n      value: ageGroup.value,\n      options: Object.values(AGE_GROUP).map(age => age.toString()),\n    }])\n\n    const onRegenerate = async () => {\n      if(quarter.value && ageGroup.value) {\n        fetchData({quarter: quarter.value, ageGroup: ageGroup.value}, true)\n      }\n    }\n\n    return {\n      rows,\n      columns,\n      quarter,\n      customFilters,\n      fetchData,\n      onRegenerate,\n    }\n  }\n})\n","import { render } from \"./SurvivalAnalysis.vue?vue&type=template&id=477dee04&ts=true\"\nimport script from \"./SurvivalAnalysis.vue?vue&type=script&lang=ts\"\nexport * from \"./SurvivalAnalysis.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/daniel/local-repos/HIS-Core/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { createVNode as _createVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString } from \"vue\"\n\nconst _hoisted_1 = { key: 1 }\nconst _hoisted_2 = { key: 2 }\nconst _hoisted_3 = { key: 3 }\nconst _hoisted_4 = { key: 4 }\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_ion_col = _resolveComponent(\"ion-col\")\n  const _component_ion_row = _resolveComponent(\"ion-row\")\n  const _component_ion_grid = _resolveComponent(\"ion-grid\")\n  const _component_ion_card_header = _resolveComponent(\"ion-card-header\")\n  const _component_data_table = _resolveComponent(\"data-table\")\n  const _component_ion_card_content = _resolveComponent(\"ion-card-content\")\n  const _component_ion_card = _resolveComponent(\"ion-card\")\n  const _component_Layout = _resolveComponent(\"Layout\")\n\n  return (_openBlock(), _createBlock(_component_Layout, null, {\n    default: _withCtx(() => [\n      _createVNode(_component_ion_card, {\n        class: \"his-card\",\n        style: {\"padding\":\"0 !important\"}\n      }, {\n        default: _withCtx(() => [\n          _createVNode(_component_ion_card_header, { style: {\"border-bottom\":\"1px solid #c2c2c2\",\"font-weight\":\"500\",\"color\":\"#000\"} }, {\n            default: _withCtx(() => [\n              _createVNode(_component_ion_grid, null, {\n                default: _withCtx(() => [\n                  _createVNode(_component_ion_row, null, {\n                    default: _withCtx(() => [\n                      _createVNode(_component_ion_col, {\n                        size: \"1\",\n                        class: \"ion-padding ion-margin-end\"\n                      }, {\n                        default: _withCtx(() => [\n                          _createVNode(\"img\", {\n                            src: `assets/images/${_ctx.reportIcon}`,\n                            style: {height: _ctx.subtitle ? 7 : 5 + 'rem', width: _ctx.subtitle ? 7 : 5 + 'rem'}\n                          }, null, 12, [\"src\"])\n                        ]),\n                        _: 1\n                      }),\n                      _createVNode(_component_ion_col, null, {\n                        default: _withCtx(() => [\n                          _createVNode(\"h1\", { innerHTML: _ctx.title }, null, 8, [\"innerHTML\"]),\n                          (_ctx.subtitle)\n                            ? (_openBlock(), _createBlock(\"h3\", {\n                                key: 0,\n                                innerHTML: _ctx.subtitle,\n                                style: {\"color\":\"#818181\"}\n                              }, null, 8, [\"innerHTML\"]))\n                            : _createCommentVNode(\"\", true),\n                          (_ctx.useDateRangeFilter)\n                            ? (_openBlock(), _createBlock(\"h5\", _hoisted_1, \" Period: \" + _toDisplayString(_ctx.period), 1))\n                            : (_ctx.useQuarterFilter)\n                              ? (_openBlock(), _createBlock(\"h5\", _hoisted_2, \" Quarter: \" + _toDisplayString(_ctx.quarter), 1))\n                              : (_ctx.useDateFilter)\n                                ? (_openBlock(), _createBlock(\"h5\", _hoisted_3, \"Date: \" + _toDisplayString(_ctx.dayjs(_ctx.date).format(\"DD/MMM/YYYY\")), 1))\n                                : _createCommentVNode(\"\", true),\n                          (_ctx.totalClients)\n                            ? (_openBlock(), _createBlock(\"h5\", _hoisted_4, \"Total Clients: \" + _toDisplayString(_ctx.totalClients), 1))\n                            : _createCommentVNode(\"\", true)\n                        ]),\n                        _: 1\n                      })\n                    ]),\n                    _: 1\n                  })\n                ]),\n                _: 1\n              })\n            ]),\n            _: 1\n          }),\n          _createVNode(_component_ion_card_content, {\n            class: \"ion-no-padding\",\n            style: {\"min-height\":\"45vh\"}\n          }, {\n            default: _withCtx(() => [\n              _createVNode(_component_data_table, {\n                rows: _ctx.rows,\n                \"async-rows\": _ctx.asyncRows,\n                columns: _ctx.columns,\n                \"actions-buttons\": _ctx.actionBtns,\n                \"row-actions-buttons\": _ctx.rowActionButtons,\n                \"custom-filters\": _ctx.filters,\n                color: \"custom\",\n                onCustomFilter: _ctx.onCustomFilter,\n                onDrilldown: _ctx.onDrilldown\n              }, null, 8, [\"rows\", \"async-rows\", \"columns\", \"actions-buttons\", \"row-actions-buttons\", \"custom-filters\", \"onCustomFilter\", \"onDrilldown\"])\n            ]),\n            _: 1\n          })\n        ]),\n        _: 1\n      })\n    ]),\n    _: 1\n  }))\n}","\nimport { computed, defineComponent, PropType } from \"vue\";\nimport { IonCard, IonCardContent, IonCardHeader, IonGrid, IonRow, IonCol } from \"@ionic/vue\";\nimport { PatientReportService } from \"@/apps/ART/services/reports/patient_report_service\";\nimport dayjs from \"dayjs\";\nimport Layout from \"@/apps/EMC/Components/Layout.vue\";\nimport DataTable, { \n  ActionButtonInterface, \n  TableColumnInterface, \n  RowActionButtonInterface, \n  CustomFilterInterface, \n  convertToCsv, \n  exportToCSV\n} from \"@/apps/EMC/Components/datatable\";\nimport { ArtReportService } from \"@/apps/ART/services/reports/art_report_service\";\n\nexport default defineComponent({\n  name: \"BaseReportTable\",\n  components: {\n    DataTable,\n    IonCard,\n    IonCardHeader,\n    IonCardContent,\n    Layout,\n    IonGrid,\n    IonRow,\n    IonCol,\n  },\n  props: {\n    title: {\n      type: String,\n      default: \"Report\",\n    },\n    subtitle: {\n      type: String,\n      default: \"\",\n    },\n    period: {\n      type: String,\n      default: \"\",\n    },\n    date: {\n      type: String,\n      default: \"\",\n    },\n    quarter: {\n      type: String,\n      default: \"\",\n    },\n    totalClients: {\n      type: Number,\n      default: 0,\n    },\n    reportIcon: {\n      type: String,\n      default: \"reports/report.png\",\n    },\n    columns: {\n      type: Array as PropType<TableColumnInterface[]>,\n      default: () => [],\n    },\n    rows: {\n      type: Array as PropType<any[]>,\n      default: () => [],\n    },\n    asyncRows: {\n      type: Function as PropType<() => Promise<any[]>>,\n    },\n    actionButtons: {\n      type: Array as PropType<ActionButtonInterface[]>,\n      default: () => [],\n    },\n    rowActionButtons: {\n      type: Array as PropType<RowActionButtonInterface[]>,\n      default: () => [],\n    },\n    canExportCsv: {\n      type: Boolean,\n      default: true,\n    },\n    canExportPDF: {\n      type: Boolean,\n      default: true,\n    },\n    showRefreshButton: {\n      type: Boolean,\n      default: true,\n    },\n    useDateRangeFilter: {\n      type: Boolean,\n      default: false,\n    },\n    useQuarterFilter: {\n      type: Boolean,\n      default: false,\n    },\n    useDateFilter: {\n      type: Boolean,\n      default: false,\n    },\n    customFilters: {\n      type: Array as PropType<CustomFilterInterface[]>,\n      default: () => [],\n    },\n  },\n  emits: [\"regenerate\", \"customFilter\", \"drilldown\"],\n  setup(props, { emit }) {\n    const filename = computed(() => {\n      return `${PatientReportService.getLocationName()} ${props.title} ${ props.period ? props.period : props.date }`;\n    })\n\n    const actionBtns = computed<ActionButtonInterface[]>(() => {\n      const btns = [...props.actionButtons];\n\n      if(props.showRefreshButton){\n        btns.push({ label: \"Refresh/Rebuild\", color: 'success', action: () => emit(\"regenerate\") });\n      }\n\n      if (props.canExportCsv) {\n        btns.push({\n          label: \"CSV\",\n          color: \"primary\",\n          action: async (_a, rows) => {\n            const period = {} as any;\n            if (props.useDateRangeFilter) {\n              period.startDate = props.period.split(\" - \")[0] || \"\";\n              period.endDate = props.period.split(\" - \")[1] || \"\";\n            } \n            if (props.useQuarterFilter) {\n              const [qtrName, year] = props.quarter.split(\" \");\n              const {start, end } = ArtReportService.buildQtrObj(qtrName, parseInt(year));\n              period.startDate = start;\n              period.endDate = end;\n            }\n            exportToCSV(\n              convertToCsv(\n                props.columns, \n                rows, \n                period,\n              ), \n              filename.value\n            );\n          }\n        })\n      }\n      return btns;\n    })\n\n    const filters = computed<CustomFilterInterface[]>(() => {\n      const f = [...props.customFilters];\n      if(props.useDateRangeFilter) {\n        f.push({\n          id: \"dateRange\",\n          label: \"Date Range\",\n          type: \"dateRange\",\n          value: {\n            startDate: props.period.split(\"-\")[0],\n            endDate: props.period.split(\"-\")[1],\n          },\n        })\n      } else if(props.useQuarterFilter) {\n        f.push({\n          id: \"quarter\",\n          label: \"Quarter:\",\n          type: \"select\",\n          value: props.quarter,\n          options: ArtReportService.getReportQuarters().map(q => q.name),\n        })\n      } else if (props.useDateFilter) {\n        f.push({\n          id: \"date\",\n          label: \"Date\",\n          type: \"date\",\n          value: props.date,\n        })\n      }\n      return f;\n    })\n\n    const onCustomFilter = (filters: Record<string, any>) => {\n      emit(\"customFilter\", filters);\n    }\n\n    const onDrilldown = (data: {column: TableColumnInterface; row: any}) => {\n      emit(\"drilldown\", data);\n    }\n\n    return {\n      actionBtns,\n      filters,\n      onCustomFilter,\n      onDrilldown,\n      dayjs,\n    }\n  }\n})\n","import { render } from \"./BaseReportTable.vue?vue&type=template&id=079d15e3&ts=true\"\nimport script from \"./BaseReportTable.vue?vue&type=script&lang=ts\"\nexport * from \"./BaseReportTable.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/daniel/local-repos/HIS-Core/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"sourceRoot":""}