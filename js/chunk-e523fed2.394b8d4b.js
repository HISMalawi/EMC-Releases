(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-e523fed2"],{b31c:function(t,e,a){"use strict";a.d(e,"a",(function(){return d}));var r,o=a("d4ec"),s=a("bee2"),n=a("262e"),i=a("2caf"),h=(a("99af"),a("e9c4"),a("d3b7"),a("b64b"),a("2ef0")),l=a("5969");(function(t){t["MOH_CACHE"]="mohCache"})(r||(r={}));var d=function(t){Object(n["a"])(a,t);var e=Object(i["a"])(a);function a(){var t;return Object(o["a"])(this,a),t=e.call(this),t.regenerate=!1,t}return Object(s["a"])(a,[{key:"cohortUrl",value:function(){return"programs/".concat(this.programID,"/reports/cohort")}},{key:"setRegenerate",value:function(t){this.regenerate=t}},{key:"getCohortDrillDown",value:function(t){return l["a"].getJson("cohort_report_drill_down",{id:t,date:this.date,program_id:this.programID})}},{key:"requestCohort",value:function(t){return l["a"].ajxGet(this.cohortUrl(),t)}},{key:"qaurterRequestParams",value:function(){return{name:this.quarter,regenerate:this.regenerate}}},{key:"datePeriodRequestParams",value:function(){return{name:"Cohort-".concat(this.startDate,"-").concat(this.endDate),start_date:this.startDate,end_date:this.endDate,regenerate:this.regenerate}}},{key:"getCachedCohortValues",value:function(){var t=sessionStorage.getItem(r.MOH_CACHE);if(t){var e=JSON.parse(t);if(e.start_date===this.startDate&&e.end_date===this.endDate||e.quarter===this.quarter)return e.data}}},{key:"cacheCohort",value:function(t){sessionStorage.setItem(r.MOH_CACHE,JSON.stringify({start_date:this.startDate,end_date:this.endDate,quarter:this.quarter,data:t}))}},{key:"validateIndicators",value:function(t,e){var a=this.getCachedCohortValues();if(a){var r=Object.keys(t).reduce((function(e,r){var o=Object(h["find"])(a,{name:r}),s=t[r],n=o?o.contents:null,i=s.param,l=s.check(parseInt(n),i);return l&&e.push(s.error(n,i)),e}),[]);return e(r)}return-1}}]),a}(l["a"])},cca6:function(t,e,a){"use strict";a.r(e);var r=a("7a23");function o(t,e,a,o,s,n){const i=Object(r["resolveComponent"])("report-template"),h=Object(r["resolveComponent"])("ion-page");return Object(r["openBlock"])(),Object(r["createBlock"])(h,null,{default:Object(r["withCtx"])(()=>[Object(r["createVNode"])(i,{title:t.title,period:t.period,rows:t.rows,fields:t.fields,columns:t.columns,reportPrefix:"PEPFAR",config:{showIndex:!0},validationErrors:t.errors,showValidationStatus:t.showStatus,headerInfoList:t.headerInfoList,onReportConfiguration:t.onPeriod},null,8,["title","period","rows","fields","columns","validationErrors","showValidationStatus","headerInfoList","onReportConfiguration"])]),_:1})}var s=a("44e3"),n=a("9a5e"),i=a("4ba2"),h=a("9ceb"),l=a("b31c"),d=a("ad8d"),c=Object(r["defineComponent"])({mixins:[s["a"]],components:{ReportTemplate:i["a"]},data:()=>({title:"TX Curr MMD Report",cohort:{},rows:[],totals:new Set,errors:[],showStatus:!1,columns:[[h["a"].thTxt("Age group"),h["a"].thTxt("Gender"),h["a"].thNum("# of clients on <3 months of ARVs"),h["a"].thNum("# of clients on 3 - 5 months of ARVs"),h["a"].thNum("# of clients on >= 6 months of ARVs")]],headerInfoList:[],mohCohort:{},canValidate:!1}),watch:{async canValidate(t){t&&await this.validateReport()}},created(){this.fields=this.getDateDurationFields()},methods:{async onPeriod(t,e){this.canValidate=!1,this.totals.clear(),this.errors=[],this.showStatus=!1,this.rows=[],this.report=new n["a"],this.mohCohort=new l["a"],this.mohCohort.setStartDate(e.start_date),this.mohCohort.setEndDate(e.end_date),this.report.setStartDate(e.start_date),this.report.setEndDate(e.end_date),this.period=this.report.getDateIntervalPeriod(),this.report.initArvRefillPeriod(!0),await this.setRows(),this.canValidate=!0,this.showStatus=!0,this.setHeaderInfoList()},getValues(t,e){const a=[],r=[],o=[];for(const s in t){const e=t[s],n=e.prescribed_days;this.totals.add(s),n<90&&a.push(s),n>=90&&n<=150&&r.push(s),n>150&&o.push(s)}return[this.drill(a,`# of clients on < 3 months of ARVs (${e})`),this.drill(r,`# of clients on 3 - 5 months of ARVs (${e})`),this.drill(o,`# of clients on  >= 6 months of ARVs (${e})`)]},async setRows(){let t=0,e=0;const a=[],r=[];for(const o in d["a"]){const s=d["a"][o];if("<1 year"===s)t=0,e=0;else if("90 plus years"===s)t=90,e=1e3;else{const[a,r]=s.split("-");t=parseInt(a),e=parseInt(r)}const n=await this.report.getTxCurrMMDReport(t,e);this.report.initArvRefillPeriod(!1),n?(r.push([h["a"].td(s),h["a"].td("Female"),...this.getValues(n["Female"],s+" Female")]),a.push([h["a"].td(s),h["a"].td("Male"),...this.getValues(n["Male"],s+" Male")])):(r.push([h["a"].td(s),h["a"].td("Female"),h["a"].td(0),h["a"].td(0),h["a"].td(0)]),a.push([h["a"].td(s),h["a"].td("Male"),h["a"].td(0),h["a"].td(0),h["a"].td(0)])),this.rows=[...r,...a]}},setHeaderInfoList(){this.headerInfoList=[{label:"Total clients",value:this.totals.size,other:{onclick:()=>this.runTableDrill(Array.from(this.totals),"Total Clients")}}]},validateReport(){const t={total_alive_and_on_art:{param:this.totals.size,check:(t,e)=>e>t,error:(t,e)=>`\n                        MoH cohort Alive and on ART clients <b>(${t})</b> is not\n                        matching with total TX MMD clients <b>(${e})</b>.\n                    `}},e=this.mohCohort.validateIndicators(t,t=>this.errors=t);-1===e&&(this.errors=["Report not validated. Run the MoH cohort report for similar reporting period and then run this report"])}}}),u=a("6b0d"),f=a.n(u);const p=f()(c,[["render",o]]);e["default"]=p}}]);
//# sourceMappingURL=chunk-e523fed2.394b8d4b.js.map