{"version":3,"sources":["webpack:///./src/components/DataViews/ViewPort.vue?34c9","webpack:///./src/components/DataViews/ViewPort.vue","webpack:///./src/components/DataViews/ViewPort.vue?6fc5","webpack:///./node_modules/eslint-loader/index.js","webpack:///./src/components/DataViews/ViewPort.vue?da42","webpack:///./node_modules/vue-loader-v16/dist/templateLoader.js","webpack:///./node_modules/cache-loader/dist/cjs.js","webpack:///./src/components/FormElements/HisRadiologyPicker.vue","webpack:///./src/components/FormElements/HisRadiologyPicker.vue?b7fe"],"names":["_withId","_withScopeId","render","_ctx","_cache","$props","$setup","$data","$options","_openBlock","_createBlock","id","class","showFull","_renderSlot","$slots","defineComponent","name","props","type","Boolean","default","__exports__","PatientRadiologyService","AppEncounterService","constructor","patientID","providerID","super","radiologyType","filter","ConceptService","getConceptSet","patientId","path","data","Service","getJson","error","patient","this","getRadiologyObs","getID","length","thirdpartyapps","getThirdpartyApps","url","app","isEmpty","savedObsData","accessionNumber","order","children","accession_number","orders","Promise","all","map","async","value_text","obs_id","patientData","getFullName","getAge","getBirthdate","getGender","getNationalID","getEncounterID","getDate","provider","getUserName","getUserID","getUserRoles","postJson","lastAccessionNumber","getAccesionNumber","observations","push","concept_id","getConceptName","child","value_coded","printService","PrintoutService","patientNationalId","patientName","urls","fullXrayOrder","HisDate","toStandardHisDisplayFormat","obs_datetime","batchPrintLbls","_pushScopeId","_hoisted_1","style","_popScopeId","_component_ion_text","_resolveComponent","_component_ion_label","_component_ion_chip","_component_ion_col","_component_ion_row","_component_ion_item","_component_ion_list","_component_ion_checkbox","_component_ion_grid","_component_view_port","_createVNode","showKeyboard","size","_Fragment","_renderList","checkedItems","item","index","key","color","onClick","$event","uncheck","_createTextVNode","_toDisplayString","label","_","overflowY","height","margin","listData","getSpecificRadiologyOrders","value","detail","ActiveCategory","activeCategoryItems","entry","isChecked","slot","modelValue","onIonChange","e","onselect","disabled","_createCommentVNode","components","IonCheckbox","IonText","IonChip","mixins","SelectMixin","radiologyOrdersList","methods","$emit","getRadiologyList","mapListToOptions","getChecked","option","event","$nextTick","opt","target","checked","onValue","ok","onValueUpdate","category","radiologyOrders","list","other","parent","forEach","group","computed","watch","clear","mounted","init","activated"],"mappings":"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","file":"js/TouchFormElement38.7a893a87.js","sourcesContent":["import { renderSlot as _renderSlot, createVNode as _createVNode, openBlock as _openBlock, createBlock as _createBlock, withScopeId as _withScopeId } from \"vue\"\nconst _withId = /*#__PURE__*/_withScopeId(\"data-v-7c293cad\")\n\nexport const render = /*#__PURE__*/_withId(function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return (_openBlock(), _createBlock(\"div\", {\n    id: \"view-port\",\n    class: !_ctx.showFull ? 'half': ''\n  }, [\n    _renderSlot(_ctx.$slots, \"default\")\n  ], 2))\n})","\nimport { defineComponent } from 'vue'\nexport default defineComponent({\n    name: 'ViewPort',\n    props: {\n        showFull: {\n            type: Boolean,\n            default: () => true\n        }\n    }\n})\n","import { render } from \"./ViewPort.vue?vue&type=template&id=7c293cad&scoped=true&ts=true\"\nimport script from \"./ViewPort.vue?vue&type=script&lang=ts\"\nexport * from \"./ViewPort.vue?vue&type=script&lang=ts\"\n\nimport \"./ViewPort.vue?vue&type=style&index=0&id=7c293cad&scoped=true&lang=css\"\n\nimport exportComponent from \"/home/andrew-dev/Projects/HIS-Core/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-7c293cad\"]])\n\nexport default __exports__","import { AppEncounterService } from \"@/services/app_encounter_service\"\nimport { ConceptService } from '@/services/concept_service';\nimport { PrintoutService } from \"@/services/printout_service\";\nimport { Service } from \"@/services/service\";\nimport { Patientservice } from \"@/services/patient_service\";\nimport { isEmpty } from \"lodash\";\nimport HisDate from \"@/utils/Date\";\n\nexport class PatientRadiologyService extends AppEncounterService {\n  constructor(patientID: number, providerID: number) {\n    super(patientID, 121, providerID) \n  }\n\n  static async getRadiologyList(radiologyType: string, filter = '') {\n    return ConceptService.getConceptSet(radiologyType, filter) \n  }\n\n  async getRadiologyObs(patientId: number) {\n    try {\n      const path = 'radiology/radiology_orders?patient_id='+patientId\n      const data = await Service.getJson(path)\n      return data\n    } catch (error) {\n      return 0\n    }\n  }\n\n  async showPreviousRadiolgy(patient: any): Promise<boolean> {\n    if ( (await this.getRadiologyObs(patient.getID())).length > 0 ) {\n      return true\n    }\n    return false\n  }\n\n  async getPreviousRadiologyExaminations(patient: any): Promise<any>{\n    const thirdpartyapps  =  await Service.getThirdpartyApps()\n    let url = '' \n    for (const app of thirdpartyapps) {\n      if(app.name == 'pacs') {\n        url = app.url\n      }\n    }\n    if (isEmpty(url)) {\n      url = `opd/encounters/radiology/${this.patientID}`\n    }\n    const data =  await this.getRadiologyObs(patient.getID())\n    if(!(data.length > 0)) { \n      return false;\n    } else {\n      return { data: data, url: url}\n    }\n  }\n\n  async submitToPacs(savedObsData: any, patient: any) {\n    let accessionNumber\n    for(const order of savedObsData) {\n      accessionNumber = order.children[0].accession_number\n    }\n    const orders = await Promise.all(savedObsData.map(async (order: any) => ({\n      \"main_value_text\": order.value_text,\n      \"obs_id\": order.obs_id,\n      \"sub_value_text\": order.children[0].value_text\n    })))\n    const patientData = {\n      \"patient_name\": patient.getFullName(),\n      \"patientAge\": patient.getAge(),\n      \"patientDOB\": patient.getBirthdate(),\n      \"patientGender\": patient.getGender(),\n      \"national_id\": patient.getNationalID(),\n      \"person_id\": patient.getID(),\n      \"encounter_id\": this.getEncounterID(),\n      \"date_created\": this.getDate(),\n      \"accession_number\": accessionNumber\n    }\n    const provider = {\n      \"username\": Service.getUserName(),\n      \"userID\": Service.getUserID(),\n      \"userRoles\": Service.getUserRoles(),\n    }\n    return Service.postJson(`radiology/radiology_orders`, {\n      'patient_details': patientData,\n      'physician_details': provider,\n      'radiology_orders': orders\n    }) \n  }\n\n  async getAccesionNumber() {\n    return (await Service.getJson(`sequences/next_accession_number`))['accession_number']\n  }\n\n  async obsObj(data: Array<any>) {\n    const lastAccessionNumber = await this.getAccesionNumber()\n    const observations = [] as Array<any>\n    for (const order of data) {\n      observations.push(\n        {\n          'concept_id': order.concept_id, \n          'value_text':  await ConceptService.getConceptName(order.child.concept_id),\n          child: {\n            'concept_id': order.child.concept_id,\n            'accession_number': lastAccessionNumber,\n            'value_text': await ConceptService.getConceptName(order.child.value_coded)\n          }\n        }\n      )\n    }\n    return observations\n  } \n\n  async printOrders(orders: any, patient: Patientservice) {\n    const printService = new PrintoutService()\n    const patientNationalId = patient.getNationalID()\n    const patientName = patient.getFullName()\n    const urls: string[] = [];\n    for(const order of orders) {\n      const fullXrayOrder = order.value_text +\": \"+ order.children[0].value_text\n      urls.push(`/radiology/barcode`\n        + `?accession_number=${order.children[0].accession_number}`\n        + `&patient_national_id=${patientNationalId}`\n        + `&patient_name=${patientName}`\n        + `&radio_order=${fullXrayOrder}`\n        + `&date_created=${HisDate.toStandardHisDisplayFormat(order.obs_datetime)}`\n      )\n    }\n\n    await printService.batchPrintLbls(urls, true)\n  }\n}","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./ViewPort.vue?vue&type=style&index=0&id=7c293cad&scoped=true&lang=css\"","import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createBlock as _createBlock, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, createCommentVNode as _createCommentVNode, withScopeId as _withScopeId, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\nconst _withId = /*#__PURE__*/_withScopeId(\"data-v-b17197ee\")\n\n_pushScopeId(\"data-v-b17197ee\")\nconst _hoisted_1 = { style: {} }\n_popScopeId()\n\nexport const render = /*#__PURE__*/_withId(function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_ion_text = _resolveComponent(\"ion-text\")\n  const _component_ion_label = _resolveComponent(\"ion-label\")\n  const _component_ion_chip = _resolveComponent(\"ion-chip\")\n  const _component_ion_col = _resolveComponent(\"ion-col\")\n  const _component_ion_row = _resolveComponent(\"ion-row\")\n  const _component_ion_item = _resolveComponent(\"ion-item\")\n  const _component_ion_list = _resolveComponent(\"ion-list\")\n  const _component_ion_checkbox = _resolveComponent(\"ion-checkbox\")\n  const _component_ion_grid = _resolveComponent(\"ion-grid\")\n  const _component_view_port = _resolveComponent(\"view-port\")\n\n  return (_openBlock(), _createBlock(\"div\", null, [\n    _createVNode(_component_view_port, {\n      showFull: !_ctx.showKeyboard,\n      style: {\"padding\":\"0\"}\n    }, {\n      default: _withId(() => [\n        _createVNode(_component_ion_grid, null, {\n          default: _withId(() => [\n            _createVNode(_component_ion_row, null, {\n              default: _withId(() => [\n                _createVNode(_component_ion_col, { size: \"12\" }, {\n                  default: _withId(() => [\n                    (_openBlock(true), _createBlock(_Fragment, null, _renderList(_ctx.checkedItems, (item, index) => {\n                      return (_openBlock(), _createBlock(\"span\", { key: index }, [\n                        _createVNode(_component_ion_chip, {\n                          color: \"danger\",\n                          onClick: $event => (_ctx.uncheck(item))\n                        }, {\n                          default: _withId(() => [\n                            _createVNode(_component_ion_label, null, {\n                              default: _withId(() => [\n                                _createVNode(_component_ion_text, { class: \"his-md-text\" }, {\n                                  default: _withId(() => [\n                                    _createTextVNode(_toDisplayString(item.label), 1 /* TEXT */)\n                                  ]),\n                                  _: 2\n                                }, 1024)\n                              ]),\n                              _: 2\n                            }, 1024)\n                          ]),\n                          _: 2\n                        }, 1032, [\"onClick\"])\n                      ]))\n                    }), 128 /* KEYED_FRAGMENT */))\n                  ]),\n                  _: 1\n                })\n              ]),\n              _: 1\n            }),\n            _createVNode(_component_ion_row, null, {\n              default: _withId(() => [\n                _createVNode(_component_ion_col, { size: \"4\" }, {\n                  default: _withId(() => [\n                    _createVNode(_component_ion_list, { style: {overflowY: 'auto', height:'80vh', margin: 0} }, {\n                      default: _withId(() => [\n                        (_openBlock(true), _createBlock(_Fragment, null, _renderList(_ctx.listData, (data, index) => {\n                          return (_openBlock(), _createBlock(_component_ion_item, {\n                            key: index,\n                            onClick: $event => (_ctx.getSpecificRadiologyOrders(data.value)),\n                            detail: true,\n                            color: _ctx.ActiveCategory === data.label ? 'lightblue':''\n                          }, {\n                            default: _withId(() => [\n                              _createVNode(_component_ion_label, null, {\n                                default: _withId(() => [\n                                  _createVNode(_component_ion_text, { class: \"his-md-text\" }, {\n                                    default: _withId(() => [\n                                      _createTextVNode(_toDisplayString(data.label), 1 /* TEXT */)\n                                    ]),\n                                    _: 2\n                                  }, 1024)\n                                ]),\n                                _: 2\n                              }, 1024)\n                            ]),\n                            _: 2\n                          }, 1032, [\"onClick\", \"color\"]))\n                        }), 128 /* KEYED_FRAGMENT */))\n                      ]),\n                      _: 1\n                    })\n                  ]),\n                  _: 1\n                }),\n                (_ctx.ActiveCategory)\n                  ? (_openBlock(), _createBlock(_component_ion_col, {\n                      key: 0,\n                      style: {overflowY: 'auto', height:'78vh'}\n                    }, {\n                      default: _withId(() => [\n                        _createVNode(\"div\", _hoisted_1, [\n                          _createVNode(_component_ion_list, { class: \"view-port-content\" }, {\n                            default: _withId(() => [\n                              (_openBlock(true), _createBlock(_Fragment, null, _renderList(_ctx.activeCategoryItems, (entry, index) => {\n                                return (_openBlock(), _createBlock(_component_ion_item, {\n                                  key: index,\n                                  color: entry.isChecked ? 'lightblue':''\n                                }, {\n                                  default: _withId(() => [\n                                    _createVNode(_component_ion_label, null, {\n                                      default: _withId(() => [\n                                        _createVNode(_component_ion_text, { class: \"his-md-text\" }, {\n                                          default: _withId(() => [\n                                            _createTextVNode(_toDisplayString(entry.label), 1 /* TEXT */)\n                                          ]),\n                                          _: 2\n                                        }, 1024)\n                                      ]),\n                                      _: 2\n                                    }, 1024),\n                                    _createVNode(_component_ion_checkbox, {\n                                      slot: \"end\",\n                                      modelValue: entry.isChecked,\n                                      \"onUpdate:modelValue\": $event => (entry.isChecked = $event),\n                                      onIonChange: (e) => _ctx.onselect(entry, e),\n                                      disabled: entry?.disabled\n                                    }, null, 8, [\"modelValue\", \"onUpdate:modelValue\", \"onIonChange\", \"disabled\"])\n                                  ]),\n                                  _: 2\n                                }, 1032, [\"color\"]))\n                              }), 128 /* KEYED_FRAGMENT */))\n                            ]),\n                            _: 1\n                          })\n                        ])\n                      ]),\n                      _: 1\n                    }))\n                  : _createCommentVNode(\"\", true)\n              ]),\n              _: 1\n            })\n          ]),\n          _: 1\n        })\n      ]),\n      _: 1\n    }, 8, [\"showFull\"])\n  ]))\n})","\nimport { Option } from \"../Forms/FieldInterface\";\nimport { defineComponent } from \"vue\";\nimport { IonCheckbox, IonText, IonChip } from \"@ionic/vue\";\nimport SelectMixin from \"@/components/FormElements/SelectMixin.vue\"\nimport { PatientRadiologyService } from \"@/apps/OPD/services/patient_radiology_service\"\nimport { isEmpty } from \"lodash\";\nimport { ConceptName } from \"@/interfaces/conceptName\";\n\nexport default defineComponent({\n  components: { IonCheckbox, IonText, IonChip },\n  name: \"HisRadiologyPicker\",\n  mixins: [SelectMixin],\n  data: () => ({\n    radiologyOrdersList: {} as Record<string, Option[]>,\n    ActiveCategory: '',\n  }),\n  methods: {\n    async init() {\n      this.$emit('onFieldActivated', this)\n      const data = await PatientRadiologyService.getRadiologyList('Radiology Orders')\n      this.listData = this.mapListToOptions(data)\n      this.$emit('onValue', this.getChecked(this.radiologyOrdersList))\n    },\n    async onselect(option: Option, event: any){\n      this.$nextTick(async ()=> {\n        const opt = {...option}\n        opt.isChecked = event.target.checked\n\n        if (this.onValue && opt.isChecked) {\n          const ok = await this.onValue(opt)\n          if (!ok) {\n            return event.target.checked = false\n          }\n        }\n        if (this.onValueUpdate) {\n          this.radiologyOrdersList = await this.onValueUpdate({...this.radiologyOrdersList}, opt)\n        }\n        this.$emit('onValue', this.getChecked(this.radiologyOrdersList))\n      })\n    },\n    async getSpecificRadiologyOrders(category: string) {\n      if (!(category in this.radiologyOrdersList)) {\n        const radiologyOrders = await PatientRadiologyService.getRadiologyList(category)\n        this.radiologyOrdersList[category] = this.mapListToOptions(radiologyOrders, category)\n      }\n      this.ActiveCategory = category\n    },\n    mapListToOptions(list: ConceptName[], category = ''){\n      if(isEmpty(list)) return []\n      return list.map(item => {\n        const option: Option = {\n          label: item.name,\n          value: item.name,\n          isChecked: false,\n          other: item\n        }\n        if(category) option.other.parent = category\n        return option\n      })\n    },\n    uncheck(option: Option){\n      this.radiologyOrdersList[option.other.parent].forEach(opt => {\n        if(opt.label === option.label) opt.isChecked = false\n      })\n    },\n    getChecked(list: Record<string, Option[]>) {\n      const checkedItems: Array<Option> = [];\n      for (const group in list) {\n        checkedItems.push(\n          ...list[group].filter(option => option.isChecked)\n        )\n      }\n\n      return checkedItems\n    },\n  },\n  computed: {\n    checkedItems(): Option[] {\n      return this.getChecked(this.radiologyOrdersList)\n    },\n    activeCategoryItems(): Option[] {\n      return this.radiologyOrdersList[this.ActiveCategory]\n    }\n  },\n  watch: {\n    clear(){\n      for (const group in this.radiologyOrdersList) {\n        this.radiologyOrdersList[group] = this.radiologyOrdersList[group].map(option => {\n          option.isChecked = false\n          return option\n        })\n      }\n    }\n  },\n  mounted() {\n    this.init()\n  },\n  activated() {\n    this.init()\n  }\n})\n","import { render } from \"./HisRadiologyPicker.vue?vue&type=template&id=b17197ee&scoped=true&ts=true\"\nimport script from \"./HisRadiologyPicker.vue?vue&type=script&lang=ts\"\nexport * from \"./HisRadiologyPicker.vue?vue&type=script&lang=ts\"\n\nimport \"./HisRadiologyPicker.vue?vue&type=style&index=0&id=b17197ee&scoped=true&lang=css\"\n\nimport exportComponent from \"/home/andrew-dev/Projects/HIS-Core/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-b17197ee\"]])\n\nexport default __exports__","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./HisRadiologyPicker.vue?vue&type=style&index=0&id=b17197ee&scoped=true&lang=css\""],"sourceRoot":""}