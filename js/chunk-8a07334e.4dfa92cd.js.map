{"version":3,"sources":["webpack:///./src/apps/OPD/services/patient_complaints_service.ts","webpack:///./src/apps/OPD/views/encounters/Complaints.vue?d358","webpack:///./src/components/DataViews/LabOrderModal.vue?e560","webpack:///./src/guidelines/encounter_guidelines.ts","webpack:///./src/views/EncounterMixin.vue","webpack:///./src/views/EncounterMixin.vue?fc39","webpack:///./node_modules/vue-loader-v16/dist/templateLoader.js","webpack:///./node_modules/cache-loader/dist/cjs.js","webpack:///./src/components/Forms/HisStandardForm.vue","webpack:///./src/components/DataViews/LabOrderModal.vue?48f0","webpack:///./node_modules/eslint-loader/index.js","webpack:///./src/components/DataViews/LabOrderModal.vue","webpack:///./src/components/DataViews/LabOrderModal.vue?f722","webpack:///./src/apps/OPD/views/encounters/Complaints.vue?ac39","webpack:///./src/apps/OPD/views/encounters/modals/radiology.vue?972c","webpack:///./src/apps/OPD/views/encounters/modals/radiology.vue","webpack:///./src/apps/OPD/views/encounters/modals/radiology.vue?82f3","webpack:///./src/apps/OPD/views/encounters/Complaints.vue","webpack:///./src/apps/OPD/views/encounters/Complaints.vue?5171"],"names":["PatientComplaintsService","patientID","providerID","getObs","ConceptService","getConceptID","this","date","complaintType","filter","getConceptSet","AppEncounterService","FlowState","dformat","d","HisDate","toStandardHisDisplayFormat","ENCOUNTER_GUIDELINES","priority","actions","alert","outcomeStartDate","infoActionSheet","name","slot","color","action","GO_TO_PATIENT_DASHBOARD","CHANGE_PATIENT_OUTCOME","CONTINUE","conditions","outcome","startDate","sessionDate","birthDate","CHANGE_SESSION_DATE","selection","providers","encounterName","apiDate","optionsActionSheet","role","modal","value","flowState","SET_PROVIDER","isBdeMode","isBDE","defineComponent","components","HisStandardForm","data","patient","fields","facts","ready","watch","handler","route","params","patient_id","parseInt","Store","get","then","patientData","setEncounterFacts","checkEncounterGuidelines","immediate","deep","computed","cancelDestination","patientDashboardUrl","methods","runflowState","state","states","split","username","provider","find","person_id","$router","push","EXIT","gotoPatientDashboard","findings","matchToGuidelines","index","finding","status","program","console","error","toastDanger","ProgramService","getSessionDate","getCachedApiDate","getBirthdate","$route","toString","toUpperCase","sort","a","b","usernameA","usernameB","map","p","isEmpty","person","names","latestName","given_name","family_name","toOption","label","other","mapStrToOptions","items","i","path","nextTask","yesNoOptions","toYesNoOption","values","mapOptions","options","option","yesNoUnknownOptions","resolveObs","obs","tag","Object","reduce","accum","cur","Array","isArray","concat","Promise","all","inArray","arr","expression","length","e","validateSeries","condition","__exports__","render","_ctx","_cache","$props","$setup","$data","$options","_openBlock","_createBlock","_resolveDynamicComponent","formType","skipSummary","activeField","cancelDestinationPath","onOnFinish","onFinish","onFinishAction","onOnIndex","onIndex","TouchScreenForm","emits","props","type","Function","Boolean","default","String","required","formData","computedData","$emit","_withId","_withScopeId","_pushScopeId","_hoisted_1","_createTextVNode","_hoisted_2","class","_hoisted_3","_createVNode","_hoisted_4","_hoisted_5","style","background","height","_hoisted_6","_hoisted_7","_hoisted_8","_hoisted_9","_hoisted_10","_popScopeId","_component_ion_title","_resolveComponent","_component_ion_toolbar","_component_ion_header","_component_ion_label","_component_ion_checkbox","_component_ion_item","_component_ion_list","_component_ion_col","_component_ion_radio","_component_ion_radio_group","_component_ion_button","_component_ion_row","_component_ion_grid","_component_ion_content","_component_ion_footer","_Fragment","_","size","overflowY","_renderList","testTypes","key","disabled","activeIndex","isOrderComplete","detail","_toDisplayString","modelValue","isChecked","$event","onIonChange","onSelectTest","selectedOrders","extendedLabsEnabled","_createCommentVNode","specimens","onClick","addSpecimen","reasons","finalOrders","specimen","reason","removeOrder","currentIndex","postActivities","closeModal","LabOrderService","constructor","super","activities","testFilters","title","appActivities","getActivities","created","ART_GLOBAL_PROP","extendedLabEnabled","testName","event","$nextTick","target","checked","OrderService","getSpecimens","getTestTypes","tests","t","includes","concept_id","orders","createEncounter","encounter","buildLabOrders","formattedOrders","saveOrdersArray","encounter_id","toastWarning","invalidate","alertConfirmation","confirmBtnLabel","cancelBtnLabel","canPrintOrders","printOrders","modalController","dismiss","PrintoutService","forEach","element","url","order_id","printLbl","mounted","content","IonButton","IonContent","IonHeader","IonTitle","IonToolbar","IonLabel","IonList","IonItem","IonCheckbox","IonRadioGroup","IonRow","_component_his_standard_form","_component_ion_page","_withCtx","onSubmit","_component_his_radiology_picker","onOnValue","onValue","emitedSelectedOptions","IonFooter","HisRadiologyPicker","mixins","EncounterMixinVue","radiologyService","isPacsEnabled","isReady","PatientRadiologyService","OPD_GLOBAL_PROP","isPACsEnabled","selected","getSelected","buildValueCoded","parent","buildValueCodedFromConceptId","child","obsObj","saveObservationList","savedObsData","submitToPacs","log","IonPage","complaintsService","todaysDate","ObservationService","presentingComplaints","radiologyBtnName","hasTriageComplaints","getTriagePresentingComplaints","getFields","complaints","launchOrderSelection","create","component","LabOrderModal","backdropDismiss","cssClass","present","onDidDismiss","launchRadiologyOrderSelection","radiology","fetchLatestTriageEncounter","EncounterService","getEncounters","encounters","todayPresentingComplaints","el","toStandardHisFormat","encounter_datetime","observations","buildResults","columns","group","rows","item","obs_group_id","value_text","undefined","id","helpText","FieldType","TT_TABLE_VIEWER","config","hiddenFooterBtns","TT_COMPLAINTS_PICKER","validation","Validation","computedValue","showRadiologyOdersBtn","disableBackBtn","footerBtns","visible","visibleOnStateChange","TT_SUMMARY","buildSummaryResults","OPDComplaint","triageComplaint"],"mappings":"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","file":"js/chunk-8a07334e.4dfa92cd.js","sourcesContent":["import { AppEncounterService } from \"@/services/app_encounter_service\"\nimport { ConceptService } from '@/services/concept_service';\n\nexport class PatientComplaintsService extends AppEncounterService {\n  constructor(patientID: number, providerID: number) {\n    super(patientID, 122, providerID) \n  }\n\n  static async getComplaintsList(complaintType: string, filter = '') {\n    return ConceptService.getConceptSet(complaintType, filter) \n  }\n  async fetchLatestTriageEncounter() { \n   return await PatientComplaintsService.getObs({\n        'concept_id': ConceptService.getConceptID(\"History of COVID-19 contact\") ,\n        'start_date': this.date,\n        'end_date': this.date,\n        'person_id': this.patientID,\n    })\n  }\n}\n","export * from \"-!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./Complaints.vue?vue&type=style&index=0&id=ac007cae&lang=css\"","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./LabOrderModal.vue?vue&type=style&index=0&id=9adaf5e2&scoped=true&lang=css\"","import { infoActionSheet, optionsActionSheet } from \"@/utils/ActionSheets\";\nimport { GuideLineInterface } from \"@/utils/GuidelineEngine\";\nimport HisDate from '@/utils/Date'\n\nexport enum FlowState {\n    SET_PROVIDER = 'SET_PROVIDER',\n    CHANGE_SESSION_DATE = 'change_session_date',\n    GO_TO_PATIENT_DASHBOARD = 'go_to_patient_dashboard',\n    CHANGE_PATIENT_OUTCOME = 'change_outcome',\n    CONTINUE = 'continue',\n    EXIT = 'exit'\n}\nconst dformat = (d: string) => HisDate.toStandardHisDisplayFormat(d)\n\nexport const ENCOUNTER_GUIDELINES: Record<string, GuideLineInterface> = {\n    \"Warn if attempting to create new encounters for a deceased patient\": {\n        priority: 1,\n        actions: {\n            alert: async ({ outcomeStartDate }: any) => {\n                const action = await infoActionSheet(\n                    'Data Integrity Issue Found',\n                    `Patient died on ${dformat(outcomeStartDate)}`,\n                    'Proceeding with this outcome might affect accuracy of some reports',\n                    [\n                        { name: 'Cancel', slot: 'end', color: 'primary'},\n                        { name: 'Change outcome', slot: 'end', color: 'primary'},\n                        { name: 'Continue Anyway', slot: 'end', color: 'danger'}\n                    ]\n                )\n                return action === 'Cancel'\n                    ? FlowState.GO_TO_PATIENT_DASHBOARD\n                    : action === 'Change outcome'\n                    ? FlowState.CHANGE_PATIENT_OUTCOME\n                    : FlowState.CONTINUE\n            }\n        },\n        conditions: {\n            outcome(outcome: string) {\n                return outcome === 'Patient died'\n            },\n            outcomeStartDate(startDate: string, { sessionDate }: any) {\n                return sessionDate >= startDate\n            }\n        }\n    },\n    \"A patient's date of birth must not be less than Session Date\": {\n        priority: 2,\n        actions: {\n            alert: async ({ birthDate, sessionDate}: any) => {\n                const action = await infoActionSheet(\n                    'Data integrity issue found', '',\n                    `Session date ${dformat(sessionDate)} is less than birth date of ${dformat(birthDate)}`,\n                    [\n                        { name: 'Cancel', slot: 'end', color: 'danger'},\n                        { name: 'Change session date', slot: 'end', color: 'success'}\n                    ]\n                )\n                return action === 'Change session date'\n                    ? FlowState.CHANGE_SESSION_DATE\n                    : FlowState.GO_TO_PATIENT_DASHBOARD\n            }\n        },\n        conditions: {\n            birthDate(birthDate: string, { sessionDate }: any) {\n                return sessionDate < birthDate\n            }\n        }\n    },\n    \"Select Encounter provider when in back data entry\": {\n        priority: 3,\n        actions: {\n            selection: async ({ providers, encounterName, sessionDate, apiDate }: any) => {\n                const modal = await optionsActionSheet(\n                    `Please select a provider for ${encounterName}`,\n                    `BDE: ${dformat(sessionDate)} | Current: ${dformat(apiDate)}`,\n                    providers,\n                    [\n                        { name: 'Cancel', color: 'danger', slot: 'start', role: 'default'},\n                        { name: 'Confirm', slot: 'end', role: 'action' }\n                    ]\n                )\n                return modal.action === 'Cancel' \n                    ? { value: -1, flowState: FlowState.GO_TO_PATIENT_DASHBOARD }\n                    : { value: modal.selection, flowState: FlowState.SET_PROVIDER }\n            }\n        },\n        conditions: {\n            isBdeMode(isBDE: boolean) {\n                return isBDE\n            }\n        }\n    }\n}","\nimport { defineComponent } from 'vue'\nimport { Field, Option } from '@/components/Forms/FieldInterface'\nimport { ProgramService } from \"@/services/program_service\"\nimport { find, isEmpty } from \"lodash\"\nimport { nextTask } from \"@/utils/WorkflowTaskHelper\"\nimport { ENCOUNTER_GUIDELINES, FlowState } from \"@/guidelines/encounter_guidelines\"\nimport { matchToGuidelines } from \"@/utils/GuidelineEngine\"\nimport HisStandardForm from \"@/components/Forms/HisStandardForm.vue\";\nimport { toastDanger } from '@/utils/Alerts'\nimport Store from \"@/composables/ApiStore\"\n\nexport default defineComponent({\n    components: { HisStandardForm },\n    data: () => ({\n        patient: {} as any,\n        fields: [] as Array<Field>,\n        patientID: '' as any,\n        providerID: -1 as number,\n        providers: [] as any,\n        facts: {\n            sessionDate: '' as string,\n            apiDate: '' as string,\n            encounterName: 'N/A' as string,\n            providers: [] as Array<any>,\n            isBdeMode: false as boolean,\n            birthDate: '' as string,\n            outcome: '' as string,\n            outcomeStartDate: '' as string\n        },\n        ready: false\n    }),\n    watch: {\n       '$route': {\n            handler(route: any) {\n                if(route.params.patient_id && this.patientID != route.params.patient_id) {\n                    this.patientID = parseInt(route.params.patient_id);\n                    Store.get('ACTIVE_PATIENT', { patientID: this.patientID})\n                        .then(patientData => {\n                            this.patient = patientData\n                            this.setEncounterFacts().then(() => {\n                                this.checkEncounterGuidelines().then(() => {\n                                    this.ready = true\n                                })\n                            })\n                        })\n                    }\n            },\n            immediate: true,\n            deep: true\n        }\n    },\n    computed: {\n        cancelDestination(): string {\n            return this.patientDashboardUrl()\n        }\n    },\n    methods: {\n        runflowState(state: FlowState, params=null) {\n            const states: any = {}\n            states[FlowState.SET_PROVIDER] = (selection: any) => {\n                const [ username ] = selection.split(' ')\n                const provider = find(this.providers, { username })\n                if (provider) this.providerID = provider.person_id\n                return FlowState.CONTINUE\n            }\n            states[FlowState.CHANGE_SESSION_DATE] = () => { \n                this.$router.push(`/session/date?patient_dashboard_redirection_id=${this.patientID}`)\n                return FlowState.EXIT\n            }\n            states[FlowState.CHANGE_PATIENT_OUTCOME] = () => {\n                this.$router.push(`/patient/programs/${this.patientID}`)\n                return FlowState.EXIT\n            }\n            states[FlowState.GO_TO_PATIENT_DASHBOARD] = () => {\n                this.gotoPatientDashboard()\n                return FlowState.EXIT\n            }\n            if (state in states) {\n                return states[state](params)\n            }\n        },\n        async checkEncounterGuidelines() {\n            const findings = matchToGuidelines(this.facts, ENCOUNTER_GUIDELINES)\n            for(const index in findings) {\n                const finding = findings[index]\n                if (finding?.actions?.alert) {\n                    const status = this.runflowState((await finding?.actions?.alert(this.facts)))\n                    if (status === FlowState.EXIT) return\n                }\n                if (finding?.actions?.selection) {\n                    const selection = await finding?.actions?.selection(this.facts)\n                    this.runflowState(selection.flowState, selection.value)\n                }\n            }\n        },\n        async setEncounterFacts() {\n            try {\n                const program = await Store.get('PATIENT_PROGRAM', { patientID: this.patientID })\n                this.facts.outcome = program.outcome\n                this.facts.outcomeStartDate = program.startDate\n            } catch (e) {\n                console.error(e)\n                toastDanger(`${e}`)\n            }\n            this.facts.sessionDate = ProgramService.getSessionDate()\n            this.facts.apiDate = ProgramService.getCachedApiDate() as string\n            this.facts.isBdeMode = ProgramService.isBDE() as boolean\n            this.facts.birthDate = this.patient.getBirthdate()\n            this.facts.encounterName = this.$route.name \n                ? this.$route.name.toString().toUpperCase()\n                : 'N/A'\n            if (ProgramService.isBDE()) {\n                this.providers = await Store.get('PROVIDERS')\n                this.facts.providers = this.providers\n                    .sort((a: any, b: any) => {\n                        const usernameA = a.username.toUpperCase()\n                        const usernameB = b.username.toUpperCase()\n                        return usernameA < usernameB ? -1 : usernameA > usernameB  ? 1 : 0\n                    })\n                    .map((p: any) => {\n                        let name = `${p.username}`\n                        if (!isEmpty(p?.person?.names)) {\n                            const [ latestName ] = p.person?.names || []\n                            name += ` (${latestName.given_name} ${latestName.family_name})`\n                        }\n                        return name\n                    })\n            }\n        },\n        toOption(label: string, other={}) {\n            return {\n                label,\n                value: label,\n                other\n            }\n        },\n        mapStrToOptions(items: string[]) {\n            return items.map(i => ({label: i, value: i}))\n        },\n        patientDashboardUrl(): string {\n            return `/patient/dashboard/${this.patientID}`\n        },\n        gotoPatientDashboard() {\n            return this.$router.push({path: this.patientDashboardUrl()})\n        },\n        nextTask() {\n            return nextTask(this.patientID, this.$router)\n        },\n        yesNoOptions(): Option[] {\n            return [\n                { label: \"Yes\", value: \"Yes\" },\n                { label: \"No\", value: \"No\" }\n            ]\n        },\n        toYesNoOption(label: string, other: any={}): Option {\n            return {\n                label,\n                value: '',\n                other: {\n                    ...other,\n                    values: this.yesNoOptions()\n                }\n            } \n        },\n        mapOptions(options: Array<string>) {\n            return options.map((option) => {\n                return { label: option, value: option }\n            });\n        },\n        yesNoUnknownOptions(): Option[] {\n            return [\n                { label: \"Yes\", value: \"Yes\" },\n                { label: \"No\", value: \"No\" },\n                { label: \"Unknown\", value: \"Unknown\" }\n            ]\n        },\n        resolveObs(obs: any, tag='') {\n            const values: any = Object.values(obs)\n                .filter((d: any) => d && (d.tag === tag || tag === ''))\n                .reduce((accum: any, cur: any) => { \n                    const data = cur.obs ? cur.obs : cur\n                    if (Array.isArray(data)) {\n                        accum = accum.concat(data)\n                    } else if (typeof data === 'function') {\n                        accum.push(data())\n                    } else {\n                        accum.push(data)\n                    }\n                    return accum\n                    }, [])\n            return Promise.all(values)\n        },\n        inArray(arr: Array<any>, expression: (i: any) => boolean): boolean {\n            try {\n                return arr.filter((i: any) => expression(i)).length > 0\n            } catch (e) {\n                return false\n            }\n        },\n        validateSeries(conditions: Array<any>){\n            try {\n                for(const i in conditions) {\n                    const condition = conditions[i]()\n\n                    if (condition) return condition\n                }\n            } catch (e) {\n                return [e]\n            }\n        }\n    }\n})\n","import script from \"./EncounterMixin.vue?vue&type=script&lang=ts\"\nexport * from \"./EncounterMixin.vue?vue&type=script&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { resolveDynamicComponent as _resolveDynamicComponent, openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return (_openBlock(), _createBlock(_resolveDynamicComponent(_ctx.formType), {\n    fields: _ctx.fields,\n    skipSummary: _ctx.skipSummary,\n    activeField: _ctx.activeField,\n    cancelDestinationPath: _ctx.cancelDestinationPath,\n    onOnFinish: _ctx.onFinish,\n    onFinish: _ctx.onFinishAction,\n    onOnIndex: _ctx.onIndex\n  }, null, 8, [\"fields\", \"skipSummary\", \"activeField\", \"cancelDestinationPath\", \"onOnFinish\", \"onFinish\", \"onOnIndex\"]))\n}","\nimport TouchScreenForm from \"@/components/Forms/TouchScreenForm.vue\";\nimport { defineComponent, PropType } from \"vue\";\nimport { Field } from \"./FieldInterface\";\n\nexport default defineComponent({\n    name: \"HisStandardForm\",\n    components: { TouchScreenForm },\n    emits: [\n        'onFinish',\n        'onIndex'\n    ],\n    data: () => ({\n        formType: 'touch-screen-form' as string\n    }),\n    props: {\n        onFinishAction: {\n            type: Function\n        },\n        skipSummary: {\n            type: Boolean,\n            default: false\n        },\n        activeField: {\n            type: String\n        },\n        fields: {\n            type: Object as PropType<Field[]>,\n            required: true\n        },\n        cancelDestinationPath: {\n            type: String,\n            required: false,\n        }\n    },\n    methods: {\n        onFinish(formData: any, computedData: any) {\n            this.$emit('onFinish', formData, computedData)\n        },\n        onIndex(i: number) {\n            this.$emit('onIndex', i)\n        }\n    }\n})\n","import { render } from \"./HisStandardForm.vue?vue&type=template&id=6daa0375&ts=true\"\nimport script from \"./HisStandardForm.vue?vue&type=script&lang=ts\"\nexport * from \"./HisStandardForm.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/andrew-dev/Projects/HIS-Core/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createBlock as _createBlock, toDisplayString as _toDisplayString, createCommentVNode as _createCommentVNode, withScopeId as _withScopeId, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\nconst _withId = /*#__PURE__*/_withScopeId(\"data-v-9adaf5e2\")\n\n_pushScopeId(\"data-v-9adaf5e2\")\nconst _hoisted_1 = /*#__PURE__*/_createTextVNode(\"Lab orders\")\nconst _hoisted_2 = { class: \"ion-margin-bottom\" }\nconst _hoisted_3 = /*#__PURE__*/_createVNode(\"div\", { class: \"his-md-text side-title\" }, \" Select specimen \", -1)\nconst _hoisted_4 = /*#__PURE__*/_createVNode(\"div\", { class: \"his-md-text side-title\" }, \" Main test(s) reason \", -1)\nconst _hoisted_5 = { style: {background: 'lightyellow', height: '34vh'} }\nconst _hoisted_6 = { class: \"his-sm-text\" }\nconst _hoisted_7 = /*#__PURE__*/_createVNode(\"thead\", null, [\n  /*#__PURE__*/_createVNode(\"tr\", null, [\n    /*#__PURE__*/_createVNode(\"th\", null, \"Test\"),\n    /*#__PURE__*/_createVNode(\"th\", null, \"Specimen\"),\n    /*#__PURE__*/_createVNode(\"th\", null, \"Reason\"),\n    /*#__PURE__*/_createVNode(\"th\", null, \"Action\")\n  ])\n], -1)\nconst _hoisted_8 = /*#__PURE__*/_createTextVNode(\"X\")\nconst _hoisted_9 = /*#__PURE__*/_createTextVNode(\" Place orders \")\nconst _hoisted_10 = /*#__PURE__*/_createTextVNode(\" Close \")\n_popScopeId()\n\nexport const render = /*#__PURE__*/_withId(function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_ion_title = _resolveComponent(\"ion-title\")\n  const _component_ion_toolbar = _resolveComponent(\"ion-toolbar\")\n  const _component_ion_header = _resolveComponent(\"ion-header\")\n  const _component_ion_label = _resolveComponent(\"ion-label\")\n  const _component_ion_checkbox = _resolveComponent(\"ion-checkbox\")\n  const _component_ion_item = _resolveComponent(\"ion-item\")\n  const _component_ion_list = _resolveComponent(\"ion-list\")\n  const _component_ion_col = _resolveComponent(\"ion-col\")\n  const _component_ion_radio = _resolveComponent(\"ion-radio\")\n  const _component_ion_radio_group = _resolveComponent(\"ion-radio-group\")\n  const _component_ion_button = _resolveComponent(\"ion-button\")\n  const _component_ion_row = _resolveComponent(\"ion-row\")\n  const _component_ion_grid = _resolveComponent(\"ion-grid\")\n  const _component_ion_content = _resolveComponent(\"ion-content\")\n  const _component_ion_footer = _resolveComponent(\"ion-footer\")\n\n  return (_openBlock(), _createBlock(_Fragment, null, [\n    _createVNode(_component_ion_header, null, {\n      default: _withId(() => [\n        _createVNode(_component_ion_toolbar, null, {\n          default: _withId(() => [\n            _createVNode(_component_ion_title, { class: \"his-lg-text\" }, {\n              default: _withId(() => [\n                _hoisted_1\n              ]),\n              _: 1\n            })\n          ]),\n          _: 1\n        })\n      ]),\n      _: 1\n    }),\n    _createVNode(_component_ion_content, { style: {\"overflow\":\"hidden\",\"background\":\"grey\",\"height\":\"70vh\"} }, {\n      default: _withId(() => [\n        _createVNode(_component_ion_grid, null, {\n          default: _withId(() => [\n            _createVNode(_component_ion_row, null, {\n              default: _withId(() => [\n                _createVNode(_component_ion_col, { size: \"6\" }, {\n                  default: _withId(() => [\n                    _createVNode(_component_ion_list, { style: {overflowY: 'auto', height:'75vh'} }, {\n                      default: _withId(() => [\n                        (_openBlock(true), _createBlock(_Fragment, null, _renderList(_ctx.testTypes, (data, index) => {\n                          return (_openBlock(), _createBlock(_component_ion_item, {\n                            class: \"his-sm-text\",\n                            key: data,\n                            disabled: _ctx.activeIndex !== null && _ctx.activeIndex !== index && !_ctx.isOrderComplete,\n                            detail: \"\"\n                          }, {\n                            default: _withId(() => [\n                              _createVNode(_component_ion_label, { \"text-wrap\": \"\" }, {\n                                default: _withId(() => [\n                                  _createTextVNode(_toDisplayString(data.name), 1 /* TEXT */)\n                                ]),\n                                _: 2\n                              }, 1024),\n                              _createVNode(_component_ion_checkbox, {\n                                modelValue: data.isChecked,\n                                \"onUpdate:modelValue\": $event => (data.isChecked = $event),\n                                slot: \"start\",\n                                onIonChange: (e) => _ctx.onSelectTest(data.name, index, e)\n                              }, null, 8, [\"modelValue\", \"onUpdate:modelValue\", \"onIonChange\"])\n                            ]),\n                            _: 2\n                          }, 1032, [\"disabled\"]))\n                        }), 128 /* KEYED_FRAGMENT */))\n                      ]),\n                      _: 1\n                    })\n                  ]),\n                  _: 1\n                }),\n                (_ctx.activeIndex != null && _ctx.selectedOrders.length > 0)\n                  ? (_openBlock(), _createBlock(_component_ion_col, {\n                      key: 0,\n                      style: {overflowY: 'auto', height:'79vh'}\n                    }, {\n                      default: _withId(() => [\n                        _createVNode(\"div\", _hoisted_2, [\n                          (!_ctx.extendedLabsEnabled)\n                            ? (_openBlock(), _createBlock(_component_ion_list, { key: 0 }, {\n                                default: _withId(() => [\n                                  _createVNode(_component_ion_radio_group, {\n                                    modelValue: _ctx.testTypes[_ctx.activeIndex]['specimen'],\n                                    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => (_ctx.testTypes[_ctx.activeIndex]['specimen'] = $event))\n                                  }, {\n                                    default: _withId(() => [\n                                      _hoisted_3,\n                                      (_openBlock(true), _createBlock(_Fragment, null, _renderList(_ctx.specimens, (data) => {\n                                        return (_openBlock(), _createBlock(_component_ion_item, { key: data }, {\n                                          default: _withId(() => [\n                                            _createVNode(_component_ion_label, null, {\n                                              default: _withId(() => [\n                                                _createTextVNode(_toDisplayString(data.name), 1 /* TEXT */)\n                                              ]),\n                                              _: 2\n                                            }, 1024),\n                                            _createVNode(_component_ion_radio, {\n                                              slot: \"start\",\n                                              value: data.name,\n                                              onClick: $event => (_ctx.addSpecimen(data))\n                                            }, null, 8, [\"value\", \"onClick\"])\n                                          ]),\n                                          _: 2\n                                        }, 1024))\n                                      }), 128 /* KEYED_FRAGMENT */))\n                                    ]),\n                                    _: 1\n                                  }, 8, [\"modelValue\"])\n                                ]),\n                                _: 1\n                              }))\n                            : _createCommentVNode(\"\", true),\n                          _createVNode(_component_ion_radio_group, {\n                            modelValue: _ctx.testTypes[_ctx.activeIndex]['reason'],\n                            \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => (_ctx.testTypes[_ctx.activeIndex]['reason'] = $event))\n                          }, {\n                            default: _withId(() => [\n                              _hoisted_4,\n                              (_openBlock(true), _createBlock(_Fragment, null, _renderList(_ctx.reasons, (data) => {\n                                return (_openBlock(), _createBlock(_component_ion_item, {\n                                  class: \"his-sm-text\",\n                                  key: data\n                                }, {\n                                  default: _withId(() => [\n                                    _createVNode(_component_ion_label, null, {\n                                      default: _withId(() => [\n                                        _createTextVNode(_toDisplayString(data), 1 /* TEXT */)\n                                      ]),\n                                      _: 2\n                                    }, 1024),\n                                    _createVNode(_component_ion_radio, {\n                                      slot: \"start\",\n                                      value: data\n                                    }, null, 8, [\"value\"])\n                                  ]),\n                                  _: 2\n                                }, 1024))\n                              }), 128 /* KEYED_FRAGMENT */))\n                            ]),\n                            _: 1\n                          }, 8, [\"modelValue\"])\n                        ]),\n                        _createVNode(\"div\", _hoisted_5, [\n                          _createVNode(\"table\", _hoisted_6, [\n                            _hoisted_7,\n                            _createVNode(\"tbody\", null, [\n                              (_openBlock(true), _createBlock(_Fragment, null, _renderList(_ctx.finalOrders, (data, index) => {\n                                return (_openBlock(), _createBlock(\"tr\", { key: index }, [\n                                  _createVNode(\"td\", null, _toDisplayString(data.name), 1),\n                                  _createVNode(\"td\", null, _toDisplayString(data.specimen || 'N/A'), 1),\n                                  _createVNode(\"td\", null, _toDisplayString(data.reason), 1),\n                                  _createVNode(\"td\", null, [\n                                    _createVNode(_component_ion_button, {\n                                      onClick: $event => (_ctx.removeOrder(data.currentIndex)),\n                                      slot: \"end\",\n                                      color: \"danger\"\n                                    }, {\n                                      default: _withId(() => [\n                                        _hoisted_8\n                                      ]),\n                                      _: 1\n                                    }, 8, [\"onClick\"])\n                                  ])\n                                ]))\n                              }), 128 /* KEYED_FRAGMENT */))\n                            ])\n                          ])\n                        ])\n                      ]),\n                      _: 1\n                    }))\n                  : _createCommentVNode(\"\", true)\n              ]),\n              _: 1\n            })\n          ]),\n          _: 1\n        })\n      ]),\n      _: 1\n    }),\n    _createVNode(_component_ion_footer, null, {\n      default: _withId(() => [\n        _createVNode(_component_ion_toolbar, null, {\n          default: _withId(() => [\n            _createVNode(_component_ion_button, {\n              onClick: _ctx.postActivities,\n              size: \"large\",\n              slot: \"end\",\n              disabled: _ctx.finalOrders.length === 0\n            }, {\n              default: _withId(() => [\n                _hoisted_9\n              ]),\n              _: 1\n            }, 8, [\"onClick\", \"disabled\"]),\n            _createVNode(_component_ion_button, {\n              onClick: _cache[3] || (_cache[3] = $event => (_ctx.closeModal([]))),\n              size: \"large\",\n              slot: \"start\",\n              color: \"danger\"\n            }, {\n              default: _withId(() => [\n                _hoisted_10\n              ]),\n              _: 1\n            })\n          ]),\n          _: 1\n        })\n      ]),\n      _: 1\n    })\n  ], 64 /* STABLE_FRAGMENT */))\n})","import { AppEncounterService } from \"@/services/app_encounter_service\";\nexport class LabOrderService extends AppEncounterService {\n  constructor(patientID: number, providerID: number) {\n    super(patientID, 57, providerID);\n  }\n}","\nimport {\n  IonContent,\n  IonButton,\n  IonHeader,\n  IonTitle,\n  IonToolbar,\n  IonLabel,\n  modalController,\n  IonList,\n  IonItem,\n  IonCheckbox,\n  IonRadioGroup,\n  IonRow,\n} from \"@ionic/vue\";\nimport { defineComponent, PropType } from \"vue\";\nimport { alertConfirmation, toastWarning } from \"@/utils/Alerts\"\nimport { ActivityInterface } from \"@/apps/interfaces/AppInterface\"\nimport { OrderService } from \"@/services/order_service\";\nimport { LabOrderService } from \"@/apps/ART/services/lab_order_service\";\nimport { PrintoutService } from \"@/services/printout_service\";\nimport ART_GLOBAL_PROP from \"@/apps/ART/art_global_props\"\nimport Store from \"@/composables/ApiStore\"\n\nexport default defineComponent({\n  name: \"Modal\",\n  props: {\n    activities: {\n      type: Object as PropType<ActivityInterface[]>,\n      required: true\n    },\n    testFilters: {\n      type: Array    \n    },\n    title: {\n      type: String, \n      default: \"\"\n    },\n  },\n  watch: {\n    activities: {\n      handler(activities: Array<ActivityInterface>){\n        if (activities) {\n          this.appActivities = [...activities]\n          this.getActivities();\n        }\n      },\n      immediate: true\n    }\n  },\n  async created() {\n    this.extendedLabsEnabled = await ART_GLOBAL_PROP.extendedLabEnabled()\n  },\n  methods: {\n    async onSelectTest(testName: string, index: number, event: any) {\n      this.$nextTick(async () => {\n        this.testTypes[index]['isChecked'] = event.target.checked;\n        if(this.testTypes[index]['isChecked']){\n          this.specimens = await OrderService.getSpecimens(testName);\n          this.testTypes[index]['currentIndex'] = index;\n          this.activeIndex = index;\n        } else {\n          this.removeOrder(index)\n        }\n      })\n    },\n    async getActivities() {\n     const tests = await OrderService.getTestTypes();\n     this.testTypes = tests.map((t: any, i: any) => {\n        t.index = t.name === 'HIV viral load' ? (t.index = 0) : (t.index = i + 1)\n        return t\n     })\n     .sort((a: any, b: any) => a.index < b.index ? 0 : 1)\n     .filter((t: any) => Array.isArray(this.testFilters) ? this.testFilters.includes(t.name) : true)\n    },\n    removeOrder(index: number) {\n      this.testTypes[index]['isChecked'] = false;\n      this.testTypes[index]['reason'] = null;\n      this.testTypes[index]['specimen'] = null;\n      this.testTypes[index]['specimenConcept'] = null\n      this.activeIndex = null\n      this.specimens = []\n    },\n    addSpecimen(data: any) {\n      this.testTypes[this.activeIndex]['specimenConcept'] = data.concept_id;\n    },\n    async postActivities() {\n      const patientID= `${this.$route.params.patient_id}`;\n      const orders = new LabOrderService(parseInt(patientID), -1); //TODO: get selected provider for this encounter\n      const encounter = await orders.createEncounter();\n\n      if(encounter) {\n        const formattedOrders = await OrderService.buildLabOrders(encounter, this.finalOrders);\n        const d =await  OrderService.saveOrdersArray(encounter.encounter_id, formattedOrders);\n        \n        if(!d) return toastWarning('Unable to save lab orders')\n\n        Store.invalidate('PATIENT_LAB_ORDERS')\n        const canPrintOrders = await alertConfirmation('Lab orders and encounter created!, print out your last orders?', { \n          confirmBtnLabel: 'Yes',\n          cancelBtnLabel: 'No'\n        })\n        if(canPrintOrders) await this.printOrders(d)\n        else await this.closeModal(d)\n      }\n    },\n    async closeModal(orders: []) {\n      await modalController.dismiss(orders)\n    },\n    async printOrders(orders: any) {\n      const p = new PrintoutService();\n      await orders.forEach(async (element: any) => {\n        const url = `lab/labels/order?order_id=${element.order_id}`\n        await p.printLbl(url);\n      });\n      await modalController.dismiss(orders)\n    },\n  },\n  computed: {\n    isOrderComplete(): boolean {\n      if(this.extendedLabsEnabled){\n        return !!this.testTypes[this.activeIndex]['reason'] \n      }\n      return (this.testTypes[this.activeIndex]['specimenConcept'] || this.testTypes[this.activeIndex]['specimen']) \n        && this.testTypes[this.activeIndex]['reason'] \n    },\n    selectedOrders(): any {\n      return this.testTypes.filter((data: any) => data.isChecked === true);\n    },\n    finalOrders(): any {\n      return this.selectedOrders.filter((data: any) => {\n        return data.reason && (data.specimen && !this.extendedLabsEnabled \n          || this.extendedLabsEnabled)\n      } )\n    }\n  },\n  mounted() {\n    this.getActivities();\n  },\n  data() {\n    return {\n      content: \"Content\",\n      extendedLabsEnabled: false as boolean,\n      appActivities: [] as Array<ActivityInterface>,\n      testTypes: [] as any,\n      specimens: [],\n      reasons: ['Routine', 'Targeted', 'Confirmatory', 'Stat', 'Repeat / Missing'],\n      activeIndex: null as any\n    };\n  },\n  components: {\n    IonButton,\n    IonContent,\n    IonHeader,\n    IonTitle,\n    IonToolbar,\n    IonLabel,\n    IonList,\n    IonItem,\n    IonCheckbox,\n    IonRadioGroup,\n    IonRow,\n  },\n});\n","import { render } from \"./LabOrderModal.vue?vue&type=template&id=9adaf5e2&scoped=true&ts=true\"\nimport script from \"./LabOrderModal.vue?vue&type=script&lang=ts\"\nexport * from \"./LabOrderModal.vue?vue&type=script&lang=ts\"\n\nimport \"./LabOrderModal.vue?vue&type=style&index=0&id=9adaf5e2&scoped=true&lang=css\"\n\nimport exportComponent from \"/home/andrew-dev/Projects/HIS-Core/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-9adaf5e2\"]])\n\nexport default __exports__","import { resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_his_standard_form = _resolveComponent(\"his-standard-form\")\n  const _component_ion_page = _resolveComponent(\"ion-page\")\n\n  return (_openBlock(), _createBlock(_component_ion_page, null, {\n    default: _withCtx(() => [\n      _createVNode(_component_his_standard_form, {\n        cancelDestinationPath: _ctx.cancelDestination,\n        fields: _ctx.fields,\n        onFinishAction: _ctx.onSubmit,\n        skipSummary: true\n      }, null, 8, [\"cancelDestinationPath\", \"fields\", \"onFinishAction\"])\n    ]),\n    _: 1\n  }))\n}","import { createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, Fragment as _Fragment, openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nconst _hoisted_1 = /*#__PURE__*/_createTextVNode(\"Radiology Examination\")\nconst _hoisted_2 = /*#__PURE__*/_createTextVNode(\" Place orders \")\nconst _hoisted_3 = /*#__PURE__*/_createTextVNode(\" Close \")\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_ion_title = _resolveComponent(\"ion-title\")\n  const _component_ion_toolbar = _resolveComponent(\"ion-toolbar\")\n  const _component_ion_header = _resolveComponent(\"ion-header\")\n  const _component_his_radiology_picker = _resolveComponent(\"his-radiology-picker\")\n  const _component_ion_content = _resolveComponent(\"ion-content\")\n  const _component_ion_button = _resolveComponent(\"ion-button\")\n  const _component_ion_footer = _resolveComponent(\"ion-footer\")\n\n  return (_openBlock(), _createBlock(_Fragment, null, [\n    _createVNode(_component_ion_header, null, {\n      default: _withCtx(() => [\n        _createVNode(_component_ion_toolbar, null, {\n          default: _withCtx(() => [\n            _createVNode(_component_ion_title, { class: \"his-lg-text\" }, {\n              default: _withCtx(() => [\n                _hoisted_1\n              ]),\n              _: 1\n            })\n          ]),\n          _: 1\n        })\n      ]),\n      _: 1\n    }),\n    _createVNode(_component_ion_content, { style: {\"overflow\":\"hidden\",\"background\":\"grey\",\"height\":\"70vh\"} }, {\n      default: _withCtx(() => [\n        _createVNode(_component_his_radiology_picker, { onOnValue: _ctx.onValue }, null, 8, [\"onOnValue\"])\n      ]),\n      _: 1\n    }),\n    _createVNode(_component_ion_footer, null, {\n      default: _withCtx(() => [\n        _createVNode(_component_ion_toolbar, null, {\n          default: _withCtx(() => [\n            _createVNode(_component_ion_button, {\n              onClick: _cache[1] || (_cache[1] = $event => (_ctx.onSubmit())),\n              size: \"large\",\n              slot: \"end\",\n              disabled: _ctx.emitedSelectedOptions.length === 0\n            }, {\n              default: _withCtx(() => [\n                _hoisted_2\n              ]),\n              _: 1\n            }, 8, [\"disabled\"]),\n            _createVNode(_component_ion_button, {\n              onClick: _cache[2] || (_cache[2] = $event => (_ctx.closeModal())),\n              size: \"large\",\n              slot: \"start\",\n              color: \"danger\"\n            }, {\n              default: _withCtx(() => [\n                _hoisted_3\n              ]),\n              _: 1\n            })\n          ]),\n          _: 1\n        })\n      ]),\n      _: 1\n    })\n  ], 64 /* STABLE_FRAGMENT */))\n}","\nimport {\n  IonContent,\n  IonButton,\n  IonHeader,\n  IonTitle,\n  IonToolbar,\n  modalController,\n  IonFooter,\n} from \"@ionic/vue\";\nimport { defineComponent } from 'vue'\nimport EncounterMixinVue from '@/views/EncounterMixin.vue';\nimport { PatientRadiologyService } from \"@/apps/OPD/services/patient_radiology_service\";\nimport HisRadiologyPicker from '@/components/FormElements/HisRadiologyPicker.vue'\nimport OPD_GLOBAL_PROP from \"@/apps/OPD/opd_global_props\";\nimport { isEmpty } from \"lodash\";\n\nexport default defineComponent({\n  name: \"Modal\",\n  components: { \n    IonButton,\n    IonContent,\n    IonHeader,\n    IonTitle,\n    IonToolbar,\n    IonFooter,\n    HisRadiologyPicker\n  },\n  mixins: [EncounterMixinVue],\n  data: () => ({\n    radiologyService: {} as any,\n    isPacsEnabled: false,\n    emitedSelectedOptions: {} as any\n  }),\n  watch: {\n    ready: {\n      async handler(isReady: boolean) {\n        if(isReady){\n          this.radiologyService = new PatientRadiologyService(this.patientID, this.providerID)\n          this.isPacsEnabled = (await OPD_GLOBAL_PROP.isPACsEnabled())\n        }\n      },\n      immediate: true,\n      deep: true\n    }\n  },\n  methods: {\n    async onValue(selected: any) {\n      this.emitedSelectedOptions = selected\n    },\n    async getSelected() {\n      return this.emitedSelectedOptions.map(async (option: any) => ({\n        ...(await this.radiologyService.buildValueCoded('Radiology Orders', option.other.parent)),\n        child: (await this.radiologyService.buildValueCodedFromConceptId(option.other.parent, option.other.concept_id))\n      }))\n    },\n    async onSubmit(){\n      if(!isEmpty(this.emitedSelectedOptions)) {\n        this.closeModal()\n        let data = await this.getSelected()\n        data = await Promise.all(data)\n        await this.radiologyService.createEncounter()\n        const obsObj = await this.radiologyService.obsObj(data) \n        const savedObsData = await this.radiologyService.saveObservationList(obsObj)\n        await this.radiologyService.printOrders(data, this.patient)\n        if(this.isPacsEnabled) {\n          try {\n            await this.radiologyService.submitToPacs(savedObsData, this.patient)\n          } catch (error) {\n            console.log(error)\n          }\n        }\n      }\n    },\n    async closeModal() {\n      await modalController.dismiss([])\n    }\n  },\n})\n","import { render } from \"./radiology.vue?vue&type=template&id=426e5eb9&ts=true\"\nimport script from \"./radiology.vue?vue&type=script&lang=ts\"\nexport * from \"./radiology.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/andrew-dev/Projects/HIS-Core/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","\nimport { defineComponent } from 'vue'\nimport HisStandardForm from \"@/components/Forms/TouchScreenForm.vue\";\nimport EncounterMixinVue from '@/views/EncounterMixin.vue';\nimport { PatientComplaintsService } from \"@/apps/OPD/services/patient_complaints_service\";\nimport LabOrderModal from \"@/components/DataViews/LabOrderModal.vue\"\nimport radiology from \"@/apps/OPD/views/encounters/modals/radiology.vue\"\nimport Validation from '@/components/Forms/validations/StandardValidations';\nimport { Field, Option } from '@/components/Forms/FieldInterface';\nimport { FieldType } from '@/components/Forms/BaseFormElements';\nimport { modalController, IonPage } from '@ionic/vue';\nimport { ObservationService } from \"@/services/observation_service\"\nimport { EncounterService } from '@/services/encounter_service'\nimport HisDate from \"@/utils/Date\"\nimport OPD_GLOBAL_PROP from \"@/apps/OPD/opd_global_props\";\n\nexport default defineComponent({\n  components: { HisStandardForm, IonPage },\n  mixins: [EncounterMixinVue],\n  data: () => ({\n    complaintsService: {} as any,\n    todaysDate: ObservationService.getSessionDate(),\n    presentingComplaints: \"\" as any,\n    isPacsEnabled: false,\n    radiologyBtnName: 'Radiology Order',\n    hasTriageComplaints: false,\n  }),\n  watch: {\n    ready: {\n      async handler(isReady: boolean) {\n        if(isReady){\n          this.complaintsService = new PatientComplaintsService(this.patientID, this.providerID)\n          this.isPacsEnabled = (await OPD_GLOBAL_PROP.isPACsEnabled())\n          this.hasTriageComplaints = await this.getTriagePresentingComplaints()\n          this.fields = this.getFields()\n        }\n      },\n      immediate: true,\n      deep: true\n    }\n  },\n  methods: {\n    async onSubmit(_: any, computedData: any){     \n      const data = await Promise.all(computedData.complaints)   \n      await this.complaintsService.createEncounter()    \n      await this.complaintsService.saveObservationList(data)\n      this.nextTask()        \n    },\n    async launchOrderSelection() {\n      const modal = await modalController.create({\n        component: LabOrderModal,\n        backdropDismiss: false,\n        cssClass: 'large-modal'\n      })\n      modal.present()\n      await modal.onDidDismiss()\n    },\n    async launchRadiologyOrderSelection() {\n      const modal = await modalController.create({\n        component: radiology,\n        backdropDismiss: false,\n        cssClass: 'large-modal'\n      })\n      modal.present()\n      await modal.onDidDismiss()\n    },\n    async getTriagePresentingComplaints(){\n      const data =  await this.complaintsService.fetchLatestTriageEncounter();\n      if(!(data.length > 0)){ return false;}\n\n      const encounters = await EncounterService.getEncounters(this.patientID, this.todaysDate)\n      const todayPresentingComplaints = encounters.filter(function (el: any){\n        return el.type.name == \"TRIAGE PRESENTING COMPLAINTS\" &&\n        HisDate.toStandardHisFormat(el.encounter_datetime) == ObservationService.getSessionDate() \n      });\n      if(!(todayPresentingComplaints.length > 0)) {return false;}\n\n      this.presentingComplaints =   todayPresentingComplaints[0].observations;\n      return true;\n    },\n    buildResults() {\n      const columns = [ 'Group','Presenting complaints'];\n      let group = \"\";\n      let rows =this.presentingComplaints.map((item: any) =>{\n        if(item.obs_group_id != null)\n          return [group,item.value_text]\n\n        group = item.value_text;\n      });\n      rows = rows.filter((el: any) =>{\n        return el != undefined\n      })\n      this.presentingComplaints = rows;\n      return [\n        {\n          label: '',\n          value: '',\n          other: { columns, rows},\n        },\n      ];\n    },\n\n    getFields(): Array<Field>{\n      return [\n        {\n          id: \"triage_complaints\",\n          helpText: \"Triaging Complaints\",\n          condition: () => this.hasTriageComplaints,\n          type: FieldType.TT_TABLE_VIEWER,\n          options: (d: any) => this.buildResults(),\n          config: {\n            hiddenFooterBtns: [\"Clear\"],\n          },\n        },\n        {\n          id: 'complaints',\n          helpText: 'Presenting Complaints',\n          type: FieldType.TT_COMPLAINTS_PICKER,\n          validation: (data: any) => Validation.required(data),\n          computedValue: (options: Option[]) => {\n            return options.map(async (option)=> ({\n              ...(await this.complaintsService.buildValueCoded('Presenting complaint', option.other.parent)),\n              child: (await this.complaintsService.buildValueCodedFromConceptId(option.other.parent, option.other.concept_id))\n            }))\n          },\n          config: {\n            hiddenFooterBtns: [ this.showRadiologyOdersBtn(), this.disableBackBtn()],\n            footerBtns: [\n              {\n                name: \"Lab Order\",\n                size: \"large\",\n                slot: \"end\",\n                color: \"primary\",\n                visible: true,\n                onClick: async () => await this.launchOrderSelection(),\n                visibleOnStateChange: (state: Record<string, any>) => {\n                  return state.index === 1;\n                },\n              },\n              {\n                name: this.radiologyBtnName,\n                size: \"large\",\n                slot: \"end\",\n                color: \"primary\",\n                visible: true,\n                onClick: async () => await this.launchRadiologyOrderSelection(),\n                visibleOnStateChange: (state: Record<string, any>) => {\n                  return state.index === 1;\n                },\n              }\n            ],\n          }\n        },\n        {\n          id: \"all_presenting_complaints\",\n          helpText: \"Summary\",\n          condition: () => this.presentingComplaints.length > 0,\n          type: FieldType.TT_SUMMARY,\n          options: (d: any, b: any) => this.buildSummaryResults(d),\n          config: {\n            hiddenFooterBtns: [\"Clear\"],\n          },\n        },\n      ]\n    },\n    showRadiologyOdersBtn() {\n      if(this.isPacsEnabled) {\n        return ''\n      } else return this.radiologyBtnName\n    },\n    buildSummaryResults(data: any) {\n      const OPDComplaint = data.complaints.map((value: any)=>{\n        return {\n          'label': \"OPD Complaints\",\n          'value': value.label,\n        };\n      })\n      const triageComplaint = this.presentingComplaints.map((value: any)=>{\n        return {\n          'label': 'Triaging Complaints',\n          'value': value[1],\n        };\n      })\n      return OPDComplaint.concat(triageComplaint);\n    },\n    disableBackBtn() {\n      if(this.hasTriageComplaints) {\n        return ''\n      } else return 'Back'\n    }\n  }\n})\n","import { render } from \"./Complaints.vue?vue&type=template&id=ac007cae&ts=true\"\nimport script from \"./Complaints.vue?vue&type=script&lang=ts\"\nexport * from \"./Complaints.vue?vue&type=script&lang=ts\"\n\nimport \"./Complaints.vue?vue&type=style&index=0&id=ac007cae&lang=css\"\n\nimport exportComponent from \"/home/andrew-dev/Projects/HIS-Core/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"sourceRoot":""}