(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-dbf1a2b0"],{1411:function(t,e,n){"use strict";n.r(e);var i=n("7a23");function a(t,e,n,a,s,o){const r=Object(i["resolveComponent"])("his-standard-form");return Object(i["openBlock"])(),Object(i["createBlock"])(r,{fields:t.fields,onFinishAction:t.onFinish,skipSummary:!0,cancelDestinationPath:t.cancelDestination},null,8,["fields","onFinishAction","cancelDestinationPath"])}var s=n("d95e"),o=n("7920"),r=n("2706"),c=n("7365"),l=n("8df6"),u=n("e86e"),p=Object(i["defineComponent"])({mixins:[c["a"]],components:{HisStandardForm:o["a"]},data:()=>({patientType:{}}),watch:{patient:{async handler(){this.patientType=new l["a"](this.patientID,this.providerID),await this.patientType.loadPatientType(),this.fields=this.getFields()},deep:!0}},methods:{async onFinish(t){},getFacilities(t=""){return Object(u["b"])(t)},getFields(){return[{id:"via_test_results",helpText:"VIA test results",type:s["b"].TT_SELECT,validation:t=>r["a"].required(t),options:()=>this.mapOptions(["Negative","Positive","Suspect"])},{id:"pap_smear",helpText:"PAP Smear Results",type:s["b"].TT_SELECT,validation:t=>r["a"].required(t),options:()=>this.mapOptions(["PAP Smear normal","PAP Smear abnormal"])},{id:"hpv_dna",helpText:"HPV DNA Test Results",type:s["b"].TT_SELECT,validation:t=>r["a"].required(t),options:()=>this.mapOptions(["HPV negative","HPV positive"])},{id:"speculum_exam",helpText:"Speculum Exam Results",type:s["b"].TT_SELECT,validation:t=>r["a"].required(t),options:()=>this.mapOptions(["Visible Lesion","No Visible lesion","Other gynaecological condition"])}]}}}),d=n("6b0d"),m=n.n(d);const h=m()(p,[["render",a]]);e["default"]=h},e86e:function(t,e,n){"use strict";n.d(e,"b",(function(){return s})),n.d(e,"c",(function(){return o})),n.d(e,"e",(function(){return r})),n.d(e,"d",(function(){return c})),n.d(e,"a",(function(){return l})),n.d(e,"f",(function(){return u})),n.d(e,"g",(function(){return p}));var i=n("5713"),a=n("2ef0");async function s(t=""){const e=await i["a"].getFacilities({name:t});return e.filter(t=>!Object(a["isEmpty"])(t)).map(t=>({label:t.name,value:t.location_id,other:t}))}async function o(t=""){const e=await i["a"].getFacilities({name:t,tag:"Facility adult sections"});return e.map(t=>({label:t.name,value:t.name,other:t}))}async function r(){const t=await i["a"].getSpecialistClinics();return t.map(t=>({label:t.name,value:t.name,other:t}))}async function c(){const t=await i["a"].getRegions();return t.map(t=>({label:t.name,value:t.region_id,other:t}))}async function l(t){const e=await i["a"].getDistricts(t);return e.map(t=>({label:t.name,value:t.district_id,other:t}))}async function u(t,e=""){const n=await i["a"].getTraditionalAuthorities(t,e);return n.map(t=>({label:t.name,value:t.traditional_authority_id,other:t}))}async function p(t,e=""){const n=await i["a"].getVillages(t,e);return n.map(t=>({label:t.name,value:t.village_id,other:t}))}}}]);
//# sourceMappingURL=chunk-dbf1a2b0.dfe62e11.js.map