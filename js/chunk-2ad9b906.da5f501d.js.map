{"version":3,"sources":["webpack:///./node_modules/eslint-loader/index.js","webpack:///./node_modules/cache-loader/dist/cjs.js","webpack:///./src/apps/ART/views/encounters/StagingMixin.vue"],"names":["DEFAULT_KEYPAD","VITALS_KEYPAD","DRUG_DISPENSER_KEYPAD","CD4_COUNT_PAD_LO","SYMBOLS","NUMBER_PAD_LO","MONTHLY_DAYS_LO","ALPHABETICAL_LO","QWERTY_LO","CHARACTERS_AND_NUMBERS_LO","NOTE_PAD_KEYBOARD","LOGIN_KEYBOARD","SYMBOLS_CONFIG","NUMBERS_ONLY","NUMBERS_WITH_UNKNOWN","NUMBERS_WITH_ESTIMATE","NUMBERS_WITHOUT_NA_UNKNOWN","NUMBERS","MONTHLY_DAYS","A_TO_Z","QWERTY","KEY_BTN_NAV","btn","keyboard","EstimationFieldType","label","value","getYearField","id","name","showUnknown","primaryFunctions","push","helpText","appearInSummary","type","FieldType","TT_TEXT","config","customKeyboard","getMonthField","TT_SELECT","options","MonthOptions","getDayField","TT_MONTHLY_DAYS","getMonthDurationEstimateField","getAgeEstimateField","TT_NUMBER","keypad","appendLeadingZero","s","parseInt","getDefaultDate","form","field","datePart","defaultValue","date","year","month","day","split","d","HisDate","toStandardHisDisplayFormat","validateMinMax","computed","minDate","min","Date","maxDate","max","generateDateFields","refDate","fullDate","yearValue","monthValue","dayValue","dateIsEstimated","yearID","monthID","dayID","ageEstimateID","durationEstimateID","estimation","allowUnknown","ageEstimate","durationEstimate","estimateMonthOrDay","allowUnknownMonthDay","datePartCondition","f","includes","condition","buildHelpTextDate","part","parts","default","reduce","partValues","dpart","wl","undefined","join","init","updateHelpTextOnValue","data","proxyID","unload","v","toString","validation","c","required","StandardValidations","match","isNaN","minYear","getYear","summaryMapValue","summaryLabel","_","ref","computedValue","val","computeValue","beforeNext","keyboardActions","valueEstimateCondition","estimateType","conditions","estimationFieldType","every","Boolean","ageEstimateRegex","dayjs","Service","getSessionDate","subtract","AGE_ESTIMATE_FIELD","format","STANDARD_DATE_FORMAT","MONTH_ESTIMATE_FIELD","ADULT_WHO_STAGE_CRITERIA","concept","priority","stage","reasonForArt","reason","CHILD_WHO_STAGE_CRITERIA","CONTRADICTING_STAGE_DEFINITIONS_ALERTS","actions","alert","alertConfirmation","facts","bmi","confirmBtnLabel","cancelBtnLabel","selectedCondition","keepAsymptomatic","selectedConditions","stageThreeConditions","stageFourConditions","stageTwoConditions","RECOMMENDED_CHILD_STAGING_CONDITIONS","isChecked","description","color","show","info","weightPercentile","disabled","RECOMMENDED_ADULT_STAGING_CONDITIONS","CHILD_ART_ELIGIBILITY","ageInMonths","age","pshdConditions","ConceptService","getConceptsByCategory","pshdCondition","testType","cd4","cd4Modifier","modifier","ADULT_ART_ELIGIBILITY","severeSymp","found","total","symp","gender","breastFeeding","answer","pregnant","StagingCategory","StagingService","AppEncounterService","constructor","patientID","providerID","confirmatoryTest","isAdult","isPedaid","setAge","getFacilities","filter","LocationService","getConfirmatoryTestType","cd4CountIsValid","e","getAlertGuidelines","getWhoStageGuidelines","getProgramEligibilityGuidelines","getRecommendedConditionGuidelines","getStagingConditions","category","getStagingCategoryByNum","buildWhoStageObs","buildValueCoded","buildWhoCriteriaObs","buildReasonForArtObs","stageNumber","ADULT_STAGE_1","PEDAID_STAGE_1","ADULT_STAGE_2","PEDAID_STAGE_2","ADULT_STAGE_3","PEDAID_STAGE_3","ADULT_STAGE_4","PEDAID_STAGE_4","test","getFirstValueCoded","defineComponent","mixins","EncounterMixinVue","staging","showStagingWeightChart","canShowStagingFields","bmiObj","stagingFacts","isChildBearing","stageOneConditions","whoStage","watch","ready","handler","this","patient","getID","getAge","immediate","methods","loadHivConfirmatoryTestType","getBMI","isMale","getAgeInMonths","calculateWeightPercentile","computedValues","encounter","createEncounter","stagingObservations","resolveObs","derivedObservations","Promise","all","obs","saveObservationList","guidelines","findings","matchToGuidelines","isEmpty","ok","updateStagingFacts","curIndex","accum","cur","concat","buildStagingOptions","previouslySelected","map","conceptFinding","concept_id","setWhoStage","setReasonForArt","notAsymptomatic","stageOneC","stage_1_conditions","asymptomatics","i","hasTransferLater","has_transfer_letter","hasStaging","getStagingSummaryField","TT_ART_STAGING_SUMMARY","onload","other","title","hiddenFooterBtns","isANCclient","getSuspendedProgram","getStagingFields","TT_MULTIPLE_YES_NO","Validation","anyEmpty","factID","tag","pregnancy_status","values","yesNoOptions","TT_WEIGHT_CHART","async","getWeightHistory","x","y","weight","TT_MULTIPLE_SELECT","onValue","onStagingCondition","onConditionFalse","charAt","count","substring","buildValueNumber","computedData","isCd4","validateSeries","cd4_available","getBirthdate","getDate","isEstimate","buildValueDate","getLocationName","buildValueText","showKeyboard","isFilterDataViaApi","__exports__","facilities","trim","facility","location_id","getLabFacilities","getLabs","getFacilityWards","wards","ward","getSpecialistClinics","clinics","clinic","getRegions","regions","region","region_id","getDistricts","regionID","districts","district","district_id","getTraditionalAuthorities","districtID","TAs","TA","traditional_authority_id","getVillages","traditionalAuthorityID","villages","village","village_id"],"mappings":"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","file":"js/chunk-2ad9b906.da5f501d.js","sourcesContent":["import {LocationService} from \"@/services/location_service\"\nimport { Option } from \"@/components/Forms/FieldInterface\"\nimport { isEmpty } from \"lodash\"\n\nexport async function getFacilities(filter=''): Promise<Option[]> {\n    const facilities = await LocationService.getFacilities({name: filter})\n    return facilities.filter((f: any) => !isEmpty(f) && f.name.trim() !='')\n        .map((facility: any) => ({\n            label: facility.name,\n            value: facility.location_id,\n            other: facility\n        }))\n}\n\nexport async function getLabFacilities(filter=''): Promise<Option[]> {\n    const facilities = await LocationService.getLabs({'search_name': filter})\n    return facilities.map((facility: any) => ({\n            label: facility,\n            value: facility\n        }))\n}\n\nexport async function getFacilityWards(filter=''): Promise<Option[]> {\n    const wards = await LocationService.getFacilities({\n        name: filter,\n        tag: 'Facility adult sections'\n    })\n\n    return wards.map((ward: any) => ({\n        label: ward.name,\n        value: ward.name,\n        other: ward\n    }))\n}\n\nexport async function getSpecialistClinics(): Promise<Option[]> {\n    const clinics = await LocationService.getSpecialistClinics()\n    return clinics.map((clinic: any) => ({\n        label: clinic.name,\n        value: clinic.name,\n        other: clinic\n    }))\n}\n\nexport async function getRegions(): Promise<Option[]> {\n    const regions = await LocationService.getRegions()\n    return regions.map((region: any) => ({\n        label: region.name,\n        value: region.region_id,\n        other: region\n    }))\n}\n\nexport async function getDistricts(regionID: number): Promise<Option[]> {\n    const districts = await LocationService.getDistricts(regionID)\n    return districts.map((district: any) => ({\n        label: district.name,\n        value: district.district_id,\n        other: district\n    }))\n}\n\nexport async function getTraditionalAuthorities(districtID: number, name=''): Promise<Option[]> {\n    const TAs = await LocationService.getTraditionalAuthorities(districtID, name)\n    return TAs.map((TA: any) => ({\n        label: TA.name,\n        value: TA.traditional_authority_id,\n        other: TA\n    }))\n}\n\nexport async function getVillages(traditionalAuthorityID: number, name=''): Promise<Option[]> {\n    const villages = await LocationService.getVillages(traditionalAuthorityID, name)\n    return villages.map((village: any) => ({\n        label: village.name,\n        value: village.village_id,\n        other: village\n    }))\n}\n","\nimport { defineComponent } from 'vue'\nimport { FieldType } from \"@/components/Forms/BaseFormElements\"\nimport { Field, Option } from \"@/components/Forms/FieldInterface\"\nimport { StagingService } from \"@/apps/ART/services/staging_service\"\nimport EncounterMixinVue from '../../../../views/EncounterMixin.vue'\nimport Validation from \"@/components/Forms/validations/StandardValidations\"\nimport { generateDateFields } from \"@/utils/HisFormHelpers/MultiFieldDateHelper\"\nimport HisDate from \"@/utils/Date\"\nimport { isEmpty } from \"lodash\"\nimport { CD4_COUNT_PAD_LO } from \"@/components/Keyboard/KbLayouts\"\nimport { matchToGuidelines } from \"@/utils/GuidelineEngine\"\nimport {\n    getFacilities\n} from '@/utils/HisFormHelpers/LocationFieldOptions'\n\nexport default defineComponent({\n    mixins: [EncounterMixinVue],\n    data: () => ({\n        staging: {} as any,\n        showStagingWeightChart: true,\n        canShowStagingFields: true as boolean,\n        bmiObj: {} as any, \n        stagingFacts : {\n            age: -1 as number,\n            bmi: -1 as number,\n            gender: '' as 'M' | 'F',\n            stage: -1 as number,\n            cd4: -1 as number,\n            date: '' as string,\n            isChildBearing: false as boolean,\n            stageOneConditions: [] as Array<string>,\n            stageTwoConditions: [] as Array<string>,\n            stageThreeConditions: [] as Array<string>,\n            stageFourConditions: [] as Array<string>,\n            reasonForArt: '' as string,\n            testType: '' as string,\n            pregnant: '' as 'Yes' | 'No',\n            breastFeeding: '' as 'Yes' | 'No',\n            selectedCondition: '' as string,\n            selectedConditions: [] as Array<string>,\n            weightPercentile: -1 as number,\n            ageInMonths: -1 as number,\n            cd4Modifier: '' as string,\n            whoStage: '' as string\n        }\n    }),\n    watch: {\n        ready : {\n            handler(v) {\n                if (v) {\n                    this.staging = new StagingService(this.patient.getID(), this.patient.getAge(), this.providerID)\n                }\n            },\n            immediate: true\n        }\n    },\n    methods: {\n        async initStaging(patient: any) {\n            await this.staging.loadHivConfirmatoryTestType()\n            this.bmiObj = await patient.getBMI()\n            this.stagingFacts.age = patient.getAge()\n            this.stagingFacts.bmi = this.bmiObj['index']\n            this.stagingFacts.date = StagingService.getSessionDate()\n            this.stagingFacts.gender = patient.isMale() ? 'M' : 'F' \n            this.stagingFacts.testType = this.staging.getConfirmatoryTestType()\n            this.stagingFacts.ageInMonths = patient.getAgeInMonths()\n            this.stagingFacts.isChildBearing = patient.isChildBearing()\n\n            if (this.staging.isPedaid()) {\n                this.stagingFacts.weightPercentile = await patient.calculateWeightPercentile()\n            }\n        },\n        async submitStaging(computedValues: any) {\n            const encounter = await this.staging.createEncounter()\n\n            if (!encounter) throw 'Unable to create staging encounter'\n\n            const stagingObservations = await this.resolveObs(computedValues, 'staging')\n            const derivedObservations = await Promise.all([\n                this.buildReasonForArtObs(), this.buildWhoStageObs()\n            ])\n\n            const obs = await this.staging.saveObservationList([\n                ...stagingObservations, ...derivedObservations\n            ])\n\n            if (!obs) throw 'Unable to save patient observations'\n        },\n        async onStagingCondition({ label }: Option) {\n            this.stagingFacts.selectedCondition = label\n \n            const guidelines =  this.staging.getAlertGuidelines()\n            const findings = matchToGuidelines(this.stagingFacts, guidelines)\n\n            if (isEmpty(findings)) \n                return true\n\n            if (findings[0]?.actions && findings[0]?.actions.alert) {\n                const ok = await findings[0]?.actions.alert(this.stagingFacts)\n                return ok ? true : false\n            }\n            return true\n        },\n        getFacilities(filter='') {\n            return getFacilities(filter)\n        },\n        updateStagingFacts() {\n            const conditions = [\n                this.stagingFacts.stageOneConditions,\n                this.stagingFacts.stageTwoConditions,\n                this.stagingFacts.stageThreeConditions,\n                this.stagingFacts.stageFourConditions, \n            ]\n            this.stagingFacts.stage = conditions.reduce(\n                (stage, conditions: string[], curIndex) =>\n                    isEmpty(conditions) ? stage : curIndex + 1\n                , 0)\n            this.stagingFacts.selectedConditions = conditions.reduce(\n                (accum, cur) => accum.concat(cur), []\n            )\n        },\n        buildReasonForArtObs() {\n            return this.staging.buildReasonForArtObs(this.stagingFacts.reasonForArt)\n        },\n        buildWhoStageObs() {\n            return this.staging.buildWhoStageObs(this.stagingFacts.whoStage)\n        },\n        buildStagingOptions(stage: number, previouslySelected=[] as Array<string>) {\n            const guidelines = this.staging.getRecommendedConditionGuidelines()\n\n            return this.staging.getStagingConditions(stage).map((concept: any) => {\n                let disabled = false\n                let description: unknown\n                let isChecked = previouslySelected.includes(concept.name)\n                this.stagingFacts.selectedCondition = concept.name\n\n                const findings = matchToGuidelines(this.stagingFacts, guidelines)\n\n                if (!isEmpty(findings)) {\n                    const conceptFinding = findings[0] //get the first item only\n                    if (conceptFinding?.actions?.isChecked) {\n                        isChecked = true\n                    }\n                    if (conceptFinding?.actions?.disabled) {\n                        disabled = true\n                    }\n                    description = conceptFinding.description\n                }\n                return {\n                    label: concept.name,\n                    value: concept.concept_id,\n                    isChecked,\n                    disabled,\n                    description\n                }\n            })\n        },\n        setWhoStage() {\n            const guidelines = this.staging.getWhoStageGuidelines()\n            const findings = matchToGuidelines(this.stagingFacts, guidelines)\n            this.stagingFacts.whoStage = findings[0]?.concept || ''\n        },\n        setReasonForArt() {\n            const guidelines = this.staging.getProgramEligibilityGuidelines()\n            const findings = matchToGuidelines(this.stagingFacts, guidelines)\n            this.stagingFacts.reasonForArt = findings[0]?.concept || ''\n        },\n        notAsymptomatic(f: any) {\n            const stageOneC = f.stage_1_conditions\n            if (stageOneC) {\n                const asymptomatics = stageOneC.filter((i: Option) => {\n                    return i.label.match(/asymptomatic/i) && i.isChecked\n                })\n                return isEmpty(asymptomatics)\n            }\n            return true\n        },\n        hasTransferLater(f: Record<string, any>): boolean {\n            if ('has_transfer_letter' in f) {\n                return f.has_transfer_letter && f.has_transfer_letter.value === 'Yes'\n            }\n            return false\n        },\n        hasStaging(f: Record<string, any>) {\n            // For components that have Optional staging\n            if (this.hasTransferLater(f)) {\n                return true\n            }\n            return this.canShowStagingFields\n        },\n        getStagingSummaryField(helpText=\"Summary\" as string) {\n            return {\n                id: 'summary',\n                helpText,\n                type: FieldType.TT_ART_STAGING_SUMMARY,\n                condition: (f: any) => this.hasStaging(f),\n                onload: () => {\n                    this.setReasonForArt()\n                    this.setWhoStage()\n                },\n                options: () => [\n                    { \n                        label: 'WHO Stage', \n                        value: this.stagingFacts.whoStage,\n                        other: {\n                            type: 'title-section'\n                        }\n                    },\n                    { \n                        label: 'Condition on starting ART', \n                        value: this.stagingFacts.reasonForArt,\n                        other: {\n                            type: 'title-section'\n                        } \n                    },\n                    ...this.stagingFacts.selectedConditions.map((i: string) => ({ label: i, value: i }))\n                ],\n                config: {\n                    title: 'Selected stage defining conditions',\n                    hiddenFooterBtns: [\n                        'Clear'\n                    ]\n                }\n            }\n        },\n        isANCclient() {\n            return StagingService.getSuspendedProgram() === 'ANC'\n        },\n        getStagingFields(): Array<Field> {\n            return [\n                {\n                    id: 'pregnancy_status',\n                    helpText: 'Pregnant / Breastfeeding',\n                    type: FieldType.TT_MULTIPLE_YES_NO,\n                    validation: (v: any) => Validation.anyEmpty(v),\n                    summaryMapValue: (d: Option) => ({ \n                        label: d.label, \n                        value: d.value \n                    }),\n                    computedValue: (data: Array<Option>, f: Record<string, any>) => {\n                        let obs = []\n                        // For ANC clients, mark pregnancy status as 'Yes' always!!\n                        // The assumption here is also that the pregnancy option is not available for selection\n                        if (this.isANCclient() && !this.hasTransferLater(f)) {\n                            this.stagingFacts['pregnant'] = 'Yes' \n                            obs.push(this.staging.buildValueCoded('Is patient pregnant', 'Yes'))\n                        }\n                        obs = obs.concat(data.map(d => {\n                            const  { value, other } = d\n\n                            const factID: 'pregnant' | 'breastFeeding' = other.factID\n\n                            this.stagingFacts[factID] = `${value}`.match(/Yes/i) ? 'Yes' : 'No'\n\n                            return this.staging.buildValueCoded(other.concept, value)\n                        }))\n                        return {\n                            obs,\n                            tag: 'staging'\n                        }\n                    },\n                    options: (f: any) => {\n                        if (!isEmpty(f.pregnancy_status)) {\n                            return f.pregnancy_status\n                        } else {\n                            const options = []\n                            // Hide pregnancy option for ANC clients who are not transferr in\n                            if (!this.isANCclient() || this.hasTransferLater(f)) {\n                                options.push({\n                                    label: 'Pregnant?',\n                                    value: '',\n                                    other: {\n                                        values: this.yesNoOptions(),\n                                        concept: 'Is patient pregnant',\n                                        factID: 'pregnant'\n                                    }\n                                })\n                            }\n                            options.push({\n                                label: 'Breastfeeding?',\n                                value: '',\n                                other: {\n                                    values: this.yesNoOptions(),\n                                    concept: 'Is patient breast feeding',\n                                    factID: 'breastFeeding'\n                                }\n                            })\n                            return options\n                        }\n                    },\n                    condition: (f: any) => this.hasStaging(f) && this.stagingFacts.isChildBearing,\n                },\n                {\n                    id: 'patient_weight_chart',\n                    helpText: 'Weight history',\n                    type: FieldType.TT_WEIGHT_CHART,\n                    options: async () => {\n                        let values = await this.patient.getWeightHistory()\n                        values = values.map((d: any) => ({ \n                            x: HisDate.toStandardHisDisplayFormat(d.date), \n                            y: d.weight\n                        }))\n                        return [\n                            {\n                                label: \"Weight for patient\",\n                                value: \"Weight trail\",\n                                other: {\n                                    values,\n                                    age: this.patient.getAge(),\n                                    bmi: this.bmiObj\n                                }\n                            }\n                        ]\n                    },\n                    config: {\n                        hiddenFooterBtns: [\n                            'Clear'\n                        ]\n                    },\n                    condition: (f: any) => this.hasStaging(f) && this.showStagingWeightChart\n                },\n                {\n                    id: 'stage_4_conditions',\n                    helpText: 'Stage 4 conditions',\n                    type: FieldType.TT_MULTIPLE_SELECT,\n                    options: () => this.buildStagingOptions(4, this.stagingFacts.stageFourConditions),\n                    onValue: (v: Option) => this.onStagingCondition(v),\n                    computedValue: (d: Array<Option>) => {\n                        return {\n                            tag: 'staging',\n                            obs: d.map(i => this.staging.buildWhoCriteriaObs(i.label))\n                        }\n                    },\n                    unload: (d: Option[]) => {\n                        this.stagingFacts.stageFourConditions = d.map(i => i.label)\n                        this.updateStagingFacts()\n                    },\n                    onConditionFalse: () => {\n                        this.stagingFacts.stageFourConditions = []\n                        this.updateStagingFacts()\n                    },\n                    condition: (f: any) => this.hasStaging(f) && this.notAsymptomatic(f),\n                },\n                {\n                    id: 'stage_3_conditions',\n                    helpText: 'Stage 3 conditions',\n                    type: FieldType.TT_MULTIPLE_SELECT,\n                    options: () => this.buildStagingOptions(3, this.stagingFacts.stageThreeConditions),\n                    onValue: (v: Option) => this.onStagingCondition(v),\n                    computedValue: (d: Array<Option>) => {\n                        return {\n                            tag: 'staging',\n                            obs: d.map(i => this.staging.buildWhoCriteriaObs(i.label))\n                        }\n                    },\n                    unload: (d: Option[]) => {\n                        this.stagingFacts.stageThreeConditions = d.map(i => i.label)\n                        this.updateStagingFacts()\n                    },\n                    onConditionFalse: () => {\n                        this.stagingFacts.stageThreeConditions = []\n                        this.updateStagingFacts()\n                    },\n                    condition: (f: any) => this.hasStaging(f) && this.notAsymptomatic(f),\n                },\n                {\n                    id: 'stage_2_conditions',\n                    helpText: 'Stage 2 conditions',\n                    type: FieldType.TT_MULTIPLE_SELECT,\n                    options: () => this.buildStagingOptions(2, this.stagingFacts.stageTwoConditions),\n                    onValue: (v: Option) => this.onStagingCondition(v),\n                    computedValue: (d: Option[]) => {\n                        return {\n                            tag: 'staging',\n                            obs: d.map(i => this.staging.buildWhoCriteriaObs(i.label))\n                        }\n                    },\n                    unload: (d: Option[]) => {\n                        this.stagingFacts.stageTwoConditions = d.map(i => i.label)\n                        this.updateStagingFacts()\n                    },\n                    onConditionFalse: () => {\n                        this.stagingFacts.stageTwoConditions = []\n                        this.updateStagingFacts()\n                    },\n                    condition: (f: any) => this.hasStaging(f) && this.notAsymptomatic(f),\n                },\n                {\n                    id: 'stage_1_conditions',\n                    helpText: 'Stage 1 conditions',\n                    type: FieldType.TT_MULTIPLE_SELECT,\n                    validation: (val: any) => {\n                        if (isEmpty(val) && isEmpty(this.stagingFacts.selectedConditions))\n                            return ['Please provide atleast one staging condition']\n                    },\n                    options: () => this.buildStagingOptions(1, this.stagingFacts.stageOneConditions),\n                    onValue: (v: Option) => this.onStagingCondition(v),\n                    computedValue: (d: Array<Option>) => {\n                        const data = d.map(i => i.label)\n                        this.stagingFacts.stageOneConditions = data\n                        this.updateStagingFacts()\n                        return {\n                            tag: 'staging',\n                            obs: data.map(i => this.staging.buildWhoCriteriaObs(i))\n                        }\n                    },\n                    condition: (f: any) => this.hasStaging(f),\n                },\n                {\n                    id: 'cd4_available',\n                    helpText: 'Recent CD4 count results available?',\n                    type: FieldType.TT_SELECT,\n                    condition: (f: any) => this.hasStaging(f),\n                    validation: (val: any) => Validation.required(val),\n                    options: () => this.yesNoOptions()\n                },\n                {\n                    id: 'cd4_count',\n                    helpText: 'CD4 Count',\n                    type: FieldType.TT_TEXT,\n                    computedValue: (d: Option) => {\n                        const value = d.value.toString()\n                        const modifier = value.charAt(0)\n                        const count = parseInt(value.substring(1))\n                        return {\n                            tag: 'staging',\n                            modifier,\n                            count,\n                            obs: this.staging.buildValueNumber(\n                                'CD4 count', count, modifier\n                            )\n                        }\n                    },\n                    unload: (d: any, s: any, f: any, computedData: any) => {\n                        const { count, modifier } = computedData['cd4_count']\n                        this.stagingFacts.cd4 = count\n                        this.stagingFacts.cd4Modifier = modifier\n                    },\n                    onConditionFalse: () => {\n                        this.stagingFacts.cd4 = -1\n                        this.stagingFacts.cd4Modifier = ''\n                    },\n                    validation: (val: any) => {\n                        const isCd4 = () => this.staging.cd4CountIsValid(val.value)\n                        return this.validateSeries([\n                            () => Validation.required(val),\n                            () => !isCd4() ? ['Please start with either modifier first: >, <, or ='] : null\n                        ])\n                    },\n                    config: {\n                        customKeyboard: [\n                            CD4_COUNT_PAD_LO,\n                            [\n                                ['Unknown', 'Delete']\n                            ]\n                        ]\n                    },\n                    condition: (f: any) => this.hasStaging(f) && f.cd4_available.value === 'Yes',\n                },\n                ...generateDateFields({\n                    id: 'cd4_result_date',\n                    helpText: 'Cd4 Results',\n                    required: true,\n                    minDate: () => this.patient.getBirthdate(),\n                    maxDate: () => this.staging.getDate(),\n                    condition: (f: any) =>  this.hasStaging(f) && f.cd4_available.value === 'Yes',\n                    estimation: {\n                        allowUnknown: false\n                    },\n                    computeValue: (date: string, isEstimate: boolean) => {\n                        return {\n                            date,\n                            tag: 'staging',\n                            isEstimate,\n                            obs: this.staging.buildValueDate('Cd4 count datetime', date) \n                        }\n                    }\n                }, this.staging.getDate()),\n                {\n                    id: 'location',\n                    helpText: 'CD4 Location',\n                    type: FieldType.TT_SELECT,\n                    defaultValue: () => StagingService.getLocationName(),\n                    computedValue: ({ label }: Option) => ({\n                        tag: 'staging',\n                        obs: this.staging.buildValueText('Cd4 count location', label)\n                    }),\n                    validation: (val: any) => Validation.required(val),\n                    options: (_, filter='') => this.getFacilities(filter),\n                    config: {\n                        showKeyboard: true,\n                        isFilterDataViaApi: true\n                    },\n                    condition: (f: any) => this.hasStaging(f) && f.cd4_available.value === 'Yes',\n                }\n            ]\n        }\n    }\n})\n","import script from \"./StagingMixin.vue?vue&type=script&lang=ts\"\nexport * from \"./StagingMixin.vue?vue&type=script&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__"],"sourceRoot":""}