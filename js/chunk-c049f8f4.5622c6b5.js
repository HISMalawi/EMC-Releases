(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-c049f8f4"],{"5ca2":function(e,t,i){"use strict";i.d(t,"a",(function(){return o}));var a=i("cc6f"),n=i("b89f");class o extends a["a"]{constructor(e,t){super(e,121,t)}static getListOfRadiologyTests(e){return super.getJson("radiology_set",{id:e})}getPatientExaminations(){return a["a"].getJson("radiology/examinations",{patient_id:this.patientID})}createOrder(e){return a["a"].postJson("orders/radiology",e)}printExamination(e){const t=new n["a"];return t.printLbl("orders/radiology?accession_number="+e)}}},b14f:function(e,t,i){"use strict";i.r(t);var a=i("7a23");function n(e,t,i,n,o,s){const r=Object(a["resolveComponent"])("his-standard-form"),l=Object(a["resolveComponent"])("ion-page");return Object(a["openBlock"])(),Object(a["createBlock"])(l,null,{default:Object(a["withCtx"])(()=>[Object(a["createVNode"])(r,{fields:e.fields,onFinishAction:e.onFinish,cancelDestinationPath:e.cancelDestination},null,8,["fields","onFinishAction","cancelDestinationPath"])]),_:1})}var o=i("7365"),s=i("7920"),r=i("8a30"),l=i("d95e"),d=i("2706"),u=i("5ca2"),c=i("1c74");class p extends c["e"]{constructor(){super()}static getInternalSections(){return super.getJson("internal_sections")}static createInternalSection(e){return super.postJson("internal_sections",{name:e})}}var h=i("2ef0"),m=i("b5e4"),v=i("80b5"),f=i("f149"),b=Object(a["defineComponent"])({mixins:[o["a"]],components:{IonPage:r["D"],HisStandardForm:s["a"]},data:()=>({service:{},examinationOptions:[],defaultExternalLocation:"",detailedExaminationOptions:[]}),watch:{ready:{handler(e){e&&(this.service=new u["a"](this.patientID,this.providerID),this.fields.push(this.listOfRadiologyTestsField()),this.fields.push(this.examinationField()),this.fields.push(this.detailedExaminationField()),this.fields.push(this.referralTypeField()),this.fields.push(this.internalReferralField()),this.fields.push(this.externalReferralField()),this.fields.push(this.payingField()),this.fields.push(this.paymentTypeField()),this.fields.push(this.receiptField()),this.fields.push(this.paymentAmountField()),this.fields.push(this.invoiceField()),this.fields.push(this.invoiceAmountField()))},immediate:!0}},methods:{async getTestsOptions(e){return(await u["a"].getListOfRadiologyTests(e)).map(e=>({label:e.name,value:e.concept_id}))},validateAmount(e){return e.match(/([0-9]+\\.[0-9])|Unknown$/i)?["You must enter a decimal number"]:null},async onFinish(e,t){await this.service.createEncounter(),await this.service.saveObservationList(await this.resolveObs(t));for(const i of Object.values(t))if("function"===typeof i.order){const e=await this.service.createOrder(i.order(this.service.getEncounterID()));"object"===typeof e&&e.accession_number&&this.service.printExamination(e.accession_number)}this.gotoPatientDashboard()},listOfRadiologyTestsField(){let e=[],t=-1;return{id:"list_of_radiology_test",helpText:"Please select the type of examination",type:l["b"].TT_SELECT,validation:e=>d["a"].required(e),computedValue:e=>({obs:this.service.buildValueCoded("RADIOLOGY TEST",e.value),order:t=>{const i={encounter_id:t,concept_id:e.value};return-1!=this.providerID&&(i["provider_id"]=this.providerID),i}}),beforeNext:async e=>(t!=e.value&&(t=e.value,this.examinationOptions=await this.getTestsOptions(e.value)),!0),options:async()=>(Object(h["isEmpty"])(e)&&(e=await this.getTestsOptions("LIST OF RADIOLOGY TESTS")),e)}},examinationField(){let e=-1;return{id:"examination",helpText:"Please select the examination",type:l["b"].TT_SELECT,validation:e=>d["a"].required(e),computedValue:e=>({obs:this.service.buildValueCoded("Examination",e.value)}),condition:()=>!Object(h["isEmpty"])(this.examinationOptions),beforeNext:async(t,i)=>(e!=i.list_of_radiology_test.value&&(e=t.value,this.detailedExaminationOptions=await this.getTestsOptions(e)),!0),options:()=>this.examinationOptions}},detailedExaminationField(){return{id:"detailed_examination",helpText:"Please select the detailed examination",type:l["b"].TT_SELECT,condition:()=>!Object(h["isEmpty"])(this.detailedExaminationOptions),computedValue:e=>({obs:this.service.buildValueCoded("Detailed examination",e.value)}),validation:e=>d["a"].required(e),options:()=>this.detailedExaminationOptions}},referralTypeField(){return{id:"referral_type",helpText:"Please select the referral type",type:l["b"].TT_SELECT,validation:e=>d["a"].required(e),computedValue:e=>({obs:this.service.buildValueText("Source of referral",e.label)}),options:()=>this.mapStrToOptions(["External","Internal"])}},externalReferralField(){const e=v["a"].getFacilityLocationField();return e.id="external_referral",e.init=async()=>(this.defaultExternalLocation=await f["b"].defaultReferralLocation(),!0),e.defaultValue=()=>this.defaultExternalLocation,e.condition=e=>"External"===e.referral_type.value,e.computedValue=e=>({obs:this.service.buildValueText("REFERRED FROM",e.label)}),e},internalReferralField(){let e=[];return{id:"referred_by",helpText:"Referred from",type:l["b"].TT_SELECT,validation:e=>d["a"].required(e),condition:e=>"Internal"===e.referral_type.value,computedValue:e=>({obs:this.service.buildValueText("REFERRED FROM",e.label)}),options:async()=>(Object(h["isEmpty"])(e)&&(e=(await p.getInternalSections()).map(e=>({value:e.id,label:(""+(null===e||void 0===e?void 0:e.name)).toUpperCase()}))),e),config:{showKeyboard:!0,footerBtns:[{name:"Add Referral",slot:"end",color:"success",onClick:async(e,t,i)=>{if("string"!=typeof i.filter||i.filter.length<3)return Object(m["e"])("Please enter a valid name");if(i.filtered.some(e=>e.label.toLowerCase()===i.filter.toLowerCase()))return Object(m["e"])("Can't add already existing referral location");if(await Object(m["a"])("Do you want to add referral location?")){const e=await p.createInternalSection(i.filter.toUpperCase());e?(i.filter=e.name,i.listData=[{label:e.name,value:e.id},...i.listData]):Object(m["c"])("Unable to add "+i.filter)}}}]}}},payingField(){return{id:"paying",helpText:"Is this a paying patient?",type:l["b"].TT_SELECT,computedValue:e=>({obs:this.service.buildValueCoded("PAYING",e.value)}),validation:e=>d["a"].required(e),options:()=>this.yesNoOptions()}},paymentTypeField(){return{id:"payment_type",helpText:"Select payment method",type:l["b"].TT_SELECT,validation:e=>d["a"].required(e),condition:e=>"Yes"===e.paying.value,computedValue:e=>({obs:this.service.buildValueCoded("PAYMENT TYPE",e.value)}),options:()=>this.mapStrToOptions(["Cash","Invoice"])}},receiptField(){return{id:"receipt_number",helpText:"Enter receipt number",type:l["b"].TT_TEXT,condition:e=>"Cash"===e.payment_type.value,computedValue:e=>({obs:this.service.buildValueText("RECEIPT NUMBER",e.value)}),validation:e=>d["a"].validateSeries([()=>d["a"].required(e),()=>this.validateAmount(""+e.value)])}},invoiceField(){return{id:"invoice_number",helpText:"Enter invoice number",type:l["b"].TT_TEXT,computedValue:e=>({obs:this.service.buildValueText("INVOICE NUMBER",e.value)}),condition:e=>"Invoice"===e.payment_type.value,validation:e=>d["a"].required(e)}},paymentAmountField(){return{id:"payment_amount",helpText:"Enter payment amount",type:l["b"].TT_NUMBER,condition:e=>e.receipt_number.value,computedValue:e=>({obs:this.service.buildValueNumber("PAYMENT AMOUNT",e.value)}),validation:e=>d["a"].validateSeries([()=>d["a"].required(e),()=>this.validateAmount(""+e.value)])}},invoiceAmountField(){return{id:"invoice_amount",helpText:"Enter invoice amount",type:l["b"].TT_NUMBER,condition:e=>e.invoice_number.value,computedValue:e=>({obs:this.service.buildValueNumber("INVOICE AMOUNT",e.value)}),validation:e=>d["a"].validateSeries([()=>d["a"].required(e),()=>this.validateAmount(""+e.value)])}}}}),T=i("6b0d"),y=i.n(T);const E=y()(b,[["render",n]]);t["default"]=E},f149:function(e,t,i){"use strict";i.d(t,"a",(function(){return a}));var a,n=i("ad49");(function(e){e["DEFAULT_REFERRAL_LOCATION"]="default.referral.location"})(a||(a={})),t["b"]={defaultReferralLocation:()=>n["a"].get(a.DEFAULT_REFERRAL_LOCATION)}}}]);
//# sourceMappingURL=chunk-c049f8f4.5622c6b5.js.map