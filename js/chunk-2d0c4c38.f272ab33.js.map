{"version":3,"sources":["webpack:///./src/apps/Registration/views/encounters/Services.vue?c750","webpack:///./src/apps/Registration/services/patient_services_service.ts","webpack:///./src/apps/Registration/views/encounters/Services.vue","webpack:///./src/apps/Registration/views/encounters/Services.vue?3247"],"names":["render","_ctx","_cache","$props","$setup","$data","$options","_component_his_standard_form","_resolveComponent","_openBlock","_createBlock","cancelDestinationPath","cancelDestination","fields","onFinishAction","onSubmit","PatientServicesService","patientID","providerID","AppEncounterService","defineComponent","components","HisStandardForm","mixins","EncounterMixinVue","data","patientServicesService","watch","ready","handler","isReady","patient","getID","getFields","immediate","deep","methods","formData","computedData","createEncounter","encounter","toastWarning","resolveObs","registrationData","saveObservationList","registrationObs","nextTask","id","helpText","type","FieldType","TT_SELECT","validation","value","Validation","required","computedValue","v","obs","buildValueText","options","mapOptions","__exports__"],"mappings":"yIAEM,SAAUA,EAAOC,EAAMC,EAAQC,EAAQC,EAAQC,EAAOC,GAC1D,IAAMC,EAA+BC,8BAAkB,qBAEvD,OAAQC,yBAAcC,yBAAaH,EAA8B,CAC/DI,sBAAuBV,EAAKW,kBAC5BC,OAAQZ,EAAKY,OACbC,eAAgBb,EAAKc,UACpB,KAAM,EAAG,CAAC,wBAAyB,SAAU,mB,4HCPrCC,EAAb,wDACI,WAAYC,EAAmBC,GAAkB,0CACvCD,EAAW,EAAGC,GAF5B,0BAA4CC,Q,oCCW7BC,+BAAgB,CAC3BC,WAAY,CAAEC,wBACdC,OAAQ,CAACC,QACTC,KAAM,iBAAO,CACTC,uBAAwB,KAE5BC,MAAO,CACHC,MAAO,CACGC,QADH,SACWC,GAAgB,wJACvBA,IACC,EAAKJ,uBAAyB,IAAIV,EAAuB,EAAKe,QAAQC,QAAS,EAAKd,YACpF,EAAKL,OAAS,EAAKoB,aAHG,8CAM9BC,WAAW,EACXC,MAAM,IAGdC,QAAS,CACCrB,SADD,SACUsB,EAAeC,GAAiB,kLACnB,EAAKZ,uBAAuBa,kBADT,UACrCC,EADqC,OAEtCA,EAFsC,yCAEpBC,eAAa,4CAFO,uBAIZ,EAAKC,WAAL,kBAAoBJ,IAJR,cAIrCK,EAJqC,iBAKb,EAAKjB,uBAAuBkB,oBAAoBD,GALnC,WAKrCE,EALqC,OAMtCA,EANsC,0CAMdJ,eAAa,gCANC,QAQ3C,EAAKK,WARsC,+CAW/Cb,UAZK,WAYI,WACL,MAAO,CACH,CACIc,GAAI,WACJC,SAAU,iBACVC,KAAMC,OAAUC,UAChBC,WAAY,SAACC,GAAD,OAAgBC,OAAWC,SAASF,IAChDG,cAAe,SAACC,GAAD,MAAgB,CAAEC,IAAK,EAAKhC,uBAAuBiC,eAAe,mBAAoBF,EAAEJ,SACvGO,QAAS,kBAAK,EAAKC,WAAW,CAAC,WAAY,SAAU,MAAO,iBAAkB,UAAW,SAAU,cAC/F,aAAc,OAAQ,aAAc,WAAY,iB,qBC/CxE,MAAMC,EAA2B,IAAgB,EAAQ,CAAC,CAAC,SAAS9D,KAErD","file":"js/chunk-2d0c4c38.f272ab33.js","sourcesContent":["import { resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_his_standard_form = _resolveComponent(\"his-standard-form\")\n\n  return (_openBlock(), _createBlock(_component_his_standard_form, {\n    cancelDestinationPath: _ctx.cancelDestination,\n    fields: _ctx.fields,\n    onFinishAction: _ctx.onSubmit\n  }, null, 8, [\"cancelDestinationPath\", \"fields\", \"onFinishAction\"]))\n}","import { AppEncounterService } from \"@/services/app_encounter_service\"\n\nexport class PatientServicesService extends AppEncounterService {\n    constructor(patientID: number, providerID: number) {\n        super(patientID, 5, providerID) \n    }\n}","\nimport { defineComponent} from 'vue'\nimport HisStandardForm from \"@/components/Forms/TouchScreenForm.vue\";\nimport EncounterMixinVue from '@/views/EncounterMixin.vue';\nimport { PatientServicesService } from '@/apps/Registration/services/patient_services_service'; \nimport Validation from '@/components/Forms/validations/StandardValidations';\nimport { Field, Option } from '@/components/Forms/FieldInterface';\nimport { FieldType } from '@/components/Forms/BaseFormElements';\nimport { getFacilities } from '@/utils/HisFormHelpers/LocationFieldOptions';\nimport { toastWarning } from '@/utils/Alerts';\nimport { Patientservice } from '@/services/patient_service';\nimport { MALAWI_NATIONAL_ID_TYPE } from '@/constants';\n\nexport default defineComponent({\n    components: { HisStandardForm },\n    mixins: [EncounterMixinVue],\n    data: () => ({\n        patientServicesService: {} as any\n    }),\n    watch: {\n        ready: {\n            async handler(isReady: boolean) {\n                if(isReady){\n                    this.patientServicesService = new PatientServicesService(this.patient.getID(), this.providerID)\n                    this.fields = this.getFields()\n                }\n            },\n            immediate: true,\n            deep: true\n        }\n    },\n    methods: {\n        async onSubmit(formData: any, computedData: any){\n            const encounter = await this.patientServicesService.createEncounter()\n            if (!encounter) return toastWarning('Unable to create registration encounter')\n            \n            const registrationData = await this.resolveObs({...computedData})\n            const registrationObs = await this.patientServicesService.saveObservationList(registrationData)\n            if (!registrationObs) return toastWarning('Unable to save observations')\n\n            this.nextTask()        \n        },\n        \n        getFields(): Array<Field>{\n            return [\n                {\n                    id: 'referral',\n                    helpText: 'Select service',\n                    type: FieldType.TT_SELECT,\n                    validation: (value: any) => Validation.required(value),\n                    computedValue: (v: Option) => ({ obs: this.patientServicesService.buildValueText('Services ordered', v.value)}),\n                    options: ()=> this.mapOptions(['Casualty', 'Dental', 'Eye', 'Family Planing', 'Medical', 'OB/Gyn', 'Orthopedics',\n                        'Pediatrics', 'Skin', 'STI Clinic', 'Surgical', 'Other'\n                    ]) \n                }\n            ]\n        }\n    }\n})\n","import { render } from \"./Services.vue?vue&type=template&id=7eb187be&ts=true\"\nimport script from \"./Services.vue?vue&type=script&lang=ts\"\nexport * from \"./Services.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/andrew-dev/Projects/HIS-Core/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"sourceRoot":""}