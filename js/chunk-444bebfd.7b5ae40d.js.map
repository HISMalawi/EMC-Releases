{"version":3,"sources":["webpack:///./src/apps/ART/views/encounters/ARVNumber.vue?d6f1","webpack:///./src/apps/ART/views/encounters/ARVNumber.vue","webpack:///./src/apps/ART/views/encounters/ARVNumber.vue?23b9","webpack:///./src/guidelines/encounter_guidelines.ts","webpack:///./node_modules/cache-loader/dist/cjs.js","webpack:///./src/views/EncounterMixin.vue","webpack:///./node_modules/vue-loader-v16/dist/templateLoader.js","webpack:///./src/components/Forms/HisStandardForm.vue","webpack:///./src/utils/GuidelineEngine.ts","webpack:///./src/services/identifier_service.ts"],"names":["render","_ctx","_cache","$props","$setup","$data","$options","_component_his_standard_form","_resolveComponent","_openBlock","_createBlock","fields","onFinishAction","onFinish","skipSummary","cancelDestinationPath","cancelDestination","defineComponent","mixins","EncounterMixinVue","components","HisStandardForm","data","patientHasARVNumber","currentArvNumber","prependValue","watch","ready","handler","arvNumber","patient","getArvNumber","a","split","replace","ProgramService","getNextSuggestedARVNumber","suggestedNumber","arv_number","getFields","immediate","methods","formData","newArvNumber","value","$router","back","IdentifierService","arvNumberExists","exists","toastWarning","updateARVNumber","createArvNumber","id","helpText","type","FieldType","TT_TEXT","validation","val","Validation","required","defaultValue","config","initialKb","artApp","HisApp","getActiveApp","programPatientIdentifiers","arvType","prefix","footerBtns","name","slot","color","onClick","__exports__","FlowState","dformat","d","HisDate","toStandardHisDisplayFormat","ENCOUNTER_GUIDELINES","priority","actions","alert","outcomeStartDate","infoActionSheet","action","GO_TO_PATIENT_DASHBOARD","CHANGE_PATIENT_OUTCOME","CONTINUE","conditions","outcome","startDate","sessionDate","birthDate","CHANGE_SESSION_DATE","selection","providers","encounterName","apiDate","optionsActionSheet","role","modal","flowState","SET_PROVIDER","isBdeMode","isBDE","patientID","providerID","facts","route","params","patient_id","parseInt","Store","get","then","patientData","setEncounterFacts","checkEncounterGuidelines","deep","computed","patientDashboardUrl","runflowState","state","states","username","provider","find","person_id","push","EXIT","gotoPatientDashboard","findings","matchToGuidelines","index","finding","status","program","e","console","error","toastDanger","getSessionDate","getCachedApiDate","getBirthdate","$route","toString","toUpperCase","sort","b","usernameA","usernameB","map","p","isEmpty","person","names","latestName","given_name","family_name","toOption","label","other","mapStrToOptions","items","i","path","nextTask","yesNoOptions","toYesNoOption","values","mapOptions","options","option","yesNoUnknownOptions","resolveObs","obs","tag","Object","filter","reduce","accum","cur","Array","isArray","concat","Promise","all","inArray","arr","expression","length","validateSeries","condition","_resolveDynamicComponent","formType","activeField","onOnFinish","onOnIndex","onIndex","TouchScreenForm","emits","props","Function","Boolean","default","String","computedData","this","$emit","isCondition","ignored","undefined","prop","includes","every","sortByRelevance","guidelines","target","targetEvent","matches","guidelineIndex","targetValidations","some","title","description","text","info","identifierType","Service","getJson","identifier"],"mappings":"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","file":"js/chunk-444bebfd.7b5ae40d.js","sourcesContent":["import { resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_his_standard_form = _resolveComponent(\"his-standard-form\")\n\n  return (_openBlock(), _createBlock(_component_his_standard_form, {\n    fields: _ctx.fields,\n    onFinishAction: _ctx.onFinish,\n    skipSummary: true,\n    cancelDestinationPath: _ctx.cancelDestination\n  }, null, 8, [\"fields\", \"onFinishAction\", \"cancelDestinationPath\"]))\n}","\nimport { defineComponent } from \"vue\";\nimport { Field } from \"@/components/Forms/FieldInterface\"\nimport { FieldType } from \"@/components/Forms/BaseFormElements\";\nimport HisStandardForm from \"@/components/Forms/HisStandardForm.vue\";\nimport Validation from \"@/components/Forms/validations/StandardValidations\";\nimport { toastWarning } from \"@/utils/Alerts\"\nimport EncounterMixinVue from '../../../../views/EncounterMixin.vue'\nimport HisApp from \"@/apps/app_lib\"\nimport { IdentifierService } from \"@/services/identifier_service\";\nimport { ProgramService } from \"@/services/program_service\";\n\nexport default defineComponent({\n  mixins: [EncounterMixinVue],\n  components: { HisStandardForm },\n  data: () => ({\n    patientHasARVNumber: false,\n    currentArvNumber: \"\" as any,\n    prependValue: \"\" as any,\n  }),\n  watch: {\n    ready: {\n      async handler(ready: any) {\n        if (!ready) return\n        const arvNumber = this.patient.getArvNumber()\n        if(arvNumber !== \"Unknown\") {\n          const a = arvNumber.split('-')\n          this.currentArvNumber = a[2].replace(/^\\D+|\\s/g, \"\")\n          this.prependValue = `${a[0]}-${a[1]}-`\n          this.patientHasARVNumber = true\n        } else {\n          const suggestedNumber =  await ProgramService.getNextSuggestedARVNumber();\n          this.currentArvNumber = suggestedNumber.arv_number.replace(/^\\D+|\\s/g, \"\");\n        }\n        this.fields = this.getFields();\n      },\n      immediate: true\n    },\n  },\n  methods: {\n    async onFinish(formData: any) {\n      const newArvNumber = formData['arv_number'].value\n      if(newArvNumber === this.patient.getArvNumber()) return this.$router.back()\n      const exists = await IdentifierService.arvNumberExists(newArvNumber)\n      if(exists) toastWarning(\"ARV number already exists\", 5000)\n      else {\n        try {\n          if(this.patientHasARVNumber) \n            await this.patient.updateARVNumber(newArvNumber)\n          else await this.patient.createArvNumber(newArvNumber)\n          this.$router.back()\n        } catch (error) {\n          toastWarning(error)\n        }\n      }   \n    },\n    getFields(): Array<Field> {\n      return [\n        {\n          id: \"arv_number\",\n          helpText: \"Update ARV Number\",\n          type: FieldType.TT_TEXT,\n          validation: (val: any) => Validation.required(val),\n          defaultValue: () => this.currentArvNumber,\n          config: {\n            initialKb: '0-9',\n            prependValue: () => {\n              if(this.prependValue) return this.prependValue\n              const artApp = HisApp.getActiveApp()\n              if (artApp && artApp.programPatientIdentifiers) {\n                const arvType = artApp.programPatientIdentifiers['ARV Number']\n                return arvType.prefix()\n              }\n              return ''\n            },\n            footerBtns: [\n              {\n                name: \"Void ARV Number\",\n                slot: \"end\",\n                color: 'danger',\n                onClick: async (formData: any) => {\n                  await this.patient.updateARVNumber(\"Unknown\")\n                  this.$router.back()\n                }\n              }\n            ]\n          },\n        }\n      ]\n    }\n  }\n});\n","import { render } from \"./ARVNumber.vue?vue&type=template&id=4ab459be&ts=true\"\nimport script from \"./ARVNumber.vue?vue&type=script&lang=ts\"\nexport * from \"./ARVNumber.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/andrew-dev/Projects/HIS-Core/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { infoActionSheet, optionsActionSheet } from \"@/utils/ActionSheets\";\nimport { GuideLineInterface } from \"@/utils/GuidelineEngine\";\nimport HisDate from '@/utils/Date'\n\nexport enum FlowState {\n    SET_PROVIDER = 'SET_PROVIDER',\n    CHANGE_SESSION_DATE = 'change_session_date',\n    GO_TO_PATIENT_DASHBOARD = 'go_to_patient_dashboard',\n    CHANGE_PATIENT_OUTCOME = 'change_outcome',\n    CONTINUE = 'continue',\n    EXIT = 'exit'\n}\nconst dformat = (d: string) => HisDate.toStandardHisDisplayFormat(d)\n\nexport const ENCOUNTER_GUIDELINES: Record<string, GuideLineInterface> = {\n    \"Warn if attempting to create new encounters for a deceased patient\": {\n        priority: 1,\n        actions: {\n            alert: async ({ outcomeStartDate }: any) => {\n                const action = await infoActionSheet(\n                    'Data Integrity Issue Found',\n                    `Patient died on ${dformat(outcomeStartDate)}`,\n                    'Proceeding with this outcome might affect accuracy of some reports',\n                    [\n                        { name: 'Cancel', slot: 'end', color: 'primary'},\n                        { name: 'Change outcome', slot: 'end', color: 'primary'},\n                        { name: 'Continue Anyway', slot: 'end', color: 'danger'}\n                    ]\n                )\n                return action === 'Cancel'\n                    ? FlowState.GO_TO_PATIENT_DASHBOARD\n                    : action === 'Change outcome'\n                    ? FlowState.CHANGE_PATIENT_OUTCOME\n                    : FlowState.CONTINUE\n            }\n        },\n        conditions: {\n            outcome(outcome: string) {\n                return outcome === 'Patient died'\n            },\n            outcomeStartDate(startDate: string, { sessionDate }: any) {\n                return sessionDate >= startDate\n            }\n        }\n    },\n    \"A patient's date of birth must not be less than Session Date\": {\n        priority: 2,\n        actions: {\n            alert: async ({ birthDate, sessionDate}: any) => {\n                const action = await infoActionSheet(\n                    'Data integrity issue found', '',\n                    `Session date ${dformat(sessionDate)} is less than birth date of ${dformat(birthDate)}`,\n                    [\n                        { name: 'Cancel', slot: 'end', color: 'danger'},\n                        { name: 'Change session date', slot: 'end', color: 'success'}\n                    ]\n                )\n                return action === 'Change session date'\n                    ? FlowState.CHANGE_SESSION_DATE\n                    : FlowState.GO_TO_PATIENT_DASHBOARD\n            }\n        },\n        conditions: {\n            birthDate(birthDate: string, { sessionDate }: any) {\n                return sessionDate < birthDate\n            }\n        }\n    },\n    \"Select Encounter provider when in back data entry\": {\n        priority: 3,\n        actions: {\n            selection: async ({ providers, encounterName, sessionDate, apiDate }: any) => {\n                const modal = await optionsActionSheet(\n                    `Please select a provider for ${encounterName}`,\n                    `BDE: ${dformat(sessionDate)} | Current: ${dformat(apiDate)}`,\n                    providers,\n                    [\n                        { name: 'Cancel', color: 'danger', slot: 'start', role: 'default'},\n                        { name: 'Confirm', slot: 'end', role: 'action' }\n                    ]\n                )\n                return modal.action === 'Cancel' \n                    ? { value: -1, flowState: FlowState.GO_TO_PATIENT_DASHBOARD }\n                    : { value: modal.selection, flowState: FlowState.SET_PROVIDER }\n            }\n        },\n        conditions: {\n            isBdeMode(isBDE: boolean) {\n                return isBDE\n            }\n        }\n    }\n}","\nimport TouchScreenForm from \"@/components/Forms/TouchScreenForm.vue\";\nimport { defineComponent, PropType } from \"vue\";\nimport { Field } from \"./FieldInterface\";\n\nexport default defineComponent({\n    name: \"HisStandardForm\",\n    components: { TouchScreenForm },\n    emits: [\n        'onFinish',\n        'onIndex'\n    ],\n    data: () => ({\n        formType: 'touch-screen-form' as string\n    }),\n    props: {\n        onFinishAction: {\n            type: Function\n        },\n        skipSummary: {\n            type: Boolean,\n            default: false\n        },\n        activeField: {\n            type: String\n        },\n        fields: {\n            type: Object as PropType<Field[]>,\n            required: true\n        },\n        cancelDestinationPath: {\n            type: String,\n            required: false,\n        }\n    },\n    methods: {\n        onFinish(formData: any, computedData: any) {\n            this.$emit('onFinish', formData, computedData)\n        },\n        onIndex(i: number) {\n            this.$emit('onIndex', i)\n        }\n    }\n})\n","import script from \"./EncounterMixin.vue?vue&type=script&lang=ts\"\nexport * from \"./EncounterMixin.vue?vue&type=script&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { resolveDynamicComponent as _resolveDynamicComponent, openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return (_openBlock(), _createBlock(_resolveDynamicComponent(_ctx.formType), {\n    fields: _ctx.fields,\n    skipSummary: _ctx.skipSummary,\n    activeField: _ctx.activeField,\n    cancelDestinationPath: _ctx.cancelDestinationPath,\n    onOnFinish: _ctx.onFinish,\n    onFinish: _ctx.onFinishAction,\n    onOnIndex: _ctx.onIndex\n  }, null, 8, [\"fields\", \"skipSummary\", \"activeField\", \"cancelDestinationPath\", \"onOnFinish\", \"onFinish\", \"onOnIndex\"]))\n}","import { render } from \"./HisStandardForm.vue?vue&type=template&id=6daa0375&ts=true\"\nimport script from \"./HisStandardForm.vue?vue&type=script&lang=ts\"\nexport * from \"./HisStandardForm.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/andrew-dev/Projects/HIS-Core/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","/**\n * Compares patient facts against a predefined guideline Object.\n*/\nexport interface DescriptionInterface {\n    color?: 'primary' | 'secondary' | 'danger' | 'warning';\n    info: Function;\n    text?: string;\n    show: 'onChecked' | 'always';\n}\n\nexport interface GuideLineInterface {\n    title?: string;\n    concept?: string;\n    priority: number;\n    conditions: Record<string, Function>;\n    actions?: Record<string, any>; //TODO: should <key, Function>\n    data?: Record<string, any>;\n    description?: DescriptionInterface;\n    target?: string;\n    targetEvent?: string;\n}\n\n/**\n * Match the facts with guidelines\n * @param facts \n * @param conditions \n * @returns \n */\nfunction isCondition(facts: Record<string, any>, conditions: Record<string, Function>): boolean {\n    const state = [] \n    const ignored = [-1, '', null, undefined]\n\n    for(const prop in conditions) {\n        if (!(prop in facts)) \n            continue\n        \n        const value = facts[prop]\n        if (ignored.includes(value)) {\n            state.push(false)\n            continue\n        }\n\n        state.push(conditions[prop](value, facts))\n    }\n    return state.every(Boolean)\n}\n\n/**\n * Sort guidelines in the order of importance/relevance\n * @param findings \n * @returns \n */\nfunction sortByRelevance(findings: Array<GuideLineInterface>) {\n    return findings.sort((a, b) => a.priority < b.priority ? -1 : 1)\n}\n\n/**\n * Check the guideline for matching facts and return matching object \n * @param facts: key value pair for used for searching in guidelines\n * @param guidelines: A dictionary containing fixed rules/validations that conforms to GuideLineInterface\n * @param target: Used for matching a target defined in a guidlines before executing conditions\n * @param targetEvent: used for matching a target event in a guideline before executing conditions\n * @returns\n */\nexport function matchToGuidelines(\n    facts: Record<string, any>, \n    guidelines: Record<string, GuideLineInterface>,\n    target='', \n    targetEvent=''): Array<GuideLineInterface> {\n\n    const matches = []\n    for(const guidelineIndex in guidelines) {\n        const data: GuideLineInterface = guidelines[guidelineIndex]\n \n        const targetValidations = [\n            (data.target && target && data.target != target),\n            (data.targetEvent && targetEvent \n                && data.targetEvent != targetEvent)\n        ]\n\n        if (targetValidations.some(Boolean)) {\n            continue\n        }\n\n        if (isCondition(facts, data.conditions)) {\n            data.title = guidelineIndex\n            if (data.description) {\n                data.description.text = data.description.info(facts)\n            }\n            matches.push(data)\n        }\n    }\n    return sortByRelevance(matches)\n}\n","import { Service } from \"./service\";\nimport ART from \"@/apps/ART/app\"\n\nexport interface DuplicateIdentifiersInterface {\n    count: number;\n    identifier: string;\n}\n\nexport class IdentifierService extends Service {\n    identifierType: number\n    constructor() {\n        super()\n        this.identifierType = -1\n    }\n \n    static getIdentifierTypes() {\n        return super.getJson('types/patient_identifiers')\n    }\n\n    static async arvNumberExists(arvNumber: string): Promise<boolean> {\n        const data = await super.getJson(`programs/${super.getProgramID()}/lookup_arv_number/${arvNumber}`)\n        return data.exists\n    }\n\n    getIdentifierType() {\n        return this.identifierType\n    }\n\n    setIdentifierType(type: number) {\n        this.identifierType = type\n    }\n\n    getDuplicateIndentifiers(): Promise<DuplicateIdentifiersInterface[]> {\n        return Service.getJson(`search/identifiers/duplicates`, {\n            'type_id': this.identifierType\n        })\n    }\n\n    getPatientsByIdentifier(identifier: string) {\n        return Service.getJson(`search/patients/by_identifier`,{\n            'type_id': this.identifierType,\n            'identifier': identifier\n        })\n    }\n}\n"],"sourceRoot":""}