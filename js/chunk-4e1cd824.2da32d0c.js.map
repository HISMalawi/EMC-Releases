{"version":3,"sources":["webpack:///./src/components/Keyboard/KbLayouts.ts","webpack:///./src/components/Keyboard/HisKbConfigurations.ts","webpack:///./src/guidelines/encounter_guidelines.ts","webpack:///./node_modules/cache-loader/dist/cjs.js","webpack:///./src/views/EncounterMixin.vue","webpack:///./node_modules/vue-loader-v16/dist/templateLoader.js","webpack:///./src/components/Forms/HisStandardForm.vue","webpack:///./node_modules/eslint-loader/index.js","webpack:///./src/utils/GuidelineEngine.ts","webpack:///./src/apps/CxCa/views/encounters/CxCaTest.vue?c005","webpack:///./src/apps/CxCa/services/CxCaAssessmentService.ts","webpack:///./src/apps/CxCa/views/encounters/CxCaTest.vue","webpack:///./src/apps/CxCa/views/encounters/CxCaTest.vue?ba10"],"names":["DEFAULT_KEYPAD","VITALS_KEYPAD","DRUG_DISPENSER_KEYPAD","CD4_COUNT_PAD_LO","SYMBOLS","NUMBER_PAD_LO","MONTHLY_DAYS_LO","ALPHABETICAL_LO","QWERTY_LO","CHARACTERS_AND_NUMBERS_LO","NOTE_PAD_KEYBOARD","LOGIN_KEYBOARD","SYMBOLS_CONFIG","NUMBERS_ONLY","NUMBERS_WITH_UNKNOWN","NUMBERS_WITH_ESTIMATE","NUMBERS_WITHOUT_NA_UNKNOWN","NUMBERS","MONTHLY_DAYS","A_TO_Z","QWERTY","KEY_BTN_NAV","btn","keyboard","FlowState","dformat","d","HisDate","toStandardHisDisplayFormat","ENCOUNTER_GUIDELINES","priority","actions","alert","outcomeStartDate","infoActionSheet","name","slot","color","action","GO_TO_PATIENT_DASHBOARD","CHANGE_PATIENT_OUTCOME","CONTINUE","conditions","outcome","startDate","sessionDate","birthDate","CHANGE_SESSION_DATE","selection","providers","encounterName","apiDate","optionsActionSheet","role","modal","value","flowState","SET_PROVIDER","isBdeMode","isBDE","defineComponent","components","HisStandardForm","data","patient","fields","patientID","providerID","facts","ready","watch","handler","route","params","patient_id","parseInt","Store","get","then","patientData","setEncounterFacts","checkEncounterGuidelines","immediate","deep","computed","cancelDestination","patientDashboardUrl","methods","runflowState","state","states","username","split","provider","find","person_id","$router","push","EXIT","gotoPatientDashboard","findings","matchToGuidelines","index","finding","status","program","e","console","error","toastDanger","ProgramService","getSessionDate","getCachedApiDate","getBirthdate","$route","toString","toUpperCase","sort","a","b","usernameA","usernameB","map","p","isEmpty","person","names","latestName","given_name","family_name","toOption","label","other","mapStrToOptions","items","i","path","nextTask","yesNoOptions","toYesNoOption","values","mapOptions","options","option","yesNoUnknownOptions","resolveObs","obs","tag","Object","filter","reduce","accum","cur","Array","isArray","concat","Promise","all","inArray","arr","expression","length","validateSeries","condition","__exports__","render","_ctx","_cache","$props","$setup","$data","$options","_openBlock","_createBlock","_resolveDynamicComponent","formType","skipSummary","activeField","cancelDestinationPath","onOnFinish","onFinish","onFinishAction","onOnIndex","onIndex","TouchScreenForm","emits","props","type","Function","Boolean","default","String","required","formData","computedData","this","$emit","EstimationFieldType","getYearField","id","showUnknown","primaryFunctions","helpText","appearInSummary","FieldType","TT_TEXT","config","customKeyboard","getMonthField","TT_SELECT","MonthOptions","getDayField","TT_MONTHLY_DAYS","getMonthDurationEstimateField","getAgeEstimateField","TT_NUMBER","keypad","appendLeadingZero","s","getDefaultDate","form","field","datePart","defaultValue","date","year","month","day","validateMinMax","minDate","min","Date","maxDate","max","generateDateFields","refDate","fullDate","yearValue","monthValue","dayValue","dateIsEstimated","yearID","monthID","dayID","ageEstimateID","durationEstimateID","estimation","allowUnknown","ageEstimate","durationEstimate","estimateMonthOrDay","allowUnknownMonthDay","datePartCondition","f","includes","buildHelpTextDate","part","parts","partValues","dpart","wl","undefined","join","init","updateHelpTextOnValue","proxyID","unload","v","validation","c","StandardValidations","match","isNaN","minYear","getYear","summaryMapValue","summaryLabel","_","ref","computedValue","val","computeValue","beforeNext","keyboardActions","valueEstimateCondition","estimateType","estimationFieldType","every","ageEstimateRegex","dayjs","Service","subtract","AGE_ESTIMATE_FIELD","format","STANDARD_DATE_FORMAT","MONTH_ESTIMATE_FIELD","isCondition","ignored","prop","sortByRelevance","guidelines","target","targetEvent","matches","guidelineIndex","targetValidations","some","title","description","text","info","_component_his_standard_form","_resolveComponent","AssessmentService","hivStatus","artStatus","arvNumber","arvStartDate","AppEncounterService","getJson","res","mixins","EncounterMixinVue","assessment","showHIVQuestions","offerCxCa","loadArtStatus","getHivStatus","setOfferCxCa","getFields","createEncounter","encounter","toastWarning","vals","keys","forEach","element","saveObservationList","toastSuccess","getFirstValueCoded","buildValueCoded","hasHIVStatus","enterPreviousCxCaData","everHadCxCa","ever_had_cxca","resultsAvailable","results_available","getFacilities","getReasonsForNoCxcaOptions","ConceptService","getConceptsByCategory","Validation","hiv_status","getDate","isEstimate","buildValueDate","reason_for_visit","showKeyboard","isFilterDataViaApi","buildValueText","offer_CxCa","async","facilities","LocationService","trim","facility","location_id","getLabFacilities","getLabs","getFacilityWards","wards","ward","getSpecialistClinics","clinics","clinic","getRegions","regions","region","region_id","getDistricts","regionID","districts","district","district_id","getTraditionalAuthorities","districtID","TAs","TA","traditional_authority_id","getVillages","traditionalAuthorityID","villages","village","village_id"],"mappings":"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","file":"js/chunk-4e1cd824.2da32d0c.js","sourcesContent":["export const DEFAULT_KEYPAD = [\n    ['1', '2', '3'],\n    ['4', '5', '6'],\n    ['7', '8', '9'],\n    ['.', '0', 'Del'],\n    ['',  'Done', '']\n]\nexport const VITALS_KEYPAD = [\n    ['1', '2', '3'],\n    ['4', '5', '6'],\n    ['7', '8', '9'],\n    ['.', '0', 'Del'],\n    ['Clear',  '%', '/']\n]\nexport const DRUG_DISPENSER_KEYPAD = [\n    ['1', '2', '3'],\n    ['4', '5', '6'],\n    ['7', '8', '9'],\n    ['Del.', '0', 'Clear'],\n    // ['Reset',  'Close', 'Dispense']\n]\nexport const CD4_COUNT_PAD_LO = [\n    ['1', '2', '3', '<'],\n    ['4', '5', '6', '>'],\n    ['7', '8', '9', '='],\n    ['',  '0', '']\n]\n\nexport const SYMBOLS = [\n    ['1', '2', '3', '+', '-', '/', '*'],\n    ['4', '5', '6', '%', '=', '<', '>', 'Qwerty'],\n    ['7', '8', '9', '.', ','],\n    ['',  '0', '']\n]\n\nexport const NUMBER_PAD_LO = [\n    ['1', '2', '3'],\n    ['4', '5', '6'],\n    ['7', '8', '9'],\n    ['',  '0', '']\n]\n\nexport const MONTHLY_DAYS_LO = [\n    ['1', '2', '3', '4', '5', '6', '7'],\n    ['8', '9', '10', '11', '12', '13', '14'],\n    ['15', '16', '17', '18', '19', '20', '21'],\n    ['22', '23', '24', '25', '26', '27', '28'],\n    ['29', '30', '31']\n]\n\nexport const ALPHABETICAL_LO = [\n    ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', '.'],\n    ['i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q'],\n    ['r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z']\n]\n\nexport const QWERTY_LO = [\n    ['q', 'w', 'e', 'r', 't', 'y', 'u', 'i', 'o', 'p'],\n    ['a', 's', 'd', 'f', 'g', 'h', 'j', 'k', 'l', \"'\"],\n    ['z', 'x', 'c', 'v', 'b', 'n', 'm',',', '.', 'A-Z']\n]\n\nexport const CHARACTERS_AND_NUMBERS_LO = [\n    ['1', '2', '3', '4', '5', '6', '7', '8', '9', '0'],\n    ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', '-', '.'],\n    ['i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q'],\n    ['r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z']\n]\nexport const NOTE_PAD_KEYBOARD = [\n    ['1', '2', '3', '4', '5', '6', '7', '8', '9', '0', 'Del'],\n    [\"q\", \"w\", \"e\", \"r\", \"t\", \"y\", \"u\", \"i\", \"o\", \"p\", 'Clear'],\n    [\"a\", \"s\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \".\", \"Caps\"],\n    [\"z\", \"x\", \"c\", \"v\", \"b\", \"n\", \"m\", \"<\", \">\", \"/\", \"Enter\"], \n]\n\nexport const LOGIN_KEYBOARD =  [\n    [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"0\"],\n    [\"q\", \"w\", \"e\", \"r\", \"t\", \"y\", \"u\", \"i\", \"o\", \"p\"],\n    [\"a\", \"s\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"Del.\"],\n    [\"z\", \"x\", \"c\", \"v\", \"b\", \"n\", \"m\", \"Caps\", \"Login\"],\n];\n","/**\n * Default keyboard configurations.\n * \n * Configuration consists of one or two keyboard layouts\n * to be displayed at once.\n */\n\nimport {\n    NUMBER_PAD_LO,\n    MONTHLY_DAYS_LO,\n    ALPHABETICAL_LO,\n    QWERTY_LO,\n    SYMBOLS,\n} from \"@/components/Keyboard/KbLayouts\";\n\nexport const SYMBOLS_CONFIG = [\n    SYMBOLS,\n    [\n        ['', 'Delete']\n    ]\n]\n\nexport const NUMBERS_ONLY = [\n    NUMBER_PAD_LO,\n    [\n        ['Delete']\n    ]\n]\n\nexport const NUMBERS_WITH_UNKNOWN = [\n    NUMBER_PAD_LO,\n    [\n        ['Delete', 'Unknown']\n    ]\n]\n\nexport const NUMBERS_WITH_ESTIMATE = [\n    NUMBER_PAD_LO,\n    [\n        ['N/A'],\n        ['Delete', 'Unknown']\n    ]\n]\n\nexport const NUMBERS_WITHOUT_NA_UNKNOWN = [\n    NUMBER_PAD_LO,\n    [\n        ['Delete']\n    ]\n]\n\nexport const NUMBERS = [\n    NUMBER_PAD_LO,\n    [\n        ['Unknown', 'Delete'],\n        ['Qwerty', 'A-Z'],\n    ]\n]\n\nexport const MONTHLY_DAYS = [\n    MONTHLY_DAYS_LO,\n    [\n        ['Unknown']\n    ]\n]\n\nexport const A_TO_Z = [\n    ALPHABETICAL_LO,\n    [\n        ['0-9', 'Delete'],\n        ['Qwerty', 'Unknown'],\n        ['', 'Space']\n    ]\n]\n\nexport const QWERTY = [\n    QWERTY_LO,\n    [\n        ['', 'Delete'],\n        ['?123', '0-9'],\n        ['Space', 'Unknown']\n    ]\n]\n\n/**\n * Navigation map for switching between different keyboard layouts\n */\nexport const KEY_BTN_NAV = [\n    {\n        btn: '0-9',\n        keyboard: NUMBERS\n    },\n    {\n        btn: '?123',\n        keyboard: SYMBOLS_CONFIG\n    },\n    {   \n        btn: 'A-Z',\n        keyboard: A_TO_Z \n    },\n    {\n        btn: 'Qwerty',\n        keyboard: QWERTY\n    }\n]\n","import { infoActionSheet, optionsActionSheet } from \"@/utils/ActionSheets\";\nimport { GuideLineInterface } from \"@/utils/GuidelineEngine\";\nimport HisDate from '@/utils/Date'\n\nexport enum FlowState {\n    SET_PROVIDER = 'SET_PROVIDER',\n    CHANGE_SESSION_DATE = 'change_session_date',\n    GO_TO_PATIENT_DASHBOARD = 'go_to_patient_dashboard',\n    CHANGE_PATIENT_OUTCOME = 'change_outcome',\n    CONTINUE = 'continue',\n    EXIT = 'exit'\n}\nconst dformat = (d: string) => HisDate.toStandardHisDisplayFormat(d)\n\nexport const ENCOUNTER_GUIDELINES: Record<string, GuideLineInterface> = {\n    \"Warn if attempting to create new encounters for a deceased patient\": {\n        priority: 1,\n        actions: {\n            alert: async ({ outcomeStartDate }: any) => {\n                const action = await infoActionSheet(\n                    'Data Integrity Issue Found',\n                    `Patient died on ${dformat(outcomeStartDate)}`,\n                    'Proceeding with this outcome might affect accuracy of some reports',\n                    [\n                        { name: 'Cancel', slot: 'end', color: 'primary'},\n                        { name: 'Change outcome', slot: 'end', color: 'primary'},\n                        { name: 'Continue Anyway', slot: 'end', color: 'danger'}\n                    ]\n                )\n                return action === 'Cancel'\n                    ? FlowState.GO_TO_PATIENT_DASHBOARD\n                    : action === 'Change outcome'\n                    ? FlowState.CHANGE_PATIENT_OUTCOME\n                    : FlowState.CONTINUE\n            }\n        },\n        conditions: {\n            outcome(outcome: string) {\n                return outcome === 'Patient died'\n            },\n            outcomeStartDate(startDate: string, { sessionDate }: any) {\n                return sessionDate >= startDate\n            }\n        }\n    },\n    \"A patient's date of birth must not be less than Session Date\": {\n        priority: 2,\n        actions: {\n            alert: async ({ birthDate, sessionDate}: any) => {\n                const action = await infoActionSheet(\n                    'Data integrity issue found', '',\n                    `Session date ${dformat(sessionDate)} is less than birth date of ${dformat(birthDate)}`,\n                    [\n                        { name: 'Cancel', slot: 'end', color: 'danger'},\n                        { name: 'Change session date', slot: 'end', color: 'success'}\n                    ]\n                )\n                return action === 'Change session date'\n                    ? FlowState.CHANGE_SESSION_DATE\n                    : FlowState.GO_TO_PATIENT_DASHBOARD\n            }\n        },\n        conditions: {\n            birthDate(birthDate: string, { sessionDate }: any) {\n                return sessionDate < birthDate\n            }\n        }\n    },\n    \"Select Encounter provider when in back data entry\": {\n        priority: 3,\n        actions: {\n            selection: async ({ providers, encounterName, sessionDate, apiDate }: any) => {\n                const modal = await optionsActionSheet(\n                    `Please select a provider for ${encounterName}`,\n                    `BDE: ${dformat(sessionDate)} | Current: ${dformat(apiDate)}`,\n                    providers,\n                    [\n                        { name: 'Cancel', color: 'danger', slot: 'start', role: 'default'},\n                        { name: 'Confirm', slot: 'end', role: 'action' }\n                    ]\n                )\n                return modal.action === 'Cancel' \n                    ? { value: -1, flowState: FlowState.GO_TO_PATIENT_DASHBOARD }\n                    : { value: modal.selection, flowState: FlowState.SET_PROVIDER }\n            }\n        },\n        conditions: {\n            isBdeMode(isBDE: boolean) {\n                return isBDE\n            }\n        }\n    }\n}","\nimport TouchScreenForm from \"@/components/Forms/TouchScreenForm.vue\";\nimport { defineComponent, PropType } from \"vue\";\nimport { Field } from \"./FieldInterface\";\n\nexport default defineComponent({\n    name: \"HisStandardForm\",\n    components: { TouchScreenForm },\n    emits: [\n        'onFinish',\n        'onIndex'\n    ],\n    data: () => ({\n        formType: 'touch-screen-form' as string\n    }),\n    props: {\n        onFinishAction: {\n            type: Function\n        },\n        skipSummary: {\n            type: Boolean,\n            default: false\n        },\n        activeField: {\n            type: String\n        },\n        fields: {\n            type: Object as PropType<Field[]>,\n            required: true\n        },\n        cancelDestinationPath: {\n            type: String,\n            required: false,\n        }\n    },\n    methods: {\n        onFinish(formData: any, computedData: any) {\n            this.$emit('onFinish', formData, computedData)\n        },\n        onIndex(i: number) {\n            this.$emit('onIndex', i)\n        }\n    }\n})\n","import script from \"./EncounterMixin.vue?vue&type=script&lang=ts\"\nexport * from \"./EncounterMixin.vue?vue&type=script&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { resolveDynamicComponent as _resolveDynamicComponent, openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return (_openBlock(), _createBlock(_resolveDynamicComponent(_ctx.formType), {\n    fields: _ctx.fields,\n    skipSummary: _ctx.skipSummary,\n    activeField: _ctx.activeField,\n    cancelDestinationPath: _ctx.cancelDestinationPath,\n    onOnFinish: _ctx.onFinish,\n    onFinish: _ctx.onFinishAction,\n    onOnIndex: _ctx.onIndex\n  }, null, 8, [\"fields\", \"skipSummary\", \"activeField\", \"cancelDestinationPath\", \"onOnFinish\", \"onFinish\", \"onOnIndex\"]))\n}","import { render } from \"./HisStandardForm.vue?vue&type=template&id=6daa0375&ts=true\"\nimport script from \"./HisStandardForm.vue?vue&type=script&lang=ts\"\nexport * from \"./HisStandardForm.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/andrew-dev/Projects/HIS-Core/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import {LocationService} from \"@/services/location_service\"\nimport { Option } from \"@/components/Forms/FieldInterface\"\nimport { isEmpty } from \"lodash\"\n\nexport async function getFacilities(filter=''): Promise<Option[]> {\n    const facilities = await LocationService.getFacilities({name: filter})\n    return facilities.filter((f: any) => !isEmpty(f) && f.name.trim() !='')\n        .map((facility: any) => ({\n            label: facility.name,\n            value: facility.location_id,\n            other: facility\n        }))\n}\n\nexport async function getLabFacilities(filter=''): Promise<Option[]> {\n    const facilities = await LocationService.getLabs({'search_name': filter})\n    return facilities.map((facility: any) => ({\n            label: facility,\n            value: facility\n        }))\n}\n\nexport async function getFacilityWards(filter=''): Promise<Option[]> {\n    const wards = await LocationService.getFacilities({\n        name: filter,\n        tag: 'Facility adult sections'\n    })\n\n    return wards.map((ward: any) => ({\n        label: ward.name,\n        value: ward.name,\n        other: ward\n    }))\n}\n\nexport async function getSpecialistClinics(): Promise<Option[]> {\n    const clinics = await LocationService.getSpecialistClinics()\n    return clinics.map((clinic: any) => ({\n        label: clinic.name,\n        value: clinic.name,\n        other: clinic\n    }))\n}\n\nexport async function getRegions(): Promise<Option[]> {\n    const regions = await LocationService.getRegions()\n    return regions.map((region: any) => ({\n        label: region.name,\n        value: region.region_id,\n        other: region\n    }))\n}\n\nexport async function getDistricts(regionID: number): Promise<Option[]> {\n    const districts = await LocationService.getDistricts(regionID)\n    return districts.map((district: any) => ({\n        label: district.name,\n        value: district.district_id,\n        other: district\n    }))\n}\n\nexport async function getTraditionalAuthorities(districtID: number, name=''): Promise<Option[]> {\n    const TAs = await LocationService.getTraditionalAuthorities(districtID, name)\n    return TAs.map((TA: any) => ({\n        label: TA.name,\n        value: TA.traditional_authority_id,\n        other: TA\n    }))\n}\n\nexport async function getVillages(traditionalAuthorityID: number, name=''): Promise<Option[]> {\n    const villages = await LocationService.getVillages(traditionalAuthorityID, name)\n    return villages.map((village: any) => ({\n        label: village.name,\n        value: village.village_id,\n        other: village\n    }))\n}\n","/**\n * Compares patient facts against a predefined guideline Object.\n*/\nexport interface DescriptionInterface {\n    color?: 'primary' | 'secondary' | 'danger' | 'warning';\n    info: Function;\n    text?: string;\n    show: 'onChecked' | 'always';\n}\n\nexport interface GuideLineInterface {\n    title?: string;\n    concept?: string;\n    priority: number;\n    conditions: Record<string, Function>;\n    actions?: Record<string, any>; //TODO: should <key, Function>\n    data?: Record<string, any>;\n    description?: DescriptionInterface;\n    target?: string;\n    targetEvent?: string;\n}\n\n/**\n * Match the facts with guidelines\n * @param facts \n * @param conditions \n * @returns \n */\nfunction isCondition(facts: Record<string, any>, conditions: Record<string, Function>): boolean {\n    const state = [] \n    const ignored = [-1, '', null, undefined]\n\n    for(const prop in conditions) {\n        if (!(prop in facts)) \n            continue\n        \n        const value = facts[prop]\n        if (ignored.includes(value)) {\n            state.push(false)\n            continue\n        }\n\n        state.push(conditions[prop](value, facts))\n    }\n    return state.every(Boolean)\n}\n\n/**\n * Sort guidelines in the order of importance/relevance\n * @param findings \n * @returns \n */\nfunction sortByRelevance(findings: Array<GuideLineInterface>) {\n    return findings.sort((a, b) => a.priority < b.priority ? -1 : 1)\n}\n\n/**\n * Check the guideline for matching facts and return matching object \n * @param facts: key value pair for used for searching in guidelines\n * @param guidelines: A dictionary containing fixed rules/validations that conforms to GuideLineInterface\n * @param target: Used for matching a target defined in a guidlines before executing conditions\n * @param targetEvent: used for matching a target event in a guideline before executing conditions\n * @returns\n */\nexport function matchToGuidelines(\n    facts: Record<string, any>, \n    guidelines: Record<string, GuideLineInterface>,\n    target='', \n    targetEvent=''): Array<GuideLineInterface> {\n\n    const matches = []\n    for(const guidelineIndex in guidelines) {\n        const data: GuideLineInterface = guidelines[guidelineIndex]\n \n        const targetValidations = [\n            (data.target && target && data.target != target),\n            (data.targetEvent && targetEvent \n                && data.targetEvent != targetEvent)\n        ]\n\n        if (targetValidations.some(Boolean)) {\n            continue\n        }\n\n        if (isCondition(facts, data.conditions)) {\n            data.title = guidelineIndex\n            if (data.description) {\n                data.description.text = data.description.info(facts)\n            }\n            matches.push(data)\n        }\n    }\n    return sortByRelevance(matches)\n}\n","import { resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_his_standard_form = _resolveComponent(\"his-standard-form\")\n\n  return (_openBlock(), _createBlock(_component_his_standard_form, {\n    fields: _ctx.fields,\n    onFinishAction: _ctx.onFinish,\n    skipSummary: false,\n    cancelDestinationPath: _ctx.cancelDestination\n  }, null, 8, [\"fields\", \"onFinishAction\", \"cancelDestinationPath\"]))\n}","import { AppEncounterService } from \"@/services/app_encounter_service\"\n\nexport class AssessmentService extends AppEncounterService {\n    \n    hivStatus: string;\n    artStatus: string;\n    arvNumber: string;\n    arvStartDate: string;\n    constructor(patientID: number, providerID: number){\n        super(patientID, 181, providerID) //TODO: Use encounter type reference name'\n        this.hivStatus = ''\n        this.artStatus = ''\n        this.arvNumber = ''\n        this.arvStartDate = ''\n    }\n\n    getHivStatus() {\n        return this.hivStatus\n    }\n\n    getArtStatus() {\n        return this.artStatus\n    }\n\n    getArvNumber() {\n        return this.arvNumber\n    } \n\n    getArvStartDate() {\n        return this.arvStartDate\n    }\n\n    isHivPositive() {\n        return this.hivStatus.match(/positive/i) ? true : false\n    }\n\n    async loadArtStatus() {\n        const res = await AppEncounterService.getJson(`programs/12/patients/${this.patientID}/art_hiv_status`)\n        if (res) {\n            this.hivStatus = res['hiv_status'] || this.hivStatus\n            this.artStatus = res['art_status'] || ''\n            this.arvNumber = res['arv_number'] || ''\n            this.arvStartDate = res['arv_start_date'] || ''\n        }\n    }\n}","\nimport { defineComponent } from \"vue\";\nimport { FieldType } from \"@/components/Forms/BaseFormElements\";\nimport HisStandardForm from \"@/components/Forms/HisStandardForm.vue\";\nimport Validation from \"@/components/Forms/validations/StandardValidations\";\nimport EncounterMixinVue from \"../../../../views/EncounterMixin.vue\";\nimport { AssessmentService } from \"@/apps/CxCa/services/CxCaAssessmentService\";\nimport { toastSuccess, toastWarning } from \"@/utils/Alerts\";\nimport { generateDateFields } from \"@/utils/HisFormHelpers/MultiFieldDateHelper\";\nimport { getFacilities } from \"@/utils/HisFormHelpers/LocationFieldOptions\";\nimport { ConceptService } from \"@/services/concept_service\";\n\nexport default defineComponent({\n  mixins: [EncounterMixinVue],\n  components: { HisStandardForm },\n  data: () => ({\n    assessment: {} as any,\n    obs: [] as any,\n    showHIVQuestions: true,\n    offerCxCa: false,\n  }),\n  watch: {\n    patient: {\n      async handler() {\n        this.assessment = new AssessmentService(\n          this.patientID,\n          this.providerID\n        );\n        await this.assessment.loadArtStatus();\n        if (this.assessment.getHivStatus() !== '') {\n          this.showHIVQuestions = false;\n        }\n        await this.setOfferCxCa();\n        this.fields = await this.getFields();\n      },\n      deep: true,\n    },\n  },\n  methods: {\n    async onFinish(formData: any, computed: any) {\n      \n      const encounter = await this.assessment.createEncounter();\n\n      if (!encounter) return toastWarning(\"Unable to create encounter\");\n      const vals: any = [];\n      Object.keys(computed).forEach(element => {\n        vals.push(computed[element].obs);\n      });\n      const data = await Promise.all([...this.obs, ...vals]);\n\n      const obs = await this.assessment.saveObservationList(data);\n\n      if (!obs) return toastWarning(\"Unable to save patient observations\");\n\n      toastSuccess(\"Observations and encounter created!\");\n\n      this.nextTask();\n    },\n    async setOfferCxCa() {\n      const data = await this.assessment.getFirstValueCoded(\"Offer CxCa\");\n      this.offerCxCa = data && data === \"Yes\";\n      if (!this.offerCxCa) {\n        this.obs.push(this.assessment.buildValueCoded(\"Ever had CxCa\", \"No\"));\n      }\n      return true;\n    },\n    hasHIVStatus() {\n      return this.assessment.getHivStatus !== \"\"\n    },\n    enterPreviousCxCaData(formData: any) {\n      const everHadCxCa = formData.ever_had_cxca.value === \"Yes\";\n      const resultsAvailable = formData.results_available.value === \"Yes\";\n      return everHadCxCa && resultsAvailable;\n    },\n    getFacilities(filter = \"\") {\n      return getFacilities(filter);\n    },\n    getReasonsForNoCxcaOptions() {\n      return ConceptService.getConceptsByCategory(\"reason_for_no_cxca\")\n        .map((c: any) => ({\n          label: c.name,\n          value: c.name,\n          other: {\n            c\n          }\n        }))\n    },\n    getFields(): any {\n      return [\n        {\n          id: \"reason_for_visit\",\n          helpText: \"Reason for visit\",\n          type: FieldType.TT_SELECT,\n          validation: (val: any) => Validation.required(val),\n          options: () => [\n            {\n              label: \"Initial screening\",\n              value: \"Initial screening\",\n            },\n            {\n              label: \"Postponed treatmment\",\n              value: \"Postponed treatment\",\n            },\n            {\n              label: \"One year subsequent check-up after treatment\",\n              value: \"One year subsequent check-up after treatment\",\n            },\n            {\n              label: \"Subsequent screening\",\n              value: \"Subsequent screening\",\n            },\n            {\n              label: \"Problem visit after treatment\",\n              value: \"Problem visit after treatment\",\n            },\n            {\n              label: \"Referral\",\n              value: \"Referral\",\n            },\n          ],\n          computedValue: (value: any) => ({\n            obs: this.assessment.buildValueCoded(\"Reason for visit\", value.value)\n          })\n        },\n        {\n          id: \"hiv_status\",\n          helpText: \"HIV status\",\n          type: FieldType.TT_SELECT,\n          condition: () => this.showHIVQuestions,\n          validation: (val: any) => Validation.required(val),\n          options: () => [\n            {\n              label: \"Positive on ART\",\n              value: \"Positive on ART\",\n            },\n            {\n              label: \"Positive Not on ART\",\n              value: \"Positive Not on ART\",\n            },\n            {\n              label: \"Negative\",\n              value: \"Negative\",\n            },\n            {\n              label: \"Never tested\",\n              value: \"Never tested\",\n            },\n            {\n              label: \"Prefers Not to disclose\",\n              value: \"Undisclosed\",\n            },\n          ],\n          computedValue: (value: any) => ({\n            obs: this.assessment.buildValueCoded(\"HIV status\", value.value)\n          })\n        },\n        ...generateDateFields(\n          {\n            id: \"hiv_test_date\",\n            helpText: \"HIV test result date\",\n            required: true,\n            condition: (formData: any) =>\n              formData.hiv_status.value.match(/Negative|ART/i),\n            minDate: () => this.patient.getBirthdate(),\n            maxDate: () => this.assessment.getDate(),\n            estimation: {\n              allowUnknown: false,\n            },\n            computeValue: (date: string, isEstimate: boolean) => {\n              return {\n                date,\n                tag: \"cxca screening\",\n                isEstimate,\n                obs: this.assessment.buildValueDate(\"HIV test date\", date),\n              };\n            },\n          },\n          this.assessment.getDate()\n        ),\n        {\n          id: \"ever_had_cxca\",\n          helpText: \"Ever had CxCa screening\",\n          type: FieldType.TT_SELECT,\n          condition: (formData: any) =>\n            formData.reason_for_visit.value !== \"Initial screening\",\n          options: () => this.yesNoOptions(),\n          validation: (val: any) => Validation.required(val),\n          computedValue: (value: any) => ({\n            obs: this.assessment.buildValueCoded(\"Ever had CxCa\", value.value)\n          })\n        },\n        {\n          id: \"results_available\",\n          helpText: \"Results available?\",\n          type: FieldType.TT_SELECT,\n          validation: (val: any) => Validation.required(val),\n          \n          condition: (formData: any) =>\n            formData.reason_for_visit.value !== \"Initial screening\" && formData.ever_had_cxca.value !== \"No\",\n          options: () => this.yesNoOptions(),\n          computedValue: (value: any) => ({\n            obs: this.assessment.buildValueCoded(\"CxCa test results\", value.value)\n          })\n        },\n        {\n          id: \"location\",\n          helpText: \"CxCa screening location\",\n          type: FieldType.TT_SELECT,\n          validation: (val: any) => Validation.required(val),\n          options: (_: any, filter = \"\") => this.getFacilities(filter),\n          config: {\n            showKeyboard: true,\n            isFilterDataViaApi: true,\n          },\n          condition: (formData: any) => this.enterPreviousCxCaData(formData),\n          computedValue: (value: any) => ({\n            obs: this.assessment.buildValueText(\"Previous CxCa location\", value.value)\n          })\n        },\n        ...generateDateFields(\n          {\n            id: \"cxca_date\",\n            helpText: \"Previous CxCa test\",\n            required: true,\n            minDate: () => this.patient.getBirthdate(),\n            maxDate: () => this.assessment.getDate(),\n            estimation: {\n              allowUnknown: false,\n            },\n            condition: (formData: any) => this.enterPreviousCxCaData(formData),\n            computeValue: (date: string, isEstimate: boolean) => {\n              return {\n                date,\n                tag: \"cxca screening\",\n                isEstimate,\n                obs: this.assessment.buildValueDate(\"cxca test date\", date),\n              };\n            },\n          },\n          this.assessment.getDate()\n        ),\n        {\n          id: \"previous_screening_method\",\n          helpText: \"Previous screening method\",\n          type: FieldType.TT_SELECT,\n          validation: (val: any) => Validation.required(val),\n          condition: (formData: any) => this.enterPreviousCxCaData(formData),\n          options: () => [\n            {\n              label: \"VIA\",\n              value: \"VIA\",\n            },\n            {\n              label: \"PAP Smear\",\n              value: \"PAP Smear\",\n            },\n            {\n              label: \"HPV DNA\",\n              value: \"HPV DNA\",\n            },\n            {\n              label: \"Speculum Exam\",\n              value: \"Speculum Exam\",\n            },\n          ],\n          computedValue: (value: any) => ({\n            obs: this.assessment.buildValueCoded(\"Previous CxCa screening method\", value.value)\n          })\n        },\n        {\n          id: \"offer_CxCa\",\n          helpText: \"Offer CxCa screening today\",\n          type: FieldType.TT_SELECT,\n          validation: (val: any) => Validation.required(val),\n          options: () => this.yesNoOptions(),\n          computedValue: (value: any) => ({\n            obs: this.assessment.buildValueCoded(\"Offer CxCa\", value.value)\n          })\n        },\n        {\n          id: \"screening_method\",\n          helpText: \"Screening method being offered\",\n          type: FieldType.TT_SELECT,\n          validation: (val: any) => Validation.required(val),\n          condition: (formData: any) => formData.offer_CxCa.value === \"Yes\",\n          options: () => [\n            {\n              label: \"VIA\",\n              value: \"VIA\",\n            },\n            {\n              label: \"PAP Smear\",\n              value: \"PAP Smear\",\n            },\n            {\n              label: \"HPV DNA\",\n              value: \"HPV DNA\",\n            },\n            {\n              label: \"Speculum Exam\",\n              value: \"Speculum Exam\",\n            },\n          ],\n          computedValue: (value: any) => ({\n            obs: this.assessment.buildValueCoded(\"CxCa screening method\", value.value)\n          }),\n        },\n        {\n          id: \"reason_for_no_cxca\",\n          helpText: \"Reason for NOT offering CxCa screening\",\n          type: FieldType.TT_SELECT,\n          validation: (val: any) => Validation.required(val),\n          condition: (formData: any) => formData.offer_CxCa.value === \"No\",\n          options: () => this.getReasonsForNoCxcaOptions(),\n          computedValue: (value: any) => ({\n            obs: this.assessment.buildValueCoded(\"Reason for NOT offering CxCa\", value.value)\n          }),\n        },\n      ];\n    },\n  },\n});\n","import { render } from \"./CxCaTest.vue?vue&type=template&id=52f44ce7&ts=true\"\nimport script from \"./CxCaTest.vue?vue&type=script&lang=ts\"\nexport * from \"./CxCaTest.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/andrew-dev/Projects/HIS-Core/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"sourceRoot":""}