{"version":3,"sources":["webpack:///./src/apps/CxCa/views/encounters/CxCaResult.vue?7bc9","webpack:///./src/apps/CxCa/views/encounters/CxCaResult.vue","webpack:///./src/apps/CxCa/views/encounters/CxCaResult.vue?a4af","webpack:///./src/guidelines/encounter_guidelines.ts","webpack:///./node_modules/cache-loader/dist/cjs.js","webpack:///./src/views/EncounterMixin.vue","webpack:///./node_modules/vue-loader-v16/dist/templateLoader.js","webpack:///./src/components/Forms/HisStandardForm.vue","webpack:///./src/utils/GuidelineEngine.ts","webpack:///./node_modules/eslint-loader/index.js"],"names":["render","_ctx","_cache","$props","$setup","$data","$options","_component_his_standard_form","_resolveComponent","_openBlock","_createBlock","fields","onFinishAction","onFinish","skipSummary","cancelDestinationPath","cancelDestination","defineComponent","mixins","EncounterMixinVue","components","HisStandardForm","data","patientType","watch","patient","handler","PatientTypeService","patientID","providerID","loadPatientType","getFields","deep","methods","formData","getFacilities","filter","id","helpText","type","FieldType","TT_SELECT","validation","val","Validation","required","options","mapOptions","__exports__","FlowState","dformat","d","HisDate","toStandardHisDisplayFormat","ENCOUNTER_GUIDELINES","priority","actions","alert","outcomeStartDate","infoActionSheet","name","slot","color","action","GO_TO_PATIENT_DASHBOARD","CHANGE_PATIENT_OUTCOME","CONTINUE","conditions","outcome","startDate","sessionDate","birthDate","CHANGE_SESSION_DATE","selection","providers","encounterName","apiDate","optionsActionSheet","role","modal","value","flowState","SET_PROVIDER","isBdeMode","isBDE","facts","ready","route","params","patient_id","parseInt","Store","get","then","patientData","setEncounterFacts","checkEncounterGuidelines","immediate","computed","patientDashboardUrl","runflowState","state","states","username","split","provider","find","person_id","$router","push","EXIT","gotoPatientDashboard","findings","matchToGuidelines","index","finding","status","program","e","console","error","toastDanger","ProgramService","getSessionDate","getCachedApiDate","getBirthdate","$route","toString","toUpperCase","sort","a","b","usernameA","usernameB","map","p","isEmpty","person","names","latestName","given_name","family_name","toOption","label","other","mapStrToOptions","items","i","path","nextTask","yesNoOptions","toYesNoOption","values","option","yesNoUnknownOptions","resolveObs","obs","tag","Object","reduce","accum","cur","Array","isArray","concat","Promise","all","inArray","arr","expression","length","validateSeries","condition","_resolveDynamicComponent","formType","activeField","onOnFinish","onOnIndex","onIndex","TouchScreenForm","emits","props","Function","Boolean","default","String","computedData","this","$emit","isCondition","ignored","undefined","prop","includes","every","sortByRelevance","guidelines","target","targetEvent","matches","guidelineIndex","targetValidations","some","title","description","text","info","async","facilities","LocationService","f","trim","facility","location_id","getLabFacilities","getLabs","getFacilityWards","wards","ward","getSpecialistClinics","clinics","clinic","getRegions","regions","region","region_id","getDistricts","regionID","districts","district","district_id","getTraditionalAuthorities","districtID","TAs","TA","traditional_authority_id","getVillages","traditionalAuthorityID","villages","village","village_id"],"mappings":"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","file":"js/chunk-449ba214.8b81feac.js","sourcesContent":["import { resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_his_standard_form = _resolveComponent(\"his-standard-form\")\n\n  return (_openBlock(), _createBlock(_component_his_standard_form, {\n    fields: _ctx.fields,\n    onFinishAction: _ctx.onFinish,\n    skipSummary: true,\n    cancelDestinationPath: _ctx.cancelDestination\n  }, null, 8, [\"fields\", \"onFinishAction\", \"cancelDestinationPath\"]))\n}","\nimport { defineComponent } from \"vue\";\nimport { FieldType } from \"@/components/Forms/BaseFormElements\";\nimport HisStandardForm from \"@/components/Forms/HisStandardForm.vue\";\nimport Validation from \"@/components/Forms/validations/StandardValidations\";\nimport EncounterMixinVue from \"../../../../views/EncounterMixin.vue\";\nimport { PatientTypeService } from \"@/apps/ART/services/patient_type_service\";\nimport { getFacilities } from \"@/utils/HisFormHelpers/LocationFieldOptions\";\n\nexport default defineComponent({\n  mixins: [EncounterMixinVue],\n  components: { HisStandardForm },\n  data: () => ({\n    patientType: {} as any,\n  }),\n  watch: {\n    patient: {\n      async handler() {\n        this.patientType = new PatientTypeService(\n          this.patientID,\n          this.providerID\n        );\n        await this.patientType.loadPatientType();\n        this.fields = this.getFields();\n      },\n      deep: true,\n    },\n  },\n  methods: {\n    async onFinish(formData: any) {\n      //       const encounter = await this.patientType.createEncounter();\n      //       if (!encounter) return toastWarning(\"Unable to create encounter\");\n      //       this.patientType.setLocationName(formData?.location?.label);\n      //       this.patientType.setPatientType(formData?.patient_type?.value);\n      //       await this.patientType.save();\n      //       toastSuccess(\"Observations and encounter created!\");\n      //       this.nextTask();\n    },\n    getFacilities(filter = \"\") {\n      return getFacilities(filter);\n    },\n    getFields(): any {\n      return [\n        {\n          id: \"via_test_results\",\n          helpText: \"VIA test results\",\n          type: FieldType.TT_SELECT,\n          validation: (val: any) => Validation.required(val),\n          options: () => {\n            return this.mapOptions([\n              \"Negative\",\n              \"Positive\",\n              \"Suspect\",\n            ]);\n          },\n        },\n        {\n          id: \"pap_smear\",\n          helpText: \"PAP Smear Results\",\n          type: FieldType.TT_SELECT,\n          validation: (val: any) => Validation.required(val),\n          options: () => {\n            return this.mapOptions([\n              \"PAP Smear normal\",\n              \"PAP Smear abnormal\"\n            ]);\n          },\n        },\n        {\n          id: \"hpv_dna\",\n          helpText: \"HPV DNA Test Results\",\n          type: FieldType.TT_SELECT,\n          validation: (val: any) => Validation.required(val),\n          options: () => {\n            return this.mapOptions([\n              \"HPV negative\",\n              \"HPV positive\"\n            ]);\n          },\n        },\n        {\n          id: \"speculum_exam\",\n          helpText: \"Speculum Exam Results\",\n          type: FieldType.TT_SELECT,\n          validation: (val: any) => Validation.required(val),\n          options: () => {\n            return this.mapOptions([\n              \"Visible Lesion\",\n              \"No Visible lesion\",\n              \"Other gynaecological condition\",\n            ]);\n          },\n        },\n      ];\n    },\n  },\n});\n","import { render } from \"./CxCaResult.vue?vue&type=template&id=59ae6bcf&ts=true\"\nimport script from \"./CxCaResult.vue?vue&type=script&lang=ts\"\nexport * from \"./CxCaResult.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/andrew-dev/Projects/HIS-Core/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { infoActionSheet, optionsActionSheet } from \"@/utils/ActionSheets\";\nimport { GuideLineInterface } from \"@/utils/GuidelineEngine\";\nimport HisDate from '@/utils/Date'\n\nexport enum FlowState {\n    SET_PROVIDER = 'SET_PROVIDER',\n    CHANGE_SESSION_DATE = 'change_session_date',\n    GO_TO_PATIENT_DASHBOARD = 'go_to_patient_dashboard',\n    CHANGE_PATIENT_OUTCOME = 'change_outcome',\n    CONTINUE = 'continue',\n    EXIT = 'exit'\n}\nconst dformat = (d: string) => HisDate.toStandardHisDisplayFormat(d)\n\nexport const ENCOUNTER_GUIDELINES: Record<string, GuideLineInterface> = {\n    \"Warn if attempting to create new encounters for a deceased patient\": {\n        priority: 1,\n        actions: {\n            alert: async ({ outcomeStartDate }: any) => {\n                const action = await infoActionSheet(\n                    'Data Integrity Issue Found',\n                    `Patient died on ${dformat(outcomeStartDate)}`,\n                    'Proceeding with this outcome might affect accuracy of some reports',\n                    [\n                        { name: 'Cancel', slot: 'end', color: 'primary'},\n                        { name: 'Change outcome', slot: 'end', color: 'primary'},\n                        { name: 'Continue Anyway', slot: 'end', color: 'danger'}\n                    ]\n                )\n                return action === 'Cancel'\n                    ? FlowState.GO_TO_PATIENT_DASHBOARD\n                    : action === 'Change outcome'\n                    ? FlowState.CHANGE_PATIENT_OUTCOME\n                    : FlowState.CONTINUE\n            }\n        },\n        conditions: {\n            outcome(outcome: string) {\n                return outcome === 'Patient died'\n            },\n            outcomeStartDate(startDate: string, { sessionDate }: any) {\n                return sessionDate >= startDate\n            }\n        }\n    },\n    \"A patient's date of birth must not be less than Session Date\": {\n        priority: 2,\n        actions: {\n            alert: async ({ birthDate, sessionDate}: any) => {\n                const action = await infoActionSheet(\n                    'Data integrity issue found', '',\n                    `Session date ${dformat(sessionDate)} is less than birth date of ${dformat(birthDate)}`,\n                    [\n                        { name: 'Cancel', slot: 'end', color: 'danger'},\n                        { name: 'Change session date', slot: 'end', color: 'success'}\n                    ]\n                )\n                return action === 'Change session date'\n                    ? FlowState.CHANGE_SESSION_DATE\n                    : FlowState.GO_TO_PATIENT_DASHBOARD\n            }\n        },\n        conditions: {\n            birthDate(birthDate: string, { sessionDate }: any) {\n                return sessionDate < birthDate\n            }\n        }\n    },\n    \"Select Encounter provider when in back data entry\": {\n        priority: 3,\n        actions: {\n            selection: async ({ providers, encounterName, sessionDate, apiDate }: any) => {\n                const modal = await optionsActionSheet(\n                    `Please select a provider for ${encounterName}`,\n                    `BDE: ${dformat(sessionDate)} | Current: ${dformat(apiDate)}`,\n                    providers,\n                    [\n                        { name: 'Cancel', color: 'danger', slot: 'start', role: 'default'},\n                        { name: 'Confirm', slot: 'end', role: 'action' }\n                    ]\n                )\n                return modal.action === 'Cancel' \n                    ? { value: -1, flowState: FlowState.GO_TO_PATIENT_DASHBOARD }\n                    : { value: modal.selection, flowState: FlowState.SET_PROVIDER }\n            }\n        },\n        conditions: {\n            isBdeMode(isBDE: boolean) {\n                return isBDE\n            }\n        }\n    }\n}","\nimport TouchScreenForm from \"@/components/Forms/TouchScreenForm.vue\";\nimport { defineComponent, PropType } from \"vue\";\nimport { Field } from \"./FieldInterface\";\n\nexport default defineComponent({\n    name: \"HisStandardForm\",\n    components: { TouchScreenForm },\n    emits: [\n        'onFinish',\n        'onIndex'\n    ],\n    data: () => ({\n        formType: 'touch-screen-form' as string\n    }),\n    props: {\n        onFinishAction: {\n            type: Function\n        },\n        skipSummary: {\n            type: Boolean,\n            default: false\n        },\n        activeField: {\n            type: String\n        },\n        fields: {\n            type: Object as PropType<Field[]>,\n            required: true\n        },\n        cancelDestinationPath: {\n            type: String,\n            required: false,\n        }\n    },\n    methods: {\n        onFinish(formData: any, computedData: any) {\n            this.$emit('onFinish', formData, computedData)\n        },\n        onIndex(i: number) {\n            this.$emit('onIndex', i)\n        }\n    }\n})\n","import script from \"./EncounterMixin.vue?vue&type=script&lang=ts\"\nexport * from \"./EncounterMixin.vue?vue&type=script&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { resolveDynamicComponent as _resolveDynamicComponent, openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return (_openBlock(), _createBlock(_resolveDynamicComponent(_ctx.formType), {\n    fields: _ctx.fields,\n    skipSummary: _ctx.skipSummary,\n    activeField: _ctx.activeField,\n    cancelDestinationPath: _ctx.cancelDestinationPath,\n    onOnFinish: _ctx.onFinish,\n    onFinish: _ctx.onFinishAction,\n    onOnIndex: _ctx.onIndex\n  }, null, 8, [\"fields\", \"skipSummary\", \"activeField\", \"cancelDestinationPath\", \"onOnFinish\", \"onFinish\", \"onOnIndex\"]))\n}","import { render } from \"./HisStandardForm.vue?vue&type=template&id=6daa0375&ts=true\"\nimport script from \"./HisStandardForm.vue?vue&type=script&lang=ts\"\nexport * from \"./HisStandardForm.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/andrew-dev/Projects/HIS-Core/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","/**\n * Compares patient facts against a predefined guideline Object.\n*/\nexport interface DescriptionInterface {\n    color?: 'primary' | 'secondary' | 'danger' | 'warning';\n    info: Function;\n    text?: string;\n    show: 'onChecked' | 'always';\n}\n\nexport interface GuideLineInterface {\n    title?: string;\n    concept?: string;\n    priority: number;\n    conditions: Record<string, Function>;\n    actions?: Record<string, any>; //TODO: should <key, Function>\n    data?: Record<string, any>;\n    description?: DescriptionInterface;\n    target?: string;\n    targetEvent?: string;\n}\n\n/**\n * Match the facts with guidelines\n * @param facts \n * @param conditions \n * @returns \n */\nfunction isCondition(facts: Record<string, any>, conditions: Record<string, Function>): boolean {\n    const state = [] \n    const ignored = [-1, '', null, undefined]\n\n    for(const prop in conditions) {\n        if (!(prop in facts)) \n            continue\n        \n        const value = facts[prop]\n        if (ignored.includes(value)) {\n            state.push(false)\n            continue\n        }\n\n        state.push(conditions[prop](value, facts))\n    }\n    return state.every(Boolean)\n}\n\n/**\n * Sort guidelines in the order of importance/relevance\n * @param findings \n * @returns \n */\nfunction sortByRelevance(findings: Array<GuideLineInterface>) {\n    return findings.sort((a, b) => a.priority < b.priority ? -1 : 1)\n}\n\n/**\n * Check the guideline for matching facts and return matching object \n * @param facts: key value pair for used for searching in guidelines\n * @param guidelines: A dictionary containing fixed rules/validations that conforms to GuideLineInterface\n * @param target: Used for matching a target defined in a guidlines before executing conditions\n * @param targetEvent: used for matching a target event in a guideline before executing conditions\n * @returns\n */\nexport function matchToGuidelines(\n    facts: Record<string, any>, \n    guidelines: Record<string, GuideLineInterface>,\n    target='', \n    targetEvent=''): Array<GuideLineInterface> {\n\n    const matches = []\n    for(const guidelineIndex in guidelines) {\n        const data: GuideLineInterface = guidelines[guidelineIndex]\n \n        const targetValidations = [\n            (data.target && target && data.target != target),\n            (data.targetEvent && targetEvent \n                && data.targetEvent != targetEvent)\n        ]\n\n        if (targetValidations.some(Boolean)) {\n            continue\n        }\n\n        if (isCondition(facts, data.conditions)) {\n            data.title = guidelineIndex\n            if (data.description) {\n                data.description.text = data.description.info(facts)\n            }\n            matches.push(data)\n        }\n    }\n    return sortByRelevance(matches)\n}\n","import {LocationService} from \"@/services/location_service\"\nimport { Option } from \"@/components/Forms/FieldInterface\"\nimport { isEmpty } from \"lodash\"\n\nexport async function getFacilities(filter=''): Promise<Option[]> {\n    const facilities = await LocationService.getFacilities({name: filter})\n    return facilities.filter((f: any) => !isEmpty(f) && f.name.trim() !='')\n        .map((facility: any) => ({\n            label: facility.name,\n            value: facility.location_id,\n            other: facility\n        }))\n}\n\nexport async function getLabFacilities(filter=''): Promise<Option[]> {\n    const facilities = await LocationService.getLabs({'search_name': filter})\n    return facilities.map((facility: any) => ({\n            label: facility,\n            value: facility\n        }))\n}\n\nexport async function getFacilityWards(filter=''): Promise<Option[]> {\n    const wards = await LocationService.getFacilities({\n        name: filter,\n        tag: 'Facility adult sections'\n    })\n\n    return wards.map((ward: any) => ({\n        label: ward.name,\n        value: ward.name,\n        other: ward\n    }))\n}\n\nexport async function getSpecialistClinics(): Promise<Option[]> {\n    const clinics = await LocationService.getSpecialistClinics()\n    return clinics.map((clinic: any) => ({\n        label: clinic.name,\n        value: clinic.name,\n        other: clinic\n    }))\n}\n\nexport async function getRegions(): Promise<Option[]> {\n    const regions = await LocationService.getRegions()\n    return regions.map((region: any) => ({\n        label: region.name,\n        value: region.region_id,\n        other: region\n    }))\n}\n\nexport async function getDistricts(regionID: number): Promise<Option[]> {\n    const districts = await LocationService.getDistricts(regionID)\n    return districts.map((district: any) => ({\n        label: district.name,\n        value: district.district_id,\n        other: district\n    }))\n}\n\nexport async function getTraditionalAuthorities(districtID: number, name=''): Promise<Option[]> {\n    const TAs = await LocationService.getTraditionalAuthorities(districtID, name)\n    return TAs.map((TA: any) => ({\n        label: TA.name,\n        value: TA.traditional_authority_id,\n        other: TA\n    }))\n}\n\nexport async function getVillages(traditionalAuthorityID: number, name=''): Promise<Option[]> {\n    const villages = await LocationService.getVillages(traditionalAuthorityID, name)\n    return villages.map((village: any) => ({\n        label: village.name,\n        value: village.village_id,\n        other: village\n    }))\n}\n"],"sourceRoot":""}