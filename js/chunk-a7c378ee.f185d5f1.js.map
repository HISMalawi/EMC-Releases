{"version":3,"sources":["webpack:///./node_modules/vue-loader-v16/dist/templateLoader.js","webpack:///./node_modules/cache-loader/dist/cjs.js","webpack:///./src/apps/OPD/views/encounters/radiology.vue","webpack:///./src/guidelines/encounter_guidelines.ts","webpack:///./src/views/EncounterMixin.vue","webpack:///./src/components/Forms/HisStandardForm.vue","webpack:///./node_modules/eslint-loader/index.js","webpack:///./src/utils/GuidelineEngine.ts"],"names":["render","_ctx","_cache","$props","$setup","$data","$options","_component_his_standard_form","_resolveComponent","_component_ion_page","_openBlock","_createBlock","default","_withCtx","_createVNode","cancelDestinationPath","cancelDestination","fields","onFinishAction","onSubmit","_","defineComponent","components","HisStandardForm","mixins","EncounterMixinVue","data","radiologyService","isPacsEnabled","previousRadiologyExaminations","watch","ready","isReady","PatientRadiologyService","patientID","providerID","OPD_GLOBAL_PROP","isPACsEnabled","showPreviousRadiolgy","patient","getFields","immediate","deep","methods","computedData","Promise","all","radiology","createEncounter","obsObj","savedObsData","saveObservationList","printOrders","submitToPacs","error","console","log","gotoPatientDashboard","params","getPreviousRadiologyExaminations","url","columns","rows","order","row","children","accession_number","value_text","moment","obs_datetime","format","push","label","value","other","id","helpText","condition","type","FieldType","TT_TABLE_VIEWER","options","d","getTableData","config","hiddenFooterBtns","TT_RADIOLOGY_PICKER","validation","Validation","required","disableBackBtn","computedValue","map","buildValueCoded","option","parent","child","buildValueCodedFromConceptId","concept_id","__exports__","FlowState","dformat","HisDate","toStandardHisDisplayFormat","ENCOUNTER_GUIDELINES","priority","actions","alert","outcomeStartDate","infoActionSheet","name","slot","color","action","GO_TO_PATIENT_DASHBOARD","CHANGE_PATIENT_OUTCOME","CONTINUE","conditions","outcome","startDate","sessionDate","birthDate","CHANGE_SESSION_DATE","selection","providers","encounterName","apiDate","optionsActionSheet","role","modal","flowState","SET_PROVIDER","isBdeMode","isBDE","facts","handler","route","patient_id","parseInt","Store","get","then","patientData","setEncounterFacts","checkEncounterGuidelines","computed","patientDashboardUrl","runflowState","state","states","username","split","provider","find","person_id","$router","EXIT","findings","matchToGuidelines","index","finding","status","program","e","toastDanger","ProgramService","getSessionDate","getCachedApiDate","getBirthdate","$route","toString","toUpperCase","sort","a","b","usernameA","usernameB","p","isEmpty","person","names","latestName","given_name","family_name","toOption","mapStrToOptions","items","i","path","nextTask","yesNoOptions","toYesNoOption","values","mapOptions","yesNoUnknownOptions","resolveObs","obs","tag","Object","filter","reduce","accum","cur","Array","isArray","concat","inArray","arr","expression","length","validateSeries","_resolveDynamicComponent","formType","skipSummary","activeField","onOnFinish","onFinish","onOnIndex","onIndex","TouchScreenForm","emits","props","Function","Boolean","String","formData","this","$emit","AppEncounterService","constructor","super","radiologyType","ConceptService","getConceptSet","patientId","Service","getJson","getRadiologyObs","getID","thirdpartyapps","getThirdpartyApps","app","accessionNumber","orders","async","obs_id","getFullName","getAge","getGender","getNationalID","getEncounterID","getDate","getUserName","getUserID","getUserRoles","postJson","lastAccessionNumber","getAccesionNumber","observations","getConceptName","value_coded","printService","PrintoutService","patientNationalId","patientName","urls","fullXrayOrder","batchPrintLbls","isCondition","ignored","undefined","prop","includes","every","sortByRelevance","guidelines","target","targetEvent","matches","guidelineIndex","targetValidations","some","title","description","text","info"],"mappings":"yIAEM,SAAUA,EAAOC,EAAMC,EAAQC,EAAQC,EAAQC,EAAOC,GAC1D,MAAMC,EAA+BC,8BAAkB,qBACjDC,EAAsBD,8BAAkB,YAE9C,OAAQE,yBAAcC,yBAAaF,EAAqB,KAAM,CAC5DG,QAASC,qBAAS,IAAM,CACtBC,yBAAaP,EAA8B,CACzCQ,sBAAuBd,EAAKe,kBAC5BC,OAAQhB,EAAKgB,OACbC,eAAgBjB,EAAKkB,UACpB,KAAM,EAAG,CAAC,wBAAyB,SAAU,qBAElDC,EAAG,I,iGCHQC,+BAAgB,CAC7BC,WAAY,CAAEC,wBACdC,OAAQ,CAACC,QACTC,KAAM,MACJC,iBAAkB,GAClBC,eAAe,EACfC,8BAA+B,KAEjCC,MAAO,CACLC,MAAO,CACL,cAAcC,GACTA,IACD,KAAKL,iBAAmB,IAAIM,OAAwB,KAAKC,UAAW,KAAKC,YACzE,KAAKP,oBAAuBQ,OAAgBC,gBAC5C,KAAKR,oCAAsC,KAAKF,iBAAiBW,qBAAqB,KAAKC,SAC3F,KAAKtB,OAAS,KAAKuB,cAGvBC,WAAW,EACXC,MAAM,IAGVC,QAAS,CACP,eAAevB,EAAQwB,GACrB,MAAMlB,QAAamB,QAAQC,IAAIF,EAAaG,iBACtC,KAAKpB,iBAAiBqB,kBAC5B,MAAMC,QAAe,KAAKtB,iBAAiBsB,OAAOvB,GAC5CwB,QAAqB,KAAKvB,iBAAiBwB,oBAAoBF,GAErE,SADM,KAAKtB,iBAAiByB,YAAYF,EAAc,KAAKX,SACxD,KAAKX,cACN,UACQ,KAAKD,iBAAiB0B,aAAaH,EAAc,KAAKX,SAC5D,MAAOe,GACPC,QAAQC,IAAIF,GAGhB,KAAKG,wBAEP,qBACE,MAAMC,QAAe,KAAK/B,iBAAiBgC,iCAAiC,KAAKpB,SAC3Eb,EAAOgC,EAAOhC,KACdkC,EAAMF,EAAOE,IACbC,EAAU,CAAC,aAAa,YAAa,aAAc,UAAW,UAC9DC,EAAO,GACb,IAAK,MAAMC,KAASrC,EAAM,CACxB,MAAMsC,EAAM,CACVtC,EAAKqC,GAAOE,SAAS,GAAGC,iBACxBxC,EAAKqC,GAAOI,WACZzC,EAAKqC,GAAOE,SAAS,GAAGE,WACxBC,IAAO1C,EAAKqC,GAAOM,cAAcC,OAAO,eACxC,6CAA6CV,kEAI/CE,EAAKS,KAAKP,GAEZ,MAAO,CACL,CACEQ,MAAO,GACPC,MAAO,GACPC,MAAO,CAAEb,UAASC,WAIxBtB,YACE,MAAO,CACL,CACEmC,GAAI,oBACJC,SAAU,kCACVC,UAAW,IAAM,KAAKhD,8BACtBiD,KAAMC,OAAUC,gBAChBC,QAAUC,GAAW,KAAKC,eAC1BC,OAAQ,CACNC,iBAAkB,CAAC,WAGvB,CACEV,GAAI,YACJC,SAAU,wBACVE,KAAMC,OAAUO,oBAChBC,WAAa7D,GAAc8D,OAAWC,SAAS/D,GAC/C0D,OAAQ,CACNC,iBAAkB,CAAE,KAAKK,mBAE3BC,cAAgBV,GACPA,EAAQW,IAAI,oBACP,KAAKjE,iBAAiBkE,gBAAgB,mBAAoBC,EAAOpB,MAAMqB,QACjFC,YAAc,KAAKrE,iBAAiBsE,6BAA6BH,EAAOpB,MAAMqB,OAAQD,EAAOpB,MAAMwB,kBAM7GR,iBACE,OAAG,KAAK7D,8BACC,GACK,W,qBCtGpB,MAAMsE,EAA2B,IAAgB,EAAQ,CAAC,CAAC,SAASnG,KAErD,gB,gDCHHoG,E,2GAAZ,SAAYA,GACRA,iCACAA,+CACAA,uDACAA,6CACAA,yBACAA,kBANJ,CAAYA,MAAS,KAQrB,IAAMC,EAAU,SAACnB,GAAD,OAAeoB,OAAQC,2BAA2BrB,IAErDsB,EAA2D,CACpE,qEAAsE,CAClEC,SAAU,EACVC,QAAS,CACLC,MAAO,WAAF,8CAAE,8GAASC,EAAT,EAASA,iBAAT,SACkBC,eACjB,6BADgC,0BAEbR,EAAQO,IAC3B,qEACA,CACI,CAAEE,KAAM,SAAUC,KAAM,MAAOC,MAAO,WACtC,CAAEF,KAAM,iBAAkBC,KAAM,MAAOC,MAAO,WAC9C,CAAEF,KAAM,kBAAmBC,KAAM,MAAOC,MAAO,YARpD,cACGC,EADH,yBAWe,WAAXA,EACDb,EAAUc,wBACC,mBAAXD,EACAb,EAAUe,uBACVf,EAAUgB,UAfb,2CAAF,sDAAE,IAkBXC,WAAY,CACRC,QADQ,SACAA,GACJ,MAAmB,iBAAZA,GAEXV,iBAJQ,SAISW,EAJT,GAIgD,IAAlBC,EAAkB,EAAlBA,YAClC,OAAOA,GAAeD,KAIlC,+DAAgE,CAC5Dd,SAAU,EACVC,QAAS,CACLC,MAAO,WAAF,8CAAE,gHAASc,EAAT,EAASA,UAAWD,EAApB,EAAoBA,YAApB,SACkBX,eACjB,6BAA8B,GADE,uBAEhBR,EAAQmB,GAFQ,uCAEmCnB,EAAQoB,IAC3E,CACI,CAAEX,KAAM,SAAUC,KAAM,MAAOC,MAAO,UACtC,CAAEF,KAAM,sBAAuBC,KAAM,MAAOC,MAAO,aANxD,cACGC,EADH,yBASe,wBAAXA,EACDb,EAAUsB,oBACVtB,EAAUc,yBAXb,2CAAF,sDAAE,IAcXG,WAAY,CACRI,UADQ,SACEA,EADF,GACyC,IAAlBD,EAAkB,EAAlBA,YAC3B,OAAOA,EAAcC,KAIjC,oDAAqD,CACjDhB,SAAU,EACVC,QAAS,CACLiB,UAAW,WAAF,8CAAE,oHAASC,EAAT,EAASA,UAAWC,EAApB,EAAoBA,cAAeL,EAAnC,EAAmCA,YAAaM,EAAhD,EAAgDA,QAAhD,SACaC,eAAmB,gCAAD,OACFF,GADE,eAE1BxB,EAAQmB,GAFkB,uBAESnB,EAAQyB,IACnDF,EACA,CACI,CAAEd,KAAM,SAAUE,MAAO,SAAUD,KAAM,QAASiB,KAAM,WACxD,CAAElB,KAAM,UAAWC,KAAM,MAAOiB,KAAM,YAPvC,cACDC,EADC,yBAUiB,WAAjBA,EAAMhB,OACP,CAAExC,OAAQ,EAAGyD,UAAW9B,EAAUc,yBAClC,CAAEzC,MAAOwD,EAAMN,UAAWO,UAAW9B,EAAU+B,eAZ9C,2CAAF,sDAAE,IAefd,WAAY,CACRe,UADQ,SACEC,GACN,OAAOA,M,gDF5ERhH,+BAAgB,CAC3BC,WAAY,CAAEC,wBACdG,KAAM,MACFa,QAAS,GACTtB,OAAQ,GACRiB,UAAW,GACXC,YAAa,EACbyF,UAAW,GACXU,MAAO,CACHd,YAAa,GACbM,QAAS,GACTD,cAAe,MACfD,UAAW,GACXQ,WAAW,EACXX,UAAW,GACXH,QAAS,GACTV,iBAAkB,IAEtB7E,OAAO,IAEXD,MAAO,CACJ,OAAU,CACLyG,QAAQC,GACDA,EAAM9E,OAAO+E,YAAc,KAAKvG,WAAasG,EAAM9E,OAAO+E,aACzD,KAAKvG,UAAYwG,SAASF,EAAM9E,OAAO+E,YACvCE,OAAMC,IAAI,iBAAkB,CAAE1G,UAAW,KAAKA,YACzC2G,KAAKC,IACF,KAAKvG,QAAUuG,EACf,KAAKC,oBAAoBF,KAAK,KAC1B,KAAKG,2BAA2BH,KAAK,KACjC,KAAK9G,OAAQ,UAMrCU,WAAW,EACXC,MAAM,IAGduG,SAAU,CACNjI,oBACI,OAAO,KAAKkI,wBAGpBvG,QAAS,CACLwG,aAAaC,EAAkB1F,EAAO,MAClC,MAAM2F,EAAc,GAmBpB,GAlBAA,EAAOjD,EAAU+B,cAAiBR,IAC9B,MAAQ2B,GAAa3B,EAAU4B,MAAM,KAC/BC,EAAWC,kBAAK,KAAK7B,UAAW,CAAE0B,aAExC,OADIE,IAAU,KAAKrH,WAAaqH,EAASE,WAClCtD,EAAUgB,UAErBiC,EAAOjD,EAAUsB,qBAAuB,KACpC,KAAKiC,QAAQpF,KAAK,kDAAkD,KAAKrC,WAClEkE,EAAUwD,MAErBP,EAAOjD,EAAUe,wBAA0B,KACvC,KAAKwC,QAAQpF,KAAK,qBAAqB,KAAKrC,WACrCkE,EAAUwD,MAErBP,EAAOjD,EAAUc,yBAA2B,KACxC,KAAKzD,uBACE2C,EAAUwD,MAEjBR,KAASC,EACT,OAAOA,EAAOD,GAAO1F,IAG7B,iCACI,MAAMmG,EAAWC,eAAkB,KAAKxB,MAAO9B,GAC/C,IAAI,MAAMuD,KAASF,EAAU,SACzB,MAAMG,EAAUH,EAASE,GACzB,UAAIC,QAAJ,IAAIA,GAAJ,UAAIA,EAAStD,eAAb,OAAI,EAAkBC,MAAO,OACzB,MAAMsD,EAAS,KAAKd,mBAAc,OAAMa,QAAN,IAAMA,GAAN,UAAMA,EAAStD,eAAf,aAAM,EAAkBC,MAAM,KAAK2B,SACrE,GAAI2B,IAAW7D,EAAUwD,KAAM,OAEnC,UAAII,QAAJ,IAAIA,GAAJ,UAAIA,EAAStD,eAAb,OAAI,EAAkBiB,UAAW,OAC7B,MAAMA,QAAY,OAAMqC,QAAN,IAAMA,GAAN,UAAMA,EAAStD,eAAf,aAAM,EAAkBiB,UAAU,KAAKW,QACzD,KAAKa,aAAaxB,EAAUO,UAAWP,EAAUlD,UAI7D,0BACI,IACI,MAAMyF,QAAgBvB,OAAMC,IAAI,kBAAmB,CAAE1G,UAAW,KAAKA,YACrE,KAAKoG,MAAMhB,QAAU4C,EAAQ5C,QAC7B,KAAKgB,MAAM1B,iBAAmBsD,EAAQ3C,UACxC,MAAO4C,GACL5G,QAAQD,MAAM6G,GACdC,eAAY,GAAGD,GAEnB,KAAK7B,MAAMd,YAAc6C,OAAeC,iBACxC,KAAKhC,MAAMR,QAAUuC,OAAeE,mBACpC,KAAKjC,MAAMF,UAAYiC,OAAehC,QACtC,KAAKC,MAAMb,UAAY,KAAKlF,QAAQiI,eACpC,KAAKlC,MAAMT,cAAgB,KAAK4C,OAAO3D,KACjC,KAAK2D,OAAO3D,KAAK4D,WAAWC,cAC5B,MACFN,OAAehC,UACf,KAAKT,gBAAkBe,OAAMC,IAAI,aACjC,KAAKN,MAAMV,UAAY,KAAKA,UACvBgD,KAAK,CAACC,EAAQC,KACX,MAAMC,EAAYF,EAAEvB,SAASqB,cACvBK,EAAYF,EAAExB,SAASqB,cAC7B,OAAOI,EAAYC,GAAa,EAAID,EAAYC,EAAa,EAAI,IAEpEpF,IAAKqF,IAAU,MACZ,IAAInE,EAAO,GAAGmE,EAAE3B,SAChB,IAAK4B,qBAAO,OAACD,QAAD,IAACA,GAAD,UAACA,EAAGE,cAAJ,aAAC,EAAWC,OAAQ,OAC5B,MAAQC,IAAe,YAAEF,cAAF,eAAUC,QAAS,GAC1CtE,GAAQ,KAAKuE,EAAWC,cAAcD,EAAWE,eAErD,OAAOzE,MAIvB0E,SAAShH,EAAeE,EAAM,IAC1B,MAAO,CACHF,QACAC,MAAOD,EACPE,UAGR+G,gBAAgBC,GACZ,OAAOA,EAAM9F,IAAI+F,IAAC,CAAMnH,MAAOmH,EAAGlH,MAAOkH,MAE7CzC,sBACI,MAAO,sBAAsB,KAAKhH,WAEtCuB,uBACI,OAAO,KAAKkG,QAAQpF,KAAK,CAACqH,KAAM,KAAK1C,yBAEzC2C,WACI,OAAOA,eAAS,KAAK3J,UAAW,KAAKyH,UAEzCmC,eACI,MAAO,CACH,CAAEtH,MAAO,MAAOC,MAAO,OACvB,CAAED,MAAO,KAAMC,MAAO,QAG9BsH,cAAcvH,EAAeE,EAAW,IACpC,MAAO,CACHF,QACAC,MAAO,GACPC,MAAO,IACAA,EACHsH,OAAQ,KAAKF,kBAIzBG,WAAWhH,GACP,OAAOA,EAAQW,IAAKE,IACT,CAAEtB,MAAOsB,EAAQrB,MAAOqB,MAGvCoG,sBACI,MAAO,CACH,CAAE1H,MAAO,MAAOC,MAAO,OACvB,CAAED,MAAO,KAAMC,MAAO,MACtB,CAAED,MAAO,UAAWC,MAAO,aAGnC0H,WAAWC,EAAUC,EAAI,IACrB,MAAML,EAAcM,OAAON,OAAOI,GAC7BG,OAAQrH,GAAWA,IAAMA,EAAEmH,MAAQA,GAAe,KAARA,IAC1CG,OAAO,CAACC,EAAYC,KACjB,MAAMhL,EAAOgL,EAAIN,IAAMM,EAAIN,IAAMM,EAQjC,OAPIC,MAAMC,QAAQlL,GACd+K,EAAQA,EAAMI,OAAOnL,GACE,oBAATA,EACd+K,EAAMlI,KAAK7C,KAEX+K,EAAMlI,KAAK7C,GAER+K,GACJ,IACX,OAAO5J,QAAQC,IAAIkJ,IAEvBc,QAAQC,EAAiBC,GACrB,IACI,OAAOD,EAAIR,OAAQZ,GAAWqB,EAAWrB,IAAIsB,OAAS,EACxD,MAAO9C,GACL,OAAO,IAGf+C,eAAe7F,GACX,IACI,IAAI,MAAMsE,KAAKtE,EAAY,CACvB,MAAMxC,EAAYwC,EAAWsE,KAE7B,GAAI9G,EAAW,OAAOA,GAE5B,MAAOsF,GACL,MAAO,CAACA,QG7MxB,MAAMhE,EAAc,EAEL,U,kDJHT,SAAUnG,EAAOC,EAAMC,EAAQC,EAAQC,EAAQC,EAAOC,GAC1D,OAAQI,yBAAcC,yBAAawM,qCAAyBlN,EAAKmN,UAAW,CAC1EnM,OAAQhB,EAAKgB,OACboM,YAAapN,EAAKoN,YAClBC,YAAarN,EAAKqN,YAClBvM,sBAAuBd,EAAKc,sBAC5BwM,WAAYtN,EAAKuN,SACjBA,SAAUvN,EAAKiB,eACfuM,UAAWxN,EAAKyN,SACf,KAAM,EAAG,CAAC,SAAU,cAAe,cAAe,wBAAyB,aAAc,WAAY,c,gBCN3FrM,+BAAgB,CAC3ByF,KAAM,kBACNxF,WAAY,CAAEqM,wBACdC,MAAO,CACH,WACA,WAEJlM,KAAM,KAAM,CACR0L,SAAU,sBAEdS,MAAO,CACH3M,eAAgB,CACZ4D,KAAMgJ,UAEVT,YAAa,CACTvI,KAAMiJ,QACNnN,SAAS,GAEb0M,YAAa,CACTxI,KAAMkJ,QAEV/M,OAAQ,CACJ6D,KAAMwH,OACN7G,UAAU,GAEd1E,sBAAuB,CACnB+D,KAAMkJ,OACNvI,UAAU,IAGlB9C,QAAS,CACL6K,SAASS,EAAerL,GACpBsL,KAAKC,MAAM,WAAYF,EAAUrL,IAErC8K,QAAQ/B,GACJuC,KAAKC,MAAM,UAAWxC,O,qBInClC,MAAMxF,EAA2B,IAAgB,EAAQ,CAAC,CAAC,SAASnG,KAErD,U,oCCPf,8GAQM,MAAOiC,UAAgCmM,OAC3CC,YAAYnM,EAAmBC,GAC7BmM,MAAMpM,EAAW,IAAKC,GAGK,8BAACoM,EAAuBhC,EAAS,IAC5D,OAAOiC,OAAeC,cAAcF,EAAehC,GAGhC,sBAACmC,GACpB,IACE,MAAM9C,EAAO,yCAAyC8C,EAChDhN,QAAaiN,OAAQC,QAAQhD,GACnC,OAAOlK,EACP,MAAO4B,GACP,OAAO,GAIe,2BAACf,GACzB,aAAY2L,KAAKW,gBAAgBtM,EAAQuM,UAAU7B,OAAS,EAMxB,uCAAC1K,GACrC,MAAMwM,QAAyBJ,OAAQK,oBACvC,IAAIpL,EAAM,GACV,IAAK,MAAMqL,KAAOF,EACD,QAAZE,EAAInI,OACLlD,EAAMqL,EAAIrL,KAGVsH,qBAAQtH,KACVA,EAAM,4BAA4BsK,KAAKhM,WAEzC,MAAMR,QAAcwM,KAAKW,gBAAgBtM,EAAQuM,SACjD,OAAKpN,EAAKuL,OAAS,GAGV,CAAEvL,KAAMA,EAAMkC,IAAKA,GAIZ,mBAACV,EAAmBX,GACpC,IAAI2M,EACJ,IAAI,MAAMnL,KAASb,EACjBgM,EAAkBnL,EAAME,SAAS,GAAGC,iBAEtC,MAAMiL,QAAetM,QAAQC,IAAII,EAAa0C,IAAIwJ,UAAA,CAChD,gBAAmBrL,EAAMI,WACzB,OAAUJ,EAAMsL,OAChB,eAAkBtL,EAAME,SAAS,GAAGE,eAEhC2E,EAAc,CAClB,aAAgBvG,EAAQ+M,cACxB,WAAc/M,EAAQgN,SACtB,WAAchN,EAAQiI,eACtB,cAAiBjI,EAAQiN,YACzB,YAAejN,EAAQkN,gBACvB,UAAalN,EAAQuM,QACrB,aAAgBZ,KAAKwB,iBACrB,aAAgBxB,KAAKyB,UACrB,iBAAoBT,GAEhB1F,EAAW,CACf,SAAYmF,OAAQiB,cACpB,OAAUjB,OAAQkB,YAClB,UAAalB,OAAQmB,gBAEvB,OAAOnB,OAAQoB,SAAS,6BAA8B,CACpD,gBAAmBjH,EACnB,kBAAqBU,EACrB,iBAAoB2F,IAID,0BACrB,aAAcR,OAAQC,QAAQ,oCAAoC,oBAGxD,aAAClN,GACX,MAAMsO,QAA4B9B,KAAK+B,oBACjCC,EAAe,GACrB,IAAK,MAAMnM,KAASrC,EAClBwO,EAAa3L,KACX,CACE,WAAcR,EAAMmC,WACpB,iBAAqBsI,OAAe2B,eAAepM,EAAMiC,MAAME,YAC/DF,MAAO,CACL,WAAcjC,EAAMiC,MAAME,WAC1B,iBAAoB8J,EACpB,iBAAoBxB,OAAe2B,eAAepM,EAAMiC,MAAMoK,gBAKtE,OAAOF,EAGQ,kBAACf,EAAa5M,GAC7B,MAAM8N,EAAe,IAAIC,OACnBC,EAAoBhO,EAAQkN,gBAC5Be,EAAcjO,EAAQ+M,cACtBmB,EAAiB,GACvB,IAAI,MAAM1M,KAASoL,EAAQ,CACzB,MAAMuB,EAAgB3M,EAAMI,WAAY,KAAMJ,EAAME,SAAS,GAAGE,WAChEsM,EAAKlM,KAAK,uCACeR,EAAME,SAAS,GAAGC,iBACvC,wBAAwBqM,EACxB,iBAAiBC,EACjB,gBAAgBE,EAChB,iBAAiBpK,OAAQC,2BAA2BxC,EAAMM,qBAI1DgM,EAAaM,eAAeF,GAAM,M,uHCjG5C,SAASG,EAAYtI,EAA4BjB,GAC7C,IAAM+B,EAAQ,GACRyH,EAAU,EAAE,EAAG,GAAI,UAAMC,GAE/B,IAAI,IAAMC,KAAQ1J,EACd,GAAM0J,KAAQzI,EAAd,CAGA,IAAM7D,EAAQ6D,EAAMyI,GAChBF,EAAQG,SAASvM,GACjB2E,EAAM7E,MAAK,GAIf6E,EAAM7E,KAAK8C,EAAW0J,GAAMtM,EAAO6D,IAEvC,OAAOc,EAAM6H,MAAMlD,SAQvB,SAASmD,EAAgBrH,GACrB,OAAOA,EAASe,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEpE,SAAWqE,EAAErE,UAAY,EAAI,KAW5D,SAAUqD,EACZxB,EACA6I,GAEc,IADdC,EACc,uDADP,GACPC,EAAc,uDAAF,GAENC,EAAU,GAChB,IAAI,IAAMC,KAAkBJ,EAAY,CACpC,IAAMzP,EAA2ByP,EAAWI,GAEtCC,EAAoB,CACrB9P,EAAK0P,QAAUA,GAAU1P,EAAK0P,QAAUA,EACxC1P,EAAK2P,aAAeA,GACd3P,EAAK2P,aAAeA,GAG3BG,EAAkBC,KAAK1D,UAIvB6C,EAAYtI,EAAO5G,EAAK2F,cACxB3F,EAAKgQ,MAAQH,EACT7P,EAAKiQ,cACLjQ,EAAKiQ,YAAYC,KAAOlQ,EAAKiQ,YAAYE,KAAKvJ,IAElDgJ,EAAQ/M,KAAK7C,IAGrB,OAAOwP,EAAgBI","file":"js/chunk-a7c378ee.f185d5f1.js","sourcesContent":["import { resolveDynamicComponent as _resolveDynamicComponent, openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return (_openBlock(), _createBlock(_resolveDynamicComponent(_ctx.formType), {\n    fields: _ctx.fields,\n    skipSummary: _ctx.skipSummary,\n    activeField: _ctx.activeField,\n    cancelDestinationPath: _ctx.cancelDestinationPath,\n    onOnFinish: _ctx.onFinish,\n    onFinish: _ctx.onFinishAction,\n    onOnIndex: _ctx.onIndex\n  }, null, 8, [\"fields\", \"skipSummary\", \"activeField\", \"cancelDestinationPath\", \"onOnFinish\", \"onFinish\", \"onOnIndex\"]))\n}","\nimport TouchScreenForm from \"@/components/Forms/TouchScreenForm.vue\";\nimport { defineComponent, PropType } from \"vue\";\nimport { Field } from \"./FieldInterface\";\n\nexport default defineComponent({\n    name: \"HisStandardForm\",\n    components: { TouchScreenForm },\n    emits: [\n        'onFinish',\n        'onIndex'\n    ],\n    data: () => ({\n        formType: 'touch-screen-form' as string\n    }),\n    props: {\n        onFinishAction: {\n            type: Function\n        },\n        skipSummary: {\n            type: Boolean,\n            default: false\n        },\n        activeField: {\n            type: String\n        },\n        fields: {\n            type: Object as PropType<Field[]>,\n            required: true\n        },\n        cancelDestinationPath: {\n            type: String,\n            required: false,\n        }\n    },\n    methods: {\n        onFinish(formData: any, computedData: any) {\n            this.$emit('onFinish', formData, computedData)\n        },\n        onIndex(i: number) {\n            this.$emit('onIndex', i)\n        }\n    }\n})\n","import { render } from \"./radiology.vue?vue&type=template&id=0acd0010&ts=true\"\nimport script from \"./radiology.vue?vue&type=script&lang=ts\"\nexport * from \"./radiology.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/andrew-dev/Projects/HIS-Core/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { infoActionSheet, optionsActionSheet } from \"@/utils/ActionSheets\";\nimport { GuideLineInterface } from \"@/utils/GuidelineEngine\";\nimport HisDate from '@/utils/Date'\n\nexport enum FlowState {\n    SET_PROVIDER = 'SET_PROVIDER',\n    CHANGE_SESSION_DATE = 'change_session_date',\n    GO_TO_PATIENT_DASHBOARD = 'go_to_patient_dashboard',\n    CHANGE_PATIENT_OUTCOME = 'change_outcome',\n    CONTINUE = 'continue',\n    EXIT = 'exit'\n}\nconst dformat = (d: string) => HisDate.toStandardHisDisplayFormat(d)\n\nexport const ENCOUNTER_GUIDELINES: Record<string, GuideLineInterface> = {\n    \"Warn if attempting to create new encounters for a deceased patient\": {\n        priority: 1,\n        actions: {\n            alert: async ({ outcomeStartDate }: any) => {\n                const action = await infoActionSheet(\n                    'Data Integrity Issue Found',\n                    `Patient died on ${dformat(outcomeStartDate)}`,\n                    'Proceeding with this outcome might affect accuracy of some reports',\n                    [\n                        { name: 'Cancel', slot: 'end', color: 'primary'},\n                        { name: 'Change outcome', slot: 'end', color: 'primary'},\n                        { name: 'Continue Anyway', slot: 'end', color: 'danger'}\n                    ]\n                )\n                return action === 'Cancel'\n                    ? FlowState.GO_TO_PATIENT_DASHBOARD\n                    : action === 'Change outcome'\n                    ? FlowState.CHANGE_PATIENT_OUTCOME\n                    : FlowState.CONTINUE\n            }\n        },\n        conditions: {\n            outcome(outcome: string) {\n                return outcome === 'Patient died'\n            },\n            outcomeStartDate(startDate: string, { sessionDate }: any) {\n                return sessionDate >= startDate\n            }\n        }\n    },\n    \"A patient's date of birth must not be less than Session Date\": {\n        priority: 2,\n        actions: {\n            alert: async ({ birthDate, sessionDate}: any) => {\n                const action = await infoActionSheet(\n                    'Data integrity issue found', '',\n                    `Session date ${dformat(sessionDate)} is less than birth date of ${dformat(birthDate)}`,\n                    [\n                        { name: 'Cancel', slot: 'end', color: 'danger'},\n                        { name: 'Change session date', slot: 'end', color: 'success'}\n                    ]\n                )\n                return action === 'Change session date'\n                    ? FlowState.CHANGE_SESSION_DATE\n                    : FlowState.GO_TO_PATIENT_DASHBOARD\n            }\n        },\n        conditions: {\n            birthDate(birthDate: string, { sessionDate }: any) {\n                return sessionDate < birthDate\n            }\n        }\n    },\n    \"Select Encounter provider when in back data entry\": {\n        priority: 3,\n        actions: {\n            selection: async ({ providers, encounterName, sessionDate, apiDate }: any) => {\n                const modal = await optionsActionSheet(\n                    `Please select a provider for ${encounterName}`,\n                    `BDE: ${dformat(sessionDate)} | Current: ${dformat(apiDate)}`,\n                    providers,\n                    [\n                        { name: 'Cancel', color: 'danger', slot: 'start', role: 'default'},\n                        { name: 'Confirm', slot: 'end', role: 'action' }\n                    ]\n                )\n                return modal.action === 'Cancel' \n                    ? { value: -1, flowState: FlowState.GO_TO_PATIENT_DASHBOARD }\n                    : { value: modal.selection, flowState: FlowState.SET_PROVIDER }\n            }\n        },\n        conditions: {\n            isBdeMode(isBDE: boolean) {\n                return isBDE\n            }\n        }\n    }\n}","import script from \"./EncounterMixin.vue?vue&type=script&lang=ts\"\nexport * from \"./EncounterMixin.vue?vue&type=script&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { render } from \"./HisStandardForm.vue?vue&type=template&id=6daa0375&ts=true\"\nimport script from \"./HisStandardForm.vue?vue&type=script&lang=ts\"\nexport * from \"./HisStandardForm.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/andrew-dev/Projects/HIS-Core/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { AppEncounterService } from \"@/services/app_encounter_service\"\nimport { ConceptService } from '@/services/concept_service';\nimport { PrintoutService } from \"@/services/printout_service\";\nimport { Service } from \"@/services/service\";\nimport { Patientservice } from \"@/services/patient_service\";\nimport { isEmpty } from \"lodash\";\nimport HisDate from \"@/utils/Date\";\n\nexport class PatientRadiologyService extends AppEncounterService {\n  constructor(patientID: number, providerID: number) {\n    super(patientID, 121, providerID) \n  }\n\n  static async getRadiologyList(radiologyType: string, filter = '') {\n    return ConceptService.getConceptSet(radiologyType, filter) \n  }\n\n  async getRadiologyObs(patientId: number) {\n    try {\n      const path = 'radiology/radiology_orders?patient_id='+patientId\n      const data = await Service.getJson(path)\n      return data\n    } catch (error) {\n      return 0\n    }\n  }\n\n  async showPreviousRadiolgy(patient: any): Promise<boolean> {\n    if ( (await this.getRadiologyObs(patient.getID())).length > 0 ) {\n      return true\n    }\n    return false\n  }\n\n  async getPreviousRadiologyExaminations(patient: any): Promise<any>{\n    const thirdpartyapps  =  await Service.getThirdpartyApps()\n    let url = '' \n    for (const app of thirdpartyapps) {\n      if(app.name == 'pacs') {\n        url = app.url\n      }\n    }\n    if (isEmpty(url)) {\n      url = `opd/encounters/radiology/${this.patientID}`\n    }\n    const data =  await this.getRadiologyObs(patient.getID())\n    if(!(data.length > 0)) { \n      return false;\n    } else {\n      return { data: data, url: url}\n    }\n  }\n\n  async submitToPacs(savedObsData: any, patient: any) {\n    let accessionNumber\n    for(const order of savedObsData) {\n      accessionNumber = order.children[0].accession_number\n    }\n    const orders = await Promise.all(savedObsData.map(async (order: any) => ({\n      \"main_value_text\": order.value_text,\n      \"obs_id\": order.obs_id,\n      \"sub_value_text\": order.children[0].value_text\n    })))\n    const patientData = {\n      \"patient_name\": patient.getFullName(),\n      \"patientAge\": patient.getAge(),\n      \"patientDOB\": patient.getBirthdate(),\n      \"patientGender\": patient.getGender(),\n      \"national_id\": patient.getNationalID(),\n      \"person_id\": patient.getID(),\n      \"encounter_id\": this.getEncounterID(),\n      \"date_created\": this.getDate(),\n      \"accession_number\": accessionNumber\n    }\n    const provider = {\n      \"username\": Service.getUserName(),\n      \"userID\": Service.getUserID(),\n      \"userRoles\": Service.getUserRoles(),\n    }\n    return Service.postJson(`radiology/radiology_orders`, {\n      'patient_details': patientData,\n      'physician_details': provider,\n      'radiology_orders': orders\n    }) \n  }\n\n  async getAccesionNumber() {\n    return (await Service.getJson(`sequences/next_accession_number`))['accession_number']\n  }\n\n  async obsObj(data: Array<any>) {\n    const lastAccessionNumber = await this.getAccesionNumber()\n    const observations = [] as Array<any>\n    for (const order of data) {\n      observations.push(\n        {\n          'concept_id': order.concept_id, \n          'value_text':  await ConceptService.getConceptName(order.child.concept_id),\n          child: {\n            'concept_id': order.child.concept_id,\n            'accession_number': lastAccessionNumber,\n            'value_text': await ConceptService.getConceptName(order.child.value_coded)\n          }\n        }\n      )\n    }\n    return observations\n  } \n\n  async printOrders(orders: any, patient: Patientservice) {\n    const printService = new PrintoutService()\n    const patientNationalId = patient.getNationalID()\n    const patientName = patient.getFullName()\n    const urls: string[] = [];\n    for(const order of orders) {\n      const fullXrayOrder = order.value_text +\": \"+ order.children[0].value_text\n      urls.push(`/radiology/barcode`\n        + `?accession_number=${order.children[0].accession_number}`\n        + `&patient_national_id=${patientNationalId}`\n        + `&patient_name=${patientName}`\n        + `&radio_order=${fullXrayOrder}`\n        + `&date_created=${HisDate.toStandardHisDisplayFormat(order.obs_datetime)}`\n      )\n    }\n\n    await printService.batchPrintLbls(urls, true)\n  }\n}","/**\n * Compares patient facts against a predefined guideline Object.\n*/\nexport interface DescriptionInterface {\n    color?: 'primary' | 'secondary' | 'danger' | 'warning';\n    info: Function;\n    text?: string;\n    show: 'onChecked' | 'always';\n}\n\nexport interface GuideLineInterface {\n    title?: string;\n    concept?: string;\n    priority: number;\n    conditions: Record<string, Function>;\n    actions?: Record<string, any>; //TODO: should <key, Function>\n    data?: Record<string, any>;\n    description?: DescriptionInterface;\n    target?: string;\n    targetEvent?: string;\n}\n\n/**\n * Match the facts with guidelines\n * @param facts \n * @param conditions \n * @returns \n */\nfunction isCondition(facts: Record<string, any>, conditions: Record<string, Function>): boolean {\n    const state = [] \n    const ignored = [-1, '', null, undefined]\n\n    for(const prop in conditions) {\n        if (!(prop in facts)) \n            continue\n        \n        const value = facts[prop]\n        if (ignored.includes(value)) {\n            state.push(false)\n            continue\n        }\n\n        state.push(conditions[prop](value, facts))\n    }\n    return state.every(Boolean)\n}\n\n/**\n * Sort guidelines in the order of importance/relevance\n * @param findings \n * @returns \n */\nfunction sortByRelevance(findings: Array<GuideLineInterface>) {\n    return findings.sort((a, b) => a.priority < b.priority ? -1 : 1)\n}\n\n/**\n * Check the guideline for matching facts and return matching object \n * @param facts: key value pair for used for searching in guidelines\n * @param guidelines: A dictionary containing fixed rules/validations that conforms to GuideLineInterface\n * @param target: Used for matching a target defined in a guidlines before executing conditions\n * @param targetEvent: used for matching a target event in a guideline before executing conditions\n * @returns\n */\nexport function matchToGuidelines(\n    facts: Record<string, any>, \n    guidelines: Record<string, GuideLineInterface>,\n    target='', \n    targetEvent=''): Array<GuideLineInterface> {\n\n    const matches = []\n    for(const guidelineIndex in guidelines) {\n        const data: GuideLineInterface = guidelines[guidelineIndex]\n \n        const targetValidations = [\n            (data.target && target && data.target != target),\n            (data.targetEvent && targetEvent \n                && data.targetEvent != targetEvent)\n        ]\n\n        if (targetValidations.some(Boolean)) {\n            continue\n        }\n\n        if (isCondition(facts, data.conditions)) {\n            data.title = guidelineIndex\n            if (data.description) {\n                data.description.text = data.description.info(facts)\n            }\n            matches.push(data)\n        }\n    }\n    return sortByRelevance(matches)\n}\n"],"sourceRoot":""}