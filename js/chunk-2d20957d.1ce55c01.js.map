{"version":3,"sources":["webpack:///./src/apps/RADIOLOGY/views/encounters/RadiologyAppointment.vue?8f3e","webpack:///./src/apps/RADIOLOGY/views/encounters/RadiologyAppointment.vue","webpack:///./src/apps/RADIOLOGY/views/encounters/RadiologyAppointment.vue?72c3"],"names":["render","_ctx","_cache","$props","$setup","$data","$options","_component_his_standard_form","_resolveComponent","_openBlock","_createBlock","fields","onFinishAction","onFinish","skipSummary","cancelDestinationPath","cancelDestination","defineComponent","mixins","EncounterMixinVue","components","HisStandardForm","data","appointmentDate","maxAppointmentDate","appointment","watch","ready","handler","AppointmentService","patientID","providerID","init","immediate","methods","_","computedData","createEncounter","resolveObs","saveObservationList","gotoPatientDashboard","this","getSessionDate","dayjs","add","format","getFields","id","helpText","type","FieldType","TT_APPOINTMENTS_ENTRY","validation","val","Validation","required","computedValue","d","tag","obs","buildValueDate","value","config","patientAge","patient","getAge","hideRunoutDate","hiddenFooterBtns","options","label","other","runOutDate","__exports__"],"mappings":"uIAEM,SAAUA,EAAOC,EAAMC,EAAQC,EAAQC,EAAQC,EAAOC,GAC1D,IAAMC,EAA+BC,8BAAkB,qBAEvD,OAAQC,yBAAcC,yBAAaH,EAA8B,CAC/DI,OAAQV,EAAKU,OACbC,eAAgBX,EAAKY,SACrBC,aAAa,EACbC,sBAAuBd,EAAKe,mBAC3B,KAAM,EAAG,CAAC,SAAU,iBAAkB,0B,6GCC5BC,+BAAgB,CAC7BC,OAAQ,CAACC,QACTC,WAAY,CAAEC,wBACdC,KAAM,iBAAO,CACXC,gBAAiB,GACjBC,mBAAoB,GACpBC,YAAa,KAEfC,MAAO,CACLC,MAAO,CACCC,QADD,SACSD,GAAc,wJACtBA,IACF,EAAKF,YAAc,IAAII,OAAmB,EAAKC,UAAW,EAAKC,YAC/D,EAAKC,QAHmB,8CAM5BC,WAAW,IAGfC,QAAS,CACDrB,SADC,SACQsB,EAAQC,GAAiB,wKAChC,EAAKX,YAAYY,kBADe,mBAEhC,EAAKZ,YAF2B,SAG7B,EAAKa,WAAWF,EAAc,OAHD,wCAEfG,oBAFe,uBAKtC,EAAKC,uBALiC,8CAOxCR,KARO,WASHS,KAAKlB,gBAAkBM,OAAmBa,iBAC1CD,KAAKjB,mBAAqBmB,IAAMF,KAAKlB,iBAChCqB,IAAI,IAAK,QACTC,OAAO,cACZJ,KAAK9B,OAAS8B,KAAKK,aAGvBA,UAhBO,WAgBE,WACP,MAAO,CACL,CACEC,GAAI,kBACJC,SAAU,uBACVC,KAAMC,OAAUC,sBAChBC,WAAY,SAACC,GAAD,OAAcC,OAAWC,SAASF,IAC9CG,cAAe,SAACC,GACd,MAAO,CACLC,IAAK,MACLC,IAAK,CACH,EAAKlC,YAAYmC,eAAe,mBAAoBH,EAAEI,UAI5DC,OAAQ,CACNC,WAAYtB,KAAKuB,QAAQC,SACzBC,gBAAgB,EAChBC,iBAAkB,CAChB,UAGJC,QAAS,WAAQ,MAAO,CAAC,CACvBC,MAAO,GACPR,MAAO,GACPS,MAAO,CACNC,WAAa,EAAK/C,mBAClBD,gBAAiB,EAAKA,0B,qBCpEnC,MAAMiD,EAA2B,IAAgB,EAAQ,CAAC,CAAC,SAASxE,KAErD","file":"js/chunk-2d20957d.1ce55c01.js","sourcesContent":["import { resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_his_standard_form = _resolveComponent(\"his-standard-form\")\n\n  return (_openBlock(), _createBlock(_component_his_standard_form, {\n    fields: _ctx.fields,\n    onFinishAction: _ctx.onFinish,\n    skipSummary: true,\n    cancelDestinationPath: _ctx.cancelDestination\n  }, null, 8, [\"fields\", \"onFinishAction\", \"cancelDestinationPath\"]))\n}","\nimport { defineComponent } from \"vue\";\nimport { Field, Option } from \"@/components/Forms/FieldInterface\"\nimport { FieldType } from \"@/components/Forms/BaseFormElements\";\nimport HisStandardForm from \"@/components/Forms/HisStandardForm.vue\";\nimport Validation from \"@/components/Forms/validations/StandardValidations\";\nimport { toastWarning, toastSuccess } from \"@/utils/Alerts\"\nimport EncounterMixinVue from '../../../../views/EncounterMixin.vue';\nimport {AppointmentService} from '@/apps/ART/services/appointment_service'\nimport dayjs from \"dayjs\";\n\nexport default defineComponent({\n  mixins: [EncounterMixinVue],\n  components: { HisStandardForm },\n  data: () => ({\n    appointmentDate: \"\" as any,\n    maxAppointmentDate: \"\" as any,\n    appointment: {} as any    \n  }),\n  watch: {\n    ready: {\n      async handler(ready: boolean) {\n        if (ready) {\n          this.appointment = new AppointmentService(this.patientID, this.providerID)\n          this.init()\n        }\n      },\n      immediate: true\n    },\n  },\n  methods: {\n    async onFinish(_: any, computedData: any) {\n      await this.appointment.createEncounter()\n      await this.appointment.saveObservationList(\n        (await this.resolveObs(computedData, 'obs'))\n      )\n      this.gotoPatientDashboard()\n    },\n    init() {\n        this.appointmentDate = AppointmentService.getSessionDate();\n        this.maxAppointmentDate = dayjs(this.appointmentDate)\n            .add(100, 'year')\n            .format('YYYY-MM-DD')\n        this.fields = this.getFields()\n     \n    },\n    getFields(): Array<Field> {\n      return [\n        {\n          id: \"set_appointment\",\n          helpText: \"Appointments booking\",\n          type: FieldType.TT_APPOINTMENTS_ENTRY,\n          validation: (val: any) => Validation.required(val),\n          computedValue: (d: Option) => {\n            return {\n              tag: 'obs',\n              obs: [\n                this.appointment.buildValueDate('Appointment date', d.value),\n                ]\n            }\n          },\n          config: {\n            patientAge: this.patient.getAge(),\n            hideRunoutDate: true,\n            hiddenFooterBtns: [\n              'Clear'\n            ]\n          },\n          options: () =>  {return [{\n            label: \"\",\n            value: \"\",\n            other: {\n             runOutDate : this.maxAppointmentDate,\n             appointmentDate: this.appointmentDate\n            }\n          }]}\n        }\n      ]\n    }\n  }\n});\n","import { render } from \"./RadiologyAppointment.vue?vue&type=template&id=ae549056&ts=true\"\nimport script from \"./RadiologyAppointment.vue?vue&type=script&lang=ts\"\nexport * from \"./RadiologyAppointment.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/andrew-dev/Projects/HIS-Core/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"sourceRoot":""}